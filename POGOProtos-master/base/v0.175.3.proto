/*
* Copyright 2016-2020 --=FurtiF=-- Co., Ltd.
*
* Licensed under the
*	Educational Community License, Version 2.0 (the "License"); you may
*	not use this file except in compliance with the License. You may
*	obtain a copy of the License at
*
*	http://www.osedu.org/licenses/ECL-2.0
*
*	Unless required by applicable law or agreed to in writing,
*	software distributed under the License is distributed on an "AS IS"
*	BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
*	or implied. See the License for the specific language governing
*	permissions and limitations under the License.
*/

syntax = "proto3";
package POGOProtos.Rpc;

enum ArMode {
	AR_MODE_NONE = 0;
	AR_MODE_ARSTANDARD = 1;
	AR_MODE_ARPLUS = 2;
}

enum ArToggleContext {
	AR_TOGGLE_CONTEXT_ENCOUNTER = 0;
}

enum AssetBundleStatus {
	ASSET_BUNDLE_STATUS_UNLOADED = 0;
	ASSET_BUNDLE_STATUS_LOADING = 1;
	ASSET_BUNDLE_STATUS_LOADED = 2;
	ASSET_BUNDLE_STATUS_FAILED = 3;
}

message HashedKeyProto {
	string hashed_key_raw = 1;
}

message JournalAddEntryProto {
	HashedKeyProto hashed_key = 1;
	int64 entry_size = 2;
}

message JournalEntryProto {
	JournalAddEntryProto add_entry = 1;
	JournalReadEntryProto read_entry = 2;
	JournalRemoveEntryProto remove_entry = 3;
}

message JournalReadEntryProto {
	HashedKeyProto hashed_key = 1;
}

message JournalRemoveEntryProto {
	HashedKeyProto hashed_key = 1;
}

message JournalVersionProto {
	int32 version = 1;
}

enum IdentityProvider {
	PLATFORM_IDENTITY_PROVIDER_UNSET_IDENTITY_PROVIDER = 0;
	PLATFORM_IDENTITY_PROVIDER_GOOGLE = 1;
	PLATFORM_IDENTITY_PROVIDER_PTC = 2;
	PLATFORM_IDENTITY_PROVIDER_FACEBOOK = 3;
	PLATFORM_IDENTITY_PROVIDER_BACKGROUND = 4;
	PLATFORM_IDENTITY_PROVIDER_INTERNAL = 5;
	PLATFORM_IDENTITY_PROVIDER_SFIDA = 6;
	PLATFORM_IDENTITY_PROVIDER_SUPER_AWESOME = 7;
	PLATFORM_IDENTITY_PROVIDER_DEVELOPER = 8;
	PLATFORM_IDENTITY_PROVIDER_SHARED_SECRET = 9;
	PLATFORM_IDENTITY_PROVIDER_POSEIDON = 10;
	PLATFORM_IDENTITY_PROVIDER_NINTENDO = 11;
	PLATFORM_IDENTITY_PROVIDER_APPLE = 12;
}

message PlatformBackgroundToken {
	bytes token = 1;
	int64 expiration_time = 2;
	bytes iv = 3;
}

message PlatformRegisterBackgroundDeviceActionProto {
	string device_type = 1;
	string device_id = 2;
}

message PlatformRegisterBackgroundDeviceResponseProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	PlatformBackgroundToken token = 1;
}

enum AvatarCompletion {
	AVATAR_COMPLETION_SUCCESS = 0;
	AVATAR_COMPLETION_QUIT = 1;
}

message BattlePartiesProto {
	repeated BattlePartyProto battle_parties = 1;
}

message BattlePartyProto {
	string name = 1;
	int32 team_number = 2;
	repeated fixed64 ids = 3;
	string combat_league_id = 4;
}

message PlatformBackgroundModeClientSettingsProto {
	int64 maximum_sample_age_ms = 1;
	bool accept_manual_fitness_samples = 2;
	double minimum_location_accuracy_meters = 3;
	int32 background_wake_up_interval_minutes = 4;
	int32 max_upload_size_in_bytes = 5;
	double min_enclosing_geofence_radius_m = 6;
	int64 background_token_refresh_interval_s = 7;
}

enum ClientInboxServiceNotificationCategory {
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_NONE = 0;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_GYM_REMOVAL = 1;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_POKEMON_HUNGRY = 2;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_EXCLUSIVE_RAID_INVITE = 3;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_EXCLUSIVE_RAID_CANCELLATION = 4;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_SHARED_EXCLUSIVE_RAID_INVITE = 5;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_GIFTBOX_INCOMING = 6;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_GIFTBOX_DELIVERED = 7;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_FRIENDSHIP_MILESTONE_REWARD = 8;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_GYM_BATTLE_FRIENDSHIP_INCREMENT = 9;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BGMODE_EGG_HATCH = 10;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BGMODE_BUDDY_CANDY = 11;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BGMODE_WEEKLY_FITNESS_REPORT = 12;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BGMODE_OFF_SESSION_DISTANCE = 13;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BGMODE_POI_PROXIMITY = 14;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BGMODE_NAMED_BUDDY_CANDY = 15;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_APP_BADGE_ONLY = 16;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_COMBAT_CHALLENGE_OPENED = 17;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_LUCKY_FRIEND = 18;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BUDDY_HUNGRY = 19;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BUDDY_FOUND_GIFT = 20;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BUDDY_AFFECTION_LEVEL_MILESTONE = 21;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BUDDY_AFFECTION_WALKING = 22;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BUDDY_AFFECTION_CARE = 23;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BUDDY_AFFECTION_BATTLE = 24;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BUDDY_AFFECTION_PHOTO = 25;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BUDDY_AFFECTION_POI = 26;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BUDDY_ATTRACTIVE_POI = 27;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_FRIEND_INVITE_RECEIVED = 28;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_FRIEND_INVITE_ACCEPTED = 29;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_COMBAT_VS_SEEKER_CHARGED = 30;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_COMBAT_COMPETITIVE_SEASON_END = 31;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BUDDY_AFFECTION_ATTRACTIVE_POI = 32;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_POI_PASSCODE_REDEEMED = 33;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_NO_EGGS_INCUBATING = 34;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_RETENTION_UNOPENED_GIFTS = 39;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_RETENTION_STARPIECE = 40;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_RETENTION_INCENSE = 41;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_RETENTION_LUCKY_EGG = 42;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_RETENTION_ADVSYNC_REWARDS = 43;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_RETENTION_EGGS_NOT_INCUBATING = 44;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_RETENTION_POWER_WALK = 45;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_RETENTION_FUN_WITH_FRIENDS = 46;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BUDDY_REMOTE_GIFT = 47;
	CLIENT_INBOX_SERVICE_NOTIFICATION_CATEGORY_BGMODE_BUDDY_REMOTE_GIFT = 48;
}

message PlatformDeveloperToken {
	string id_token = 1;
	string owner_email = 2;
}

message PlatformClientGameMasterTemplateProto {
	string template_id = 1;
	bytes data = 2;
}

message PlatformDownloadGmTemplatesRequestProto {
	int64 basis_batch_id = 1;
	int64 batch_id = 2;
	int32 page_offset = 3;
	bool apply_experiments = 4;
	repeated int32 basis_experiment_id = 5;
	repeated int32 experiment_id = 6;
}

message PlatformDownloadGmTemplatesResponseProto {
	enum Result {
		UNSET = 0;
		COMPLETE = 1;
		MORE_RESULTS = 2;
		BATCH_ID_NOT_LIVE = 3;
		INVALID_BASIS_BATCH_ID = 4;
		WRONG_EXPERIMENTS = 5;
	}

	Result result = 1;
	repeated PlatformClientGameMasterTemplateProto template = 2;
	repeated string deleted_template = 3;
	uint64 batch_id = 4;
	int32 page_offset = 5;
	repeated int32 experiment_id = 6;
}

enum BattleResultsExit {
	BATTLE_RESULTS_EXIT_LEAVE_GYM = 0;
	BATTLE_RESULTS_EXIT_LEAVE_BATTLE = 1;
	BATTLE_RESULTS_EXIT_CONTINUE_BATTLE = 2;
}

enum CalendarAddResult {
	CALENDAR_ADD_RESULT_UNKNOWN = 0;
	CALENDAR_ADD_RESULT_PERMISSION_DENIED = -2;
	CALENDAR_ADD_RESULT_NOT_ADDED = -1;
	CALENDAR_ADD_RESULT_ADDED = 1;
}

enum PlayerOnboardingPath {
	PLAYER_ONBOARDING_PATH_UNSET = 0;
	PLAYER_ONBOARDING_PATH_V1 = 1;
	PLAYER_ONBOARDING_PATH_V2 = 2;
}

enum PokedexGenerationId {
	POKEDEX_GENERATION_ID_GEN1 = 0;
	POKEDEX_GENERATION_ID_GEN2 = 1;
	POKEDEX_GENERATION_ID_GEN3 = 2;
	POKEDEX_GENERATION_ID_GEN4 = 3;
	POKEDEX_GENERATION_ID_GEN5 = 4;
	POKEDEX_GENERATION_ID_GEN6 = 5;
	POKEDEX_GENERATION_ID_GEN7 = 6;
	POKEDEX_GENERATION_ID_GEN8 = 7;
	POKEDEX_GENERATION_ID_MELTAN = 1001;
}

enum IncidentDynamicStringTypes {
	INCIDENT_DYNAMIC_STRING_TYPES_GREETING = 0;
	INCIDENT_DYNAMIC_STRING_TYPES_CHALLENGE = 1;
	INCIDENT_DYNAMIC_STRING_TYPES_DEFEAT = 2;
	INCIDENT_DYNAMIC_STRING_TYPES_VICTORY = 3;
	INCIDENT_DYNAMIC_STRING_TYPES_PRE_BATTLE = 4;
	INCIDENT_DYNAMIC_STRING_TYPES_POST_BATTLE = 5;
	INCIDENT_DYNAMIC_STRING_TYPES_ITEMS_STOLEN = 6;
	INCIDENT_DYNAMIC_STRING_TYPES_TUTORIAL = 7;
	INCIDENT_DYNAMIC_STRING_TYPES_COMBAT_QUOTE = 8;
	INCIDENT_DYNAMIC_STRING_TYPES_CANDELA_INSPIRE = 9;
	INCIDENT_DYNAMIC_STRING_TYPES_BLANCHE_INSPIRE = 10;
	INCIDENT_DYNAMIC_STRING_TYPES_SPARK_INSPIRE = 11;
	INCIDENT_DYNAMIC_STRING_TYPES_GRUNT_DECOY = 12;
	INCIDENT_DYNAMIC_STRING_TYPES_COMBAT_DECOY_QUOTE = 13;
}

enum IncidentLeaderStringTypes {
	INCIDENT_LEADER_STRING_TYPES_ONBOARDING_INTRODUCTION = 0;
	INCIDENT_LEADER_STRING_TYPES_ONBOARDING_ENCOUNTER = 1;
	INCIDENT_LEADER_STRING_TYPES_ONBOARDING_SHADOW = 2;
	INCIDENT_LEADER_STRING_TYPES_ONBOARDING_MAP_FRAGMENT = 3;
	INCIDENT_LEADER_STRING_TYPES_ONBOARDING_MAP_1 = 4;
	INCIDENT_LEADER_STRING_TYPES_ONBOARDING_MAP_2 = 5;
	INCIDENT_LEADER_STRING_TYPES_INSPIRE = 6;
	INCIDENT_LEADER_STRING_TYPES_MAP_TIME_WARNING = 7;
	INCIDENT_LEADER_STRING_TYPES_MAP_EMPTY_WARNING = 8;
}

message PlatformInternalAuthProto {
	string email = 1;
	string player_id = 2;
	string app_id = 3;
	string key = 4;
}

message PlatformGetInventoryProto {
	int64 timestamp_millis = 1;
}

message PlatformGetInventoryResponseProto {
	bool success = 1;
	PlatformInventoryDeltaProto inventory_delta = 2;
}

message PlatformInventoryDeltaProto {
	int64 original_timestamp = 1;
	int64 new_timestamp = 2;
	repeated PlatformInventoryItemProto inventory_item = 3;
}

message PlatformInventoryItemProto {
	int64 modified_timestamp = 1;
	bytes deleted_item_key = 2;
	bytes item = 3;
}

message PlatformInventoryProto {
	repeated PlatformInventoryItemProto inventory_item = 1;
}

enum IncubationResult {
	INCUBATION_RESULT_SUCCESS = 0;
	INCUBATION_RESULT_FAILURE = 1;
}

message PlatformProxyRequestProto {
	uint32 action = 1;
	string host = 2;
	bytes payload = 3;
}

message PlatformProxyResponseProto {
	enum Status {
		UNSET = 0;
		COMPLETED = 1;
		COMPLETED_AND_REASSIGNED = 2;
		ACTION_NOT_FOUND = 3;
		ASSIGNMENT_ERROR = 4;
		PROXY_UNAUTHORIZED_ERROR = 5;
		INTERNAL_ERROR = 6;
		BAD_REQUEST = 7;
		ACCESS_DENIED = 8;
		TIMEOUT_ERROR = 9;
		RATE_LIMITED = 10;
	}

	Status status = 1;
	string assigned_host = 2;
	bytes payload = 3;
}

enum POIDecorationFollowFlags {
	POI_DECORATION_FOLLOW_FLAGS_POIDECORATIONFOLLOWFLAGS_AUTO_INVALID = 0;
	POI_DECORATION_FOLLOW_FLAGS_FOLLOW_X = 1;
	POI_DECORATION_FOLLOW_FLAGS_FOLLOW_Y = 2;
	POI_DECORATION_FOLLOW_FLAGS_FOLLOW_Z = 4;
}

enum POIDecorationProperties {
	POI_DECORATION_PROPERTIES_COLOR = 0;
	POI_DECORATION_PROPERTIES_POSITION = 1;
	POI_DECORATION_PROPERTIES_SIZE = 2;
	POI_DECORATION_PROPERTIES_TEXT = 3;
	POI_DECORATION_PROPERTIES_ACTIVE = 4;
	POI_DECORATION_PROPERTIES_ICON = 5;
	POI_DECORATION_PROPERTIES_SET_RAID_DATA = 6;
	POI_DECORATION_PROPERTIES_NEARBY_CARROT_VISIBLE = 7;
	POI_DECORATION_PROPERTIES_SET_LOWEST_MOTIVATION = 8;
	POI_DECORATION_PROPERTIES_SET_NPC_CLICKED_ACTION = 9;
	POI_DECORATION_PROPERTIES_BEGIN_EXIT = 10;
}

enum PoiSubmissionTutorialPage {
	POI_SUBMISSION_TUTORIAL_PAGE_WHAT_IS_POKESTOP = 0;
	POI_SUBMISSION_TUTORIAL_PAGE_SUBMIT_FOR_REVIEW = 1;
	POI_SUBMISSION_TUTORIAL_PAGE_HOW_TO_CHOOSE_A_LOCATION = 2;
	POI_SUBMISSION_TUTORIAL_PAGE_DESCRIBE_A_LOCATION = 3;
}

enum CentralState {
	CENTRAL_STATE_UNKNOWN = 0;
	CENTRAL_STATE_RESETTING = 1;
	CENTRAL_STATE_UNSUPPORTED = 2;
	CENTRAL_STATE_UNAUTHORIZED = 3;
	CENTRAL_STATE_POWERED_OFF = 4;
	CENTRAL_STATE_POWERED_ON = 5;
}

enum DeviceKind {
	DEVICE_KIND_POKEMON_GO_PLUS = 0;
	DEVICE_KIND_POKE_BALL_PLUS = 1;
}

enum NotificationType {
	NOTIFICATION_TYPE_NO_NOTIFICATIONS = 0;
	NOTIFICATION_TYPE_POKEMON_NOTIFICATIONS = 1;
	NOTIFICATION_TYPE_POKESTOP_NOTIFICATIONS = 2;
	NOTIFICATION_TYPE_ALL_NOTIFICATIONS = 3;
}

enum PluginState {
	PLUGIN_STATE_UNKNOWN = 0;
	PLUGIN_STATE_INITIALIZED = 1;
	PLUGIN_STATE_STARTING = 2;
	PLUGIN_STATE_STARTED = 3;
	PLUGIN_STATE_RESUMED = 4;
	PLUGIN_STATE_PAUSED = 5;
	PLUGIN_STATE_STOPPED = 6;
}

enum SfidaConnectState {
	SFIDA_CONNECT_STATE_DISCONNECTED = 0;
	SFIDA_CONNECT_STATE_DISCONNECTING = 1;
	SFIDA_CONNECT_STATE_CONNECTED = 2;
	SFIDA_CONNECT_STATE_DISCOVERED = 3;
	SFIDA_CONNECT_STATE_CERTIFIED = 4;
	SFIDA_CONNECT_STATE_SOFTWARE_UPDATE = 5;
	SFIDA_CONNECT_STATE_FAILED = 6;
	SFIDA_CONNECT_STATE_CONNECTING = 7;
}

enum ClientOperatingSystem {
	CLIENT_OPERATING_SYSTEM_OS_UNKNOWN = 0;
	CLIENT_OPERATING_SYSTEM_OS_ANDROID = 1;
	CLIENT_OPERATING_SYSTEM_OS_IOS = 2;
	CLIENT_OPERATING_SYSTEM_OS_DESKTOP = 3;
}

enum PlatformWarningType {
	WARNING_TYPE_PLATFORM_WARNING_UNSET = 0;
	WARNING_TYPE_PLATFORM_WARNING_STRIKE1 = 1;
	WARNING_TYPE_PLATFORM_WARNING_STRIKE2 = 2;
	WARNING_TYPE_PLATFORM_WARNING_STRIKE3 = 3;
}

enum PokemonAnim {
	POKEMON_ANIM_NONE = 0;
	POKEMON_ANIM_IDLE_01 = 1;
	POKEMON_ANIM_IDLE_02 = 2;
	POKEMON_ANIM_LAND = 3;
	POKEMON_ANIM_ATTACK_01 = 4;
	POKEMON_ANIM_ATTACK_02 = 5;
	POKEMON_ANIM_DAMAGED = 6;
	POKEMON_ANIM_STUNNED = 7;
	POKEMON_ANIM_LOOP = 8;
	POKEMON_ANIM_SLEEP_01 = 9;
	POKEMON_ANIM_SLEEP_02 = 10;
	POKEMON_ANIM_SLEEP_WAIT = 11;
}

enum UpdateType {
	UPDATE_TYPE_ADD = 0;
	UPDATE_TYPE_MODIFY = 1;
	UPDATE_TYPE_REMOVE = 2;
	UPDATE_TYPE_PREDICTED_MODIFY = 3;
	UPDATE_TYPE_PREDICTED_REMOVE = 4;
	UPDATE_TYPE_ROLLED_BACK_MODIFY = 5;
	UPDATE_TYPE_ROLLED_BACK_REMOVE = 6;
}

enum VfxLevel {
	VFX_LEVEL_NONE = 0;
	VFX_LEVEL_START = 1;
	VFX_LEVEL_NICE = 2;
	VFX_LEVEL_GREAT = 3;
	VFX_LEVEL_EXCELLENT = 4;
}

message AcknowledgeWarningsRequestProto {
	repeated PlatformWarningType warning = 1;
}

message AcknowledgeWarningsResponseProto {
	bool success = 1;
}

message AdventureSyncSettingsProto {
	bool fitness_service_enabled = 1;
	bool awareness_service_enabled = 2;
}

message FitnessMetricsProto {
	double distance_walked_meters = 1;
	int32 step_count = 2;
	double calories_burned_kcals = 3;
	int64 exercise_duration_mi = 4;
	double wheelchair_distance_meters = 5;
	double wheelchair_push_count = 6;
}

message FitnessReportProto {
	int32 day_offset_from_now = 1;
	int32 week_offset_from_now = 2;
	FitnessMetricsProto metrics = 10;
	bytes game_data = 11;
}

message GeofenceMetadata {
	double latitude_deg = 1;
	double longitude_deg = 2;
	double radius = 3;
	string identifier = 4;
	int64 expiration_ms = 5;
	int64 dwell_time_ms = 6;
	bool fire_on_entrance = 7;
	bool fire_on_exit = 8;
}

message GeofenceUpdateOutProto {
	repeated GeofenceMetadata geofence = 1;
}

message GeofenceUpdateProto {
	int32 number_of_points = 1;
	double minimum_point_radius_m = 2;
}

message GetAdventureSyncSettingsRequestProto {
}

message GetAdventureSyncSettingsResponseProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
	}

	AdventureSyncSettingsProto adventure_sync_settings = 1;
}

message GetBackgroundModeSettingsOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Status status = 1;
	PlatformBackgroundModeClientSettingsProto settings = 2;
}

message GetBackgroundModeSettingsProto {
}

message GetFitnessReportOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_NOT_FOUND = 2;
		ERROR_RECORDS_NOT_FOUND = 3;
		ERROR_INVALID_WINDOW = 4;
		ERROR_UNKNOWN = 5;
	}

	repeated FitnessReportProto daily_reports = 1;
	repeated FitnessReportProto weekly_reports = 2;
	int64 week_reset_timestamp_since_monday_ms = 3;
}

message GetFitnessReportProto {
	int32 num_of_days = 1;
	int32 num_of_weeks = 2;
}

message GetOutstandingWarningsRequestProto {
}

message GetOutstandingWarningsResponseProto {
	message WarningInfo {
		PlatformWarningType type = 1;
	}

	repeated WarningInfo outstanding_warning = 1;
}

message LocationPingOutProto {
}

message LocationPingProto {
	enum PingReason {
		UNSET = 0;
		ENTRANCE_EVENT = 1;
		EXIT_EVENT = 2;
		DWELL_EVENT = 3;
		VISIT_EVENT = 4;
		FITNESS_WAKEUP = 5;
		OTHER_WAKEUP = 6;
	}

	string geofence_identifier = 1;
	PingReason reason = 2;
}

message PlatformClientApiSettingsProto {
	enum SettingsType {
		UNDEFINED = 0;
		MAP = 1;
	}

	bytes payload = 1;
}

message RedeemPasscodeRequestProto {
	string passcode = 1;
}

message RedeemPasscodeResponseProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		NOT_AVAILABLE = 2;
		OVER_INVENTORY_LIMIT = 3;
		ALREADY_REDEEMED = 4;
		OVER_PLAYER_REDEMPTION_LIMIT = 5;
	}

	message AcquiredItem {
		string item = 1;
		int64 count = 2;
	}

	Result result = 1;
	repeated AcquiredItem acquired_item = 2;
	bytes acquired_items_proto = 3;
	string passcode = 4;
}

message SetInGameCurrencyExchangeRateOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	Status status = 1;
}

message SetInGameCurrencyExchangeRateProto {
	string in_game_currency = 1;
	string fiat_currency = 2;
	int64 fiat_currency_cost_e6_per_in_game_unit = 3;
}

message SetInGameCurrencyExchangeRateTrackingProto {
	string in_game_currency = 1;
	string fiat_currency = 2;
	int64 fiat_currency_cost_e6_per_in_game_unit = 3;
	string status = 4;
}

message SfidaAuthToken {
	bytes response_token = 1;
	string sfida_id = 2;
}

message SfidaCaptureRequest {
	string spawnpoint_id = 1;
	int64 encounter_id = 2;
	double player_lat = 3;
	double player_lng = 4;
	EncounterType encounter_type = 5;
	double gym_lat = 6;
	double gym_lng = 7;
}

message SfidaCaptureResponse {
	enum Result {
		UNSET = 0;
		POKEMON_CAPTURED = 1;
		POKEMON_FLED = 2;
		NOT_FOUND = 3;
		NO_MORE_POKEBALLS = 4;
		POKEMON_INVENTORY_FULL = 5;
		NOT_IN_RANGE = 6;
		ENCOUNTER_ALREADY_FINISHED = 7;
	}

	Result result = 1;
	int32 xp_gain = 2;
}

message SfidaCertificationRequest {
	enum SfidaCertificationStage {
		UNSET = 0;
		STAGE1 = 1;
		STAGE2 = 2;
		STAGE3 = 3;
	}

	SfidaCertificationStage stage = 1;
	bytes payload = 2;
}

message SfidaCertificationResponse {
	bytes payload = 1;
}

message SfidaDowserRequest {
	int64 encounter_id = 1;
}

message SfidaDowserResponse {
	enum Result {
		UNSET = 0;
		FOUND = 1;
		NEARBY = 2;
		OUT_OF_RANGE = 3;
		ALREADY_CAUGHT = 4;
		NOT_AVAILABLE = 5;
	}

	Result result = 1;
	int32 proximity = 2;
	string spawnpoint_id = 3;
}

message SfidaMetrics {
	double distance_walked_km = 1;
	int32 step_count = 2;
	double calories_burned = 3;
	int64 exercise_time_ms = 4;
}

message SfidaMetricsUpdate {
	enum UpdateType {
		UNSET = 0;
		INITIALIZATION = 1;
		ACCUMULATION = 2;
	}

	UpdateType update_type = 1;
	int64 timestamp_ms = 2;
	SfidaMetrics metrics = 3;
}

message SfidaUpdateRequest {
	double player_lat = 1;
	double player_lng = 2;
}

message SfidaUpdateResponse {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
	}

	Status status = 1;
	bool nearby_pokemon = 2;
	bool uncaught_pokemon = 3;
	bool legendary_pokemon = 4;
	string spawnpoint_id = 5;
	int64 encounter_id = 6;
	bool nearby_pokestop = 7;
	string pokestop_id = 8;
	EncounterType encounter_type = 9;
	int32 pokedex_number = 10;
}

message SkuContentProto {
	string item_type = 1;
	int32 quantity = 2;
}

message SkuDataProto {
	enum SkuPaymentType {
		UNSET = 0;
		THIRD_PARTY = 1;
		IN_GAME = 2;
	}

	string id = 1;
	bool is_enabled = 2;
	repeated SkuContentProto content = 3;
	repeated SkuPriceProto price = 4;
	SkuPaymentType payment_type = 5;
	int64 last_modified_timestamp_ms = 6;
	repeated SkuPresentationDataProto presentation_data = 7;
	int64 enabled_window_start_ms = 8;
	int64 enabled_window_end_ms = 9;
}

message SkuPresentationDataProto {
	string key = 1;
	string value = 2;
}

message SkuPriceProto {
	string currency_type = 1;
	int32 price = 2;
}

message UpdateAdventureSyncFitnessResponseProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

}

message UpdateAdventureSyncSettingsRequestProto {
	AdventureSyncSettingsProto adventure_sync_settings = 1;
}

message WeatherAlertSettingsProto {
	message AlertEnforceSettings {
		message EnforceCondition {
			repeated string color = 1;
			repeated string type = 2;
			repeated string category = 3;
		}

		string country_code = 1;
		EnforceCondition when = 2;
	}

	message AlertIgnoreSettings {
		message OverrideCondition {
			repeated string color = 1;
			repeated string type = 2;
		}

		string country_code = 1;
		OverrideCondition when = 2;
	}

	message EnforceCondition {
		repeated string color = 1;
		repeated string type = 2;
		repeated string category = 3;
	}

	message OverrideCondition {
		repeated string color = 1;
		repeated string type = 2;
	}

	bool warn_weather = 1;
	WeatherAlertProto.Severity default_severity = 2;
	repeated AlertIgnoreSettings ignores = 3;
	repeated AlertEnforceSettings enforces = 4;
}

message WeatherSettingsProto {
	message ConditionMapSettings {
		GameplayWeatherProto.WeatherCondition gameplay_condition = 1;
		repeated string provider_enums = 2;
	}

	message DisplayLevelSettings {
		repeated string condition_enums = 1;
		DisplayWeatherProto.DisplayLevel cloud_level = 2;
		DisplayWeatherProto.DisplayLevel rain_level = 3;
		DisplayWeatherProto.DisplayLevel snow_level = 4;
		DisplayWeatherProto.DisplayLevel fog_level = 5;
		DisplayWeatherProto.DisplayLevel special_effect_level = 6;
	}

	message DisplayWeatherSettingsProto {
		message DisplayLevelSettings {
			repeated string condition_enums = 1;
			DisplayWeatherProto.DisplayLevel cloud_level = 2;
			DisplayWeatherProto.DisplayLevel rain_level = 3;
			DisplayWeatherProto.DisplayLevel snow_level = 4;
			DisplayWeatherProto.DisplayLevel fog_level = 5;
			DisplayWeatherProto.DisplayLevel special_effect_level = 6;
		}

		message WindLevelSettings {
			int32 wind_level1_speed = 1;
			int32 wind_level2_speed = 2;
			int32 wind_level3_speed = 3;
		}

		repeated DisplayLevelSettings display_level_settings = 1;
		WindLevelSettings wind_level_settings = 2;
	}

	message GameplayWeatherSettingsProto {
		message ConditionMapSettings {
			GameplayWeatherProto.WeatherCondition gameplay_condition = 1;
			repeated string provider_enums = 2;
		}

		repeated ConditionMapSettings condition_map = 1;
		int32 min_speed_for_windy = 2;
		repeated string conditions_for_windy = 3;
	}

	message StaleWeatherSettingsProto {
		int32 max_stale_weather_threshold_in_hrs = 1;
		int32 default_weather_condition_code = 2;
	}

	message WindLevelSettings {
		int32 wind_level1_speed = 1;
		int32 wind_level2_speed = 2;
		int32 wind_level3_speed = 3;
	}

	GameplayWeatherSettingsProto gameplay_settings = 1;
	DisplayWeatherSettingsProto display_settings = 2;
	WeatherAlertSettingsProto alert_settings = 3;
	StaleWeatherSettingsProto stale_settings = 4;
}

enum GameAccountRegistryActions {
	PLATFORM_GAME_ACCOUNT_REGISTRY_ACTIONS_UNKNOWN_GAME_ACCOUNT_REGISTRY_ACTION = 0;
	PLATFORM_GAME_ACCOUNT_REGISTRY_ACTIONS_ADD_LOGIN_ACTION = 600000;
	PLATFORM_GAME_ACCOUNT_REGISTRY_ACTIONS_REMOVE_LOGIN_ACTION = 600001;
	PLATFORM_GAME_ACCOUNT_REGISTRY_ACTIONS_LIST_LOGIN_ACTION = 600002;
	PLATFORM_GAME_ACCOUNT_REGISTRY_ACTIONS_REPLACE_LOGIN_ACTION = 600003;
}

enum GameAnticheatAction {
	PLATFORM_GAME_ANTICHEAT_ACTION_UNKNOWN_GAME_ANTICHEAT_ACTION = 0;
	PLATFORM_GAME_ANTICHEAT_ACTION_GET_OUTSTANDING_WARNINGS = 200000;
	PLATFORM_GAME_ANTICHEAT_ACTION_ACKNOWLEDGE_WARNINGS = 200001;
}

enum GameFitnessAction {
	PLATFORM_GAME_FITNESS_ACTION_UNKNOWN_GAME_FITNESS_ACTION = 0;
	PLATFORM_GAME_FITNESS_ACTION_UPDATE_FITNESS_METRICS = 640000;
	PLATFORM_GAME_FITNESS_ACTION_GET_FITNESS_REPORT = 640001;
	PLATFORM_GAME_FITNESS_ACTION_GET_ADVENTURE_SYNC_SETTINGS = 640002;
	PLATFORM_GAME_FITNESS_ACTION_UPDATE_ADVENTURE_SYNC_SETTINGS = 640003;
	PLATFORM_GAME_FITNESS_ACTION_UPDATE_ADVENTURE_SYNC_FITNESS = 640004;
	PLATFORM_GAME_FITNESS_ACTION_GET_ADVENTURE_SYNC_FITNESS_REPORT = 640005;
}

enum GameGmTemplatesAction {
	PLATFORM_GAME_GM_TEMPLATES_ACTION_UNKNOWN_GAME_GM_TEMPLATES_ACTION = 0;
	PLATFORM_GAME_GM_TEMPLATES_ACTION_DOWNLOAD_GAME_MASTER_TEMPLATES = 340000;
}

enum GameIapAction {
	PLATFORM_GAME_IAP_ACTION_UNKNOWN_GAME_IAP_ACTION = 0;
	PLATFORM_GAME_IAP_ACTION_PURCHASE_SKU = 310000;
	PLATFORM_GAME_IAP_ACTION_GET_AVAILABLE_SKUS_AND_BALANCES = 310001;
	PLATFORM_GAME_IAP_ACTION_SET_IN_GAME_CURRENCY_EXCHANGE_RATE = 310002;
	PLATFORM_GAME_IAP_ACTION_REDEEM_GOOGLE_RECEIPT = 310100;
	PLATFORM_GAME_IAP_ACTION_REDEEM_APPLE_RECEIPT = 310101;
	PLATFORM_GAME_IAP_ACTION_REDEEM_DESKTOP_RECEIPT = 310102;
	PLATFORM_GAME_IAP_ACTION_REDEEM_SAMSUNG_RECEIPT = 310103;
}

enum GameLocationAwarenessAction {
	PLATFORM_GAME_LOCATION_AWARENESS_ACTION_UNKNOWN_GAME_LOCATION_AWARENESS_ACTION = 0;
	PLATFORM_GAME_LOCATION_AWARENESS_ACTION_REQUEST_GEOFENCE_UPDATES = 360000;
	PLATFORM_GAME_LOCATION_AWARENESS_ACTION_UPDATE_PLAYER_LOCATION = 360001;
}

enum GameNotificationAction {
	PLATFORM_GAME_NOTIFICATION_ACTION_UNKNOWN_GAME_NOTIFICATION_ACTION = 0;
	PLATFORM_GAME_NOTIFICATION_ACTION_UPDATE_NOTIFICATION_STATUS = 350000;
}

enum GamePasscodeAction {
	PLATFORM_GAME_PASSCODE_ACTION_UNKNOWN_GAME_PASSCODE_ACTION = 0;
	PLATFORM_GAME_PASSCODE_ACTION_REDEEM_PASSCODE = 330000;
}

enum GamePingAction {
	PLATFORM_GAME_PING_ACTION_UNKNOWN_GAME_PING_ACTION = 0;
	PLATFORM_GAME_PING_ACTION_PING = 220000;
	PLATFORM_GAME_PING_ACTION_PING_ASYNC = 220001;
	PLATFORM_GAME_PING_ACTION_PING_DOWNSTREAM = 220002;
}

enum GamePlayerAction {
	PLATFORM_GAME_PLAYER_ACTION_UNKNOWN_GAME_PLAYER_ACTION = 0;
	PLATFORM_GAME_PLAYER_ACTION_GET_INVENTORY = 380000;
}

enum GamePoiAction {
	PLATFORM_GAME_POI_ACTION_UNKNOWN_GAME_POI_ACTION = 0;
	PLATFORM_GAME_POI_ACTION_ADD_NEW_POI = 620000;
	PLATFORM_GAME_POI_ACTION_GET_AVAILABLE_SUBMISSIONS = 620001;
	PLATFORM_GAME_POI_ACTION_GET_SIGNED_URL_FOR_PHOTO_UPLOAD = 620002;
	PLATFORM_GAME_POI_ACTION_SUBMIT_POI_IMAGE = 620100;
	PLATFORM_GAME_POI_ACTION_SUBMIT_POI_TEXT_METADATA_UPDATE = 620101;
	PLATFORM_GAME_POI_ACTION_SUBMIT_POI_LOCATION_UPDATE = 620102;
	PLATFORM_GAME_POI_ACTION_SUBMIT_POI_TAKEDOWN_REQUEST = 620103;
	PLATFORM_GAME_POI_ACTION_SUBMIT_SPONSOR_POI_REPORT = 620104;
	PLATFORM_GAME_POI_ACTION_SUBMIT_SPONSOR_POI_LOCATION_UPDATE = 620105;
	PLATFORM_GAME_POI_ACTION_ADD_NEW_ROUTE = 620200;
	PLATFORM_GAME_POI_ACTION_GENERATE_GMAP_SIGNED_URL = 620300;
	PLATFORM_GAME_POI_ACTION_GET_GMAP_SETTINGS = 620301;
	PLATFORM_GAME_POI_ACTION_SUBMIT_POI_AR_VIDEO_METADATA = 620400;
	PLATFORM_GAME_POI_ACTION_GET_GRAPESHOT_FILE_UPLOAD_URL = 620401;
	PLATFORM_GAME_POI_ACTION_ASYNC_FILE_UPLOAD_COMPLETE = 620402;
}

enum GamePushNotificationAction {
	PLATFORM_GAME_PUSH_NOTIFICATION_ACTION_UNKNOWN_GAME_PUSH_NOTIFICATION_ACTION = 0;
	PLATFORM_GAME_PUSH_NOTIFICATION_ACTION_REGISTER_PUSH_NOTIFICATION = 320000;
	PLATFORM_GAME_PUSH_NOTIFICATION_ACTION_UNREGISTER_PUSH_NOTIFICATION = 320001;
	PLATFORM_GAME_PUSH_NOTIFICATION_ACTION_OPT_OUT_PUSH_NOTIFICATION_CATEGORY = 320002;
}

enum GameSocialAction {
	PLATFORM_GAME_SOCIAL_ACTION_UNKNOWN_GAME_SOCIAL_ACTION = 0;
	PLATFORM_GAME_SOCIAL_ACTION_PROXY_SOCIAL_ACTION = 630000;
	PLATFORM_GAME_SOCIAL_ACTION_PROXY_SOCIAL_SIDE_CHANNEL_ACTION = 630001;
}

enum GameTelemetryAction {
	PLATFORM_GAME_TELEMETRY_ACTION_UNKNOWN_GAME_TELEMETRY_ACTION = 0;
	PLATFORM_GAME_TELEMETRY_ACTION_COLLECT_CLIENT_TELEMETRY = 610000;
	PLATFORM_GAME_TELEMETRY_ACTION_GET_CLIENT_TELEMETRY_SETTINGS = 610001;
}

enum GameWebTokenAction {
	PLATFORM_GAME_WEB_TOKEN_ACTION_UNKNOWN_GAME_WEB_TOKEN_ACTION = 0;
	PLATFORM_GAME_WEB_TOKEN_ACTION_GET_WEB_TOKEN_ACTION = 370000;
}

enum InvitationType {
	PLATFORM_INVITATION_TYPE_INVITATION_TYPE_UNSET = 0;
	PLATFORM_INVITATION_TYPE_INVITATION_TYPE_CODE = 1;
	PLATFORM_INVITATION_TYPE_INVITATION_TYPE_FACEBOOK = 2;
	PLATFORM_INVITATION_TYPE_INVITATION_TYPE_SERVER_REQUEST = 3;
	PLATFORM_INVITATION_TYPE_INVITATION_TYPE_NIANTIC_SOCIAL_GRAPH = 4;
}

enum NotificationState {
	PLATFORM_NOTIFICATION_STATE_UNSET_STATE = 0;
	PLATFORM_NOTIFICATION_STATE_VIEWED = 1;
}

enum PlatformClientAction {
	PLATFORM_CLIENT_ACTION_UNKNOWN_PLATFORM_CLIENT_ACTION = 0;
	PLATFORM_CLIENT_ACTION_REGISTER_PUSH_NOTIFICATION = 5000;
	PLATFORM_CLIENT_ACTION_UNREGISTER_PUSH_NOTIFICATION = 5001;
	PLATFORM_CLIENT_ACTION_UPDATE_NOTIFICATION_STATUS = 5002;
	PLATFORM_CLIENT_ACTION_OPT_OUT_PUSH_NOTIFICATION_CATEGORY = 5003;
	PLATFORM_CLIENT_ACTION_DOWNLOAD_GAME_MASTER_TEMPLATES = 5004;
	PLATFORM_CLIENT_ACTION_GET_INVENTORY = 5005;
	PLATFORM_CLIENT_ACTION_REDEEM_PASSCODE = 5006;
	PLATFORM_CLIENT_ACTION_PING = 5007;
	PLATFORM_CLIENT_ACTION_ADD_LOGIN_ACTION = 5008;
	PLATFORM_CLIENT_ACTION_REMOVE_LOGIN_ACTION = 5009;
	PLATFORM_CLIENT_ACTION_LIST_LOGIN_ACTION = 5010;
	PLATFORM_CLIENT_ACTION_ADD_NEW_POI = 5011;
	PLATFORM_CLIENT_ACTION_PROXY_SOCIAL_ACTION = 5012;
	PLATFORM_CLIENT_ACTION_DEPRECATED_CLIENT_TELEMETRY = 5013;
	PLATFORM_CLIENT_ACTION_GET_AVAILABLE_SUBMISSIONS = 5014;
	PLATFORM_CLIENT_ACTION_GET_SIGNED_URL_FOR_PHOTO_UPLOAD = 5015;
	PLATFORM_CLIENT_ACTION_REPLACE_LOGIN_ACTION = 5016;
	PLATFORM_CLIENT_ACTION_PROXY_SOCIAL_SIDE_CHANNEL_ACTION = 5017;
	PLATFORM_CLIENT_ACTION_COLLECT_CLIENT_TELEMETRY = 5018;
	PLATFORM_CLIENT_ACTION_PURCHASE_SKU = 5019;
	PLATFORM_CLIENT_ACTION_GET_AVAILABLE_SKUS_AND_BALANCES = 5020;
	PLATFORM_CLIENT_ACTION_REDEEM_GOOGLE_RECEIPT = 5021;
	PLATFORM_CLIENT_ACTION_REDEEM_APPLE_RECEIPT = 5022;
	PLATFORM_CLIENT_ACTION_REDEEM_DESKTOP_RECEIPT = 5023;
	PLATFORM_CLIENT_ACTION_UPDATE_FITNESS_METRICS = 5024;
	PLATFORM_CLIENT_ACTION_GET_FITNESS_REPORT = 5025;
	PLATFORM_CLIENT_ACTION_GET_CLIENT_TELEMETRY_SETTINGS = 5026;
	PLATFORM_CLIENT_ACTION_PING_ASYNC = 5027;
	PLATFORM_CLIENT_ACTION_REGISTER_BACKGROUND_SERVICE = 5028;
	PLATFORM_CLIENT_ACTION_GET_CLIENT_BGMODE_SETTINGS = 5029;
	PLATFORM_CLIENT_ACTION_PING_DOWNSTREAM = 5030;
	PLATFORM_CLIENT_ACTION_SET_IN_GAME_CURRENCY_EXCHANGE_RATE = 5032;
	PLATFORM_CLIENT_ACTION_REQUEST_GEOFENCE_UPDATES = 5033;
	PLATFORM_CLIENT_ACTION_UPDATE_PLAYER_LOCATION = 5034;
	PLATFORM_CLIENT_ACTION_GENERATE_GMAP_SIGNED_URL = 5035;
	PLATFORM_CLIENT_ACTION_GET_GMAP_SETTINGS = 5036;
	PLATFORM_CLIENT_ACTION_REDEEM_SAMSUNG_RECEIPT = 5037;
	PLATFORM_CLIENT_ACTION_ADD_NEW_ROUTE = 5038;
	PLATFORM_CLIENT_ACTION_GET_OUTSTANDING_WARNINGS = 5039;
	PLATFORM_CLIENT_ACTION_ACKNOWLEDGE_WARNINGS = 5040;
	PLATFORM_CLIENT_ACTION_SUBMIT_POI_IMAGE = 5041;
	PLATFORM_CLIENT_ACTION_SUBMIT_POI_TEXT_METADATA_UPDATE = 5042;
	PLATFORM_CLIENT_ACTION_SUBMIT_POI_LOCATION_UPDATE = 5043;
	PLATFORM_CLIENT_ACTION_SUBMIT_POI_TAKEDOWN_REQUEST = 5044;
	PLATFORM_CLIENT_ACTION_GET_WEB_TOKEN_ACTION = 5045;
	PLATFORM_CLIENT_ACTION_GET_ADVENTURE_SYNC_SETTINGS = 5046;
	PLATFORM_CLIENT_ACTION_UPDATE_ADVENTURE_SYNC_SETTINGS = 5047;
}

enum PlayerSubmissionTypeProto {
	PLATFORM_PLAYER_SUBMISSION_TYPE_PROTO_TYPE_UNSPECIFIED = 0;
	PLATFORM_PLAYER_SUBMISSION_TYPE_PROTO_POI_SUBMISSION = 1;
	PLATFORM_PLAYER_SUBMISSION_TYPE_PROTO_ROUTE_SUBMISSION = 2;
	PLATFORM_PLAYER_SUBMISSION_TYPE_PROTO_POI_IMAGE_SUBMISSION = 3;
	PLATFORM_PLAYER_SUBMISSION_TYPE_PROTO_POI_TEXT_METADATA_UPDATE = 4;
	PLATFORM_PLAYER_SUBMISSION_TYPE_PROTO_POI_LOCATION_UPDATE = 5;
	PLATFORM_PLAYER_SUBMISSION_TYPE_PROTO_POI_TAKEDOWN_REQUEST = 6;
	PLATFORM_PLAYER_SUBMISSION_TYPE_PROTO_POI_AR_VIDEO_SUBMISSION = 7;
	PLATFORM_PLAYER_SUBMISSION_TYPE_PROTO_SPONSOR_POI_REPORT = 8;
	PLATFORM_PLAYER_SUBMISSION_TYPE_PROTO_SPONSOR_POI_LOCATION_UPDATE = 9;
}

enum PoiInvalidReason {
	PLATFORM_POI_INVALID_REASON_INVALID_REASON_UNSPECIFIED = 0;
	PLATFORM_POI_INVALID_REASON_NO_PEDESTRIAN_ACCESS = 1;
	PLATFORM_POI_INVALID_REASON_OBSTRUCTS_EMERGENCY_SERVICES = 2;
	PLATFORM_POI_INVALID_REASON_PRIVATE_RESIDENTIAL_PROPERTY = 3;
	PLATFORM_POI_INVALID_REASON_SCHOOL = 4;
	PLATFORM_POI_INVALID_REASON_PERMANENTLY_REMOVED = 5;
	PLATFORM_POI_INVALID_REASON_DUPLICATE = 6;
}

enum SocialNotificationCategory {
	PLATFORM_SOCIAL_NOTIFICATION_CATEGORY_unset__social_notification_category = 0;
	PLATFORM_SOCIAL_NOTIFICATION_CATEGORY_FRIEND_INVITE_RECEIVED = 1;
	PLATFORM_SOCIAL_NOTIFICATION_CATEGORY_FRIEND_INVITE_ACCEPTED = 2;
}

enum SocialNotificationVariableName {
	PLATFORM_SOCIAL_NOTIFICATION_VARIABLE_NAME_unset__social_notification_variable_name = 0;
	PLATFORM_SOCIAL_NOTIFICATION_VARIABLE_NAME_SOCIAL_CODENAME = 1;
	PLATFORM_SOCIAL_NOTIFICATION_VARIABLE_NAME_SOCIAL_TEAM = 2;
	PLATFORM_SOCIAL_NOTIFICATION_VARIABLE_NAME_SOCIAL_PLAYER_SUMMARY = 3;
	PLATFORM_SOCIAL_NOTIFICATION_VARIABLE_NAME_SOCIAL_FULL_NAME = 4;
}

enum SponsorPoiInvalidReason {
	PLATFORM_SPONSOR_POI_INVALID_REASON_SPONSOR_POI_REASON_UNSPECIFIED = 0;
	PLATFORM_SPONSOR_POI_INVALID_REASON_SPONSOR_POI_REASON_DOES_NOT_EXIST = 1;
	PLATFORM_SPONSOR_POI_INVALID_REASON_SPONSOR_POI_REASON_NOT_SAFE = 2;
	PLATFORM_SPONSOR_POI_INVALID_REASON_SPONSOR_POI_REASON_NOT_TRUTHFUL = 3;
	PLATFORM_SPONSOR_POI_INVALID_REASON_SPONSOR_POI_REASON_NOT_FAMILY_FRIENDLY = 4;
	PLATFORM_SPONSOR_POI_INVALID_REASON_SPONSOR_POI_REASON_OFFENSIVE_CONTENT = 5;
}

message PlatformAcceptFriendInviteOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_INVITE_DOES_NOT_EXIST = 3;
		ERROR_MAX_FRIENDS_LIMIT_REACHED_DELETED = 4;
		ERROR_INVITE_HAS_BEEN_CANCELLED = 5;
		ERROR_SENDER_HAS_MAX_FRIENDS = 6;
		ERROR_RECEIVER_HAS_MAX_FRIENDS = 7;
	}

	Result result = 1;
	PlatformPlayerSummaryProto friend = 2;
}

message PlatformAcceptFriendInviteProto {
	string player_id = 1;
}

message PlatformAccountSettingsProto {
	bool opt_out_social_graph_import = 1;
}

message PlatformAddLoginActionOutProto {
	enum Status {
		UNSET = 0;
		AUTH_FAILURE = 1;
		LOGIN_TAKEN = 2;
	}

	bool success = 1;
	repeated PlatformLoginDetail login_detail = 2;
	Status status = 3;
}

message PlatformAddLoginActionProto {
	IdentityProvider identity_provider = 1;
	bytes inner_message = 2;
	string auth_provider_id = 3;
}

message PlatformApnToken {
	string registration_id = 1;
	string bundle_identifier = 2;
	int32 payload_byte_size = 3;
}

message PlatformCancelFriendInviteOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_INVITE_DOES_NOT_EXIST = 3;
		ERROR_ALREADY_CANCELLED = 4;
	}

	Result result = 1;
}

message PlatformCancelFriendInviteProto {
	string player_id = 1;
}

message PlatformClientInbox {
	enum Label {
		UNSET_LABEL = 0;
		UNREAD = 1;
		NEW = 2;
		IMMEDIATE = 3;
	}

	message Notification {
		string notification_id = 1;
		string title_key = 2;
		string category = 3;
		int64 create_timestamp_ms = 4;
		repeated PlatformTemplateVariable variables = 5;
		repeated Label labels = 6;
		int64 expire_time_ms = 7;
	}

	repeated Notification notifications = 1;
	repeated PlatformTemplateVariable builtin_variables = 2;
}

message PlatformDebugInfoProto {
	double latitude = 1;
	double longitude = 2;
}

message PlatformDeclineFriendInviteOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_INVITE_DOES_NOT_EXIST = 3;
		ERROR_INVITE_ALREADY_DECLINED = 4;
	}

	Result result = 1;
}

message PlatformDeclineFriendInviteProto {
	string player_id = 1;
}

message PlatformDownloadSettingsActionProto {
	string sha1 = 1;
}

message PlatformDownloadSettingsResponseProto {
	string error = 1;
	string sha1 = 2;
	bytes values = 3;
}

message PlatformFriendDetailsProto {
	enum OnlineStatus {
		UNSET = 0;
		STATUS_UNKNOWN = 1;
		STATUS_ONLINE = 2;
		STATUS_OFFLINE = 3;
	}

	PlatformPlayerSummaryProto player = 1;
	bytes friend_visible_data = 2;
	int32 score = 3;
	bytes data_with_me = 4;
	OnlineStatus online_status = 5;
}

message PlatformGcmToken {
	string registration_id = 1;
}

message PlatformGenerateGmapSignedUrlOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_NOT_VALID = 2;
		ERROR_RATE_LIMITED = 3;
		ERROR_MISSING_INPUT = 4;
		ERROR_UNKNOWN = 5;
	}

	Result result = 1;
	string signed_url = 2;
}

message PlatformGenerateGmapSignedUrlProto {
	double latitude = 1;
	double longitude = 2;
	int32 width = 3;
	int32 height = 4;
	int32 zoom = 5;
	string language_code = 6;
	string country_code = 7;
	string map_style = 8;
	string map_type = 9;
	string icon_params = 10;
}

message PlatformGetAccountSettingsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
	PlatformAccountSettingsProto settings = 2;
}

message PlatformGetAccountSettingsProto {
}

message PlatformGetAvailableSubmissionsOutProto {
	int32 submissions_left = 1;
	int32 min_player_level = 2;
	bool has_valid_email = 3;
	bool is_feature_enabled = 4;
	int64 time_window_for_submissions_limit_ms = 5;
}

message PlatformGetAvailableSubmissionsProto {
}

message PlatformGetFacebookFriendListOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FACEBOOK_API = 3;
		ERROR_FACEBOOK_PERMISSIONS = 4;
		ERROR_NO_FACEBOOK_ID = 5;
		ERROR_PLAYER_NOT_FOUND = 6;
	}

	message FacebookFriendProto {
		PlatformPlayerSummaryProto player = 1;
		string full_name = 2;
	}

	Result result = 1;
	repeated FacebookFriendProto friend = 2;
	string next_cursor = 3;
}

message PlatformGetFacebookFriendListProto {
	string fb_access_token = 1;
	int32 limit = 2;
	string cursor = 3;
}

message PlatformGetFriendCodeOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	string friend_code = 2;
}

message PlatformGetFriendCodeProto {
	bool force_generate_code = 1;
}

message PlatformGetFriendDetailsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		EXCEEDS_MAX_PLAYERS_PER_QUERY = 3;
	}

	message Callee {
		repeated int32 callee_id = 1;
		string player_id = 2;
	}

	message DebugProto {
		message Callee {
			repeated int32 callee_id = 1;
			string player_id = 2;
		}

		int32 fetched_from_db = 1;
		int32 fetched_from_fanout = 2;
		int32 fetched_from_player_mapper = 3;
		int32 fetched_from_status_cache = 4;
		int32 failed_to_fetch = 5;
		repeated Callee callee_list = 6;
		int32 fetched_from_same_server_as_player = 7;
	}

	Result result = 1;
	repeated PlatformFriendDetailsProto friend = 2;
	DebugProto friend_details_debug_info = 3;
}

message PlatformGetFriendDetailsProto {
	repeated string player_id = 1;
}

message PlatformGetFriendsListOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	message FriendProto {
		string player_id = 1;
		string codename = 2;
		string team = 3;
		int32 score = 4;
		bytes data_with_me = 5;
		int64 version = 6;
		int64 created_ms = 7;
		string fb_user_id = 8;
		bool is_facebook_friendship = 9;
		SharedFriendshipProto shared_data = 10;
	}

	message SharedFriendshipProto {
		bytes shared_data = 1;
		int64 version = 2;
		bytes data_from_me = 3;
		bytes data_to_me = 4;
	}

	Result result = 1;
	repeated FriendProto friend = 2;
}

message PlatformGetFriendsListProto {
}

message PlatformGetGmapSettingsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_MISSING_CONFIG = 3;
		ERROR_NO_UNIQUE_ID = 4;
	}

	Result result = 1;
	string gmap_template_url = 2;
	int32 max_poi_distance_in_meters = 3;
}

message PlatformGetGmapSettingsProto {
}

message PlatformGetInboxV2Proto {
	bool is_history = 1;
	bool is_reverse = 2;
	int64 not_before_ms = 3;
}

message PlatformGetIncomingFriendInvitesOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
	repeated PlatformIncomingFriendInviteDisplayProto invites = 2;
}

message PlatformGetIncomingFriendInvitesProto {
}

message PlatformGetNianticFriendDetailsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_EXCEEDS_MAX_PLAYERS_PER_QUERY = 3;
		ERROR_SOCIAL_GRAPH_IMPORT_OPT_OUT = 4;
	}

	Result result = 1;
	repeated PlatformNianticFriendDetailsProto niantic_friend_details = 2;
}

message PlatformGetNianticFriendDetailsProto {
	repeated string player_id = 1;
}

message PlatformGetNianticFriendListOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
		ERROR_SOCIAL_GRAPH_IMPORT_OPT_OUT = 3;
	}

	message NianticFriend {
		message NianticFriendInfo {
			string codename = 1;
			string team = 2;
			PlatformSocialProto.AppKey app_key = 3;
		}

		string player_id = 1;
		repeated NianticFriendInfo niantic_friend_info = 2;
	}

	message NianticFriendInfo {
		string codename = 1;
		string team = 2;
		PlatformSocialProto.AppKey app_key = 3;
	}

	Result result = 1;
	repeated NianticFriend niantic_friend = 2;
}

message PlatformGetNianticFriendListProto {
}

message PlatformGetNotificationInboxOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	Result result = 1;
	PlatformClientInbox inbox = 2;
}

message PlatformGetOutgoingFriendInvitesOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
	repeated PlatformOutgoingFriendInviteDisplayProto invites = 2;
}

message PlatformGetOutgoingFriendInvitesProto {
}

message PlatformGetPlayerSettingsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
	}

	Result result = 1;
	PlatformPlayerSettingsProto settings = 2;
}

message PlatformGetPlayerSettingsProto {
}

message PlatformGetUploadUrlOutProto {
	enum Status {
		UNSET = 0;
		FAILURES = 1;
		SUCCESS = 2;
	}

	Status status = 1;
	string signed_url = 2;
	string supporting_image_signed_url = 3;
}

message PlatformGetUploadUrlProto {
	string user_id = 1;
	string game_unique_id = 2;
}

message PlatformGetWebTokenActionOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Status status = 1;
	string access_token = 2;
}

message PlatformGetWebTokenActionProto {
	string client_id = 1;
}

message PlatformIncomingFriendInviteDisplayProto {
	PlatformIncomingFriendInviteProto invite = 1;
	PlatformPlayerSummaryProto player = 2;
}

message PlatformIncomingFriendInviteProto {
	enum Status {
		UNSET = 0;
		PENDING = 1;
		DECLINED = 2;
		CANCELLED = 3;
	}

	Status status = 1;
	string player_id = 2;
	int64 created_ms = 3;
	InvitationType invitation_type = 4;
	string full_name = 5;
	repeated PlatformSocialProto.AppKey niantic_social_graph_app_keys = 6;
}

message PlatformInviteFacebookFriendOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
		ERROR_PLAYER_OUTBOX_FULL = 4;
		ERROR_PLAYER_INBOX_FULL = 5;
		ERROR_SENDER_HAS_MAX_FRIENDS = 6;
		ERROR_RECEIVER_HAS_MAX_FRIENDS = 7;
		ERROR_ALREADY_A_FRIEND = 8;
		ERROR_INVITE_ALREADY_SENT = 9;
		ERROR_INVITE_ALREADY_RECEIVED = 10;
		ERROR_CANNOT_SEND_INVITES_TO_YOURSELF = 11;
		ERROR_FRIEND_CACHE_EXPIRED = 12;
		ERROR_FRIEND_NOT_CACHED = 13;
		ERROR_INVALID_SENDER_FACEBOOK_ID = 14;
	}

	Result result = 1;
}

message PlatformInviteFacebookFriendProto {
	string fb_access_token = 1;
	string friend_fb_user_id = 2;
}

message PlatformIsMyFriendOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND_DELETED = 3;
	}

	Result result = 1;
	bool is_friend = 2;
}

message PlatformIsMyFriendProto {
	string player_id = 1;
}

message PlatformListLoginActionOutProto {
	bool success = 1;
	repeated PlatformLoginDetail login_detail = 2;
}

message PlatformLocationE6Proto {
	int32 latitude_e6 = 1;
	int32 longitude_e6 = 2;
}

message PlatformLoginDetail {
	IdentityProvider identity_provider = 1;
	string email = 2;
	string auth_provider_id = 3;
}

message PlatformNianticFriendDetailsProto {
	string player_id = 1;
	string friend_code = 2;
	bytes public_data = 3;
}

message PlatformOptOutProto {
	repeated string categories = 1;
}

message PlatformOutgoingFriendInviteDisplayProto {
	PlatformOutgoingFriendInviteProto invite = 1;
	PlatformPlayerSummaryProto player = 2;
}

message PlatformOutgoingFriendInviteProto {
	enum Status {
		UNSET = 0;
		PENDING = 1;
		CANCELLED = 2;
		DECLINED = 3;
	}

	Status status = 1;
	string player_id = 2;
	int64 created_ms = 3;
	InvitationType invitation_type = 4;
	string full_name = 5;
	repeated PlatformSocialProto.AppKey niantic_social_graph_app_keys = 6;
}

message PlatformPingRequestProto {
	int32 response_size_bytes = 1;
	string random_request_bytes = 2;
	bool use_cache_for_random_request_bytes = 3;
	string return_value = 4;
}

message PlatformPingResponseProto {
	string user_info = 1;
	string server_info = 2;
	string random_response_bytes = 3;
	string return_value = 4;
}

message PlatformPlayerReputationProto {
	enum CheatReputation {
		UNSET = 0;
		BOT = 1;
		SPOOFER = 2;
	}

	int64 account_age_ms = 1;
	int64 player_level = 2;
	repeated CheatReputation cheat_reputation = 3;
	bool is_minor = 4;
}

message PlatformPlayerSettingsProto {
	bool opt_out_online_status = 1;
}

message PlatformPlayerSummaryProto {
	string player_id = 1;
	string codename = 2;
	bytes public_data = 3;
	string team = 4;
	string fb_user_id = 5;
}

message PlatformPortalCurationImageResult {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		FEATURE_DISABLED = 2;
		ALREADY_UPLOADED = 3;
		IMAGE_NOT_FOUND = 4;
		IMAGE_TOO_BIG = 5;
		IMAGE_NOT_SERVABLE = 6;
		PORTAL_NOT_FOUND = 7;
	}

}

message PlatformPushNotificationRegistryOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		NO_CHANGE = 2;
	}

	Result result = 1;
}

message PlatformPushNotificationRegistryProto {
	PlatformApnToken apn_token = 1;
	PlatformGcmToken gcm_token = 2;
}

message PlatformRemoveFriendOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_DOES_NOT_EXIST_DELETED = 2;
		ERROR_PLAYER_NOT_A_FRIEND = 3;
	}

	Result result = 1;
}

message PlatformRemoveFriendProto {
	string player_id = 1;
}

message PlatformRemoveLoginActionOutProto {
	enum Status {
		UNSET = 0;
		LOGIN_NOT_REMOVABLE = 1;
	}

	bool success = 1;
	repeated PlatformLoginDetail login_detail = 2;
	Status status = 3;
}

message PlatformRemoveLoginActionProto {
	IdentityProvider identity_provider = 1;
	string auth_provider_id = 3;
}

message PlatformReplaceLoginActionOutProto {
	enum Status {
		UNSET = 0;
		AUTH_FAILURE = 1;
		LOGIN_TAKEN = 2;
		LOGIN_ALREADY_HAVE = 3;
		LOGIN_NOT_REPLACEABLE = 4;
	}

	bool success = 1;
	repeated PlatformLoginDetail login_detail = 2;
	Status status = 3;
}

message PlatformReplaceLoginActionProto {
	IdentityProvider existing_identity_provider = 1;
	PlatformAddLoginActionProto new_login = 2;
	string auth_provider_id = 3;
}

message PlatformSavePlayerSettingsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
}

message PlatformSavePlayerSettingsProto {
	PlatformPlayerSettingsProto settings = 1;
}

message PlatformSearchPlayerOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
	}

	Result result = 1;
	PlatformPlayerSummaryProto player = 2;
}

message PlatformSearchPlayerProto {
	string friend_code = 1;
}

message PlatformSendFriendInviteOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_ALREADY_A_FRIEND = 3;
		ERROR_PLAYER_DOES_NOT_EXIST_DELETED = 4;
		ERROR_PLAYER_INBOX_FULL = 5;
		ERROR_PLAYER_OUTBOX_FULL = 6;
		ERROR_SENDER_HAS_MAX_FRIENDS = 7;
		ERROR_INVITE_ALREADY_SENT = 8;
		ERROR_CANNOT_SEND_INVITES_TO_YOURSELF = 9;
		ERROR_INVITE_ALREADY_RECEIVED = 10;
		ERROR_RECEIVER_HAS_MAX_FRIENDS = 11;
	}

	Result result = 1;
}

message PlatformSendFriendInviteProto {
	string player_id = 1;
	string friend_code = 2;
}

message PlatformSetAccountSettingsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
}

message PlatformSetAccountSettingsProto {
	PlatformAccountSettingsProto settings = 1;
}

message PlatformSocialProto {
	enum AppKey {
		INVALID = 0;
		INGRESS = 1;
		HOLOHOLO = 2;
		LEXICON = 3;
	}

}

message PlatformSubmitNewPoiOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
		INTERNAL_ERROR = 3;
		TOO_MANY_RECENT_SUBMISSIONS = 4;
		INVALID_INPUT = 5;
		MINOR = 6;
		NOT_AVAILABLE = 7;
	}

	Status status = 1;
}

message PlatformSubmitNewPoiProto {
	string title = 1;
	string long_description = 2;
	int32 lat_e6 = 4;
	int32 lng_e6 = 5;
	string supporting_statement = 14;
}

message PlatformTemplateVariable {
	string name = 1;
	string literal = 2;
	string key = 3;
	string lookup_table = 4;
	bytes byte_value = 5;
}

message PlatformUpdateFacebookStatusOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
		ERROR_FACEBOOK_API = 4;
		ERROR_ALREADY_EXISTS = 5;
	}

	Result result = 1;
}

message PlatformUpdateFacebookStatusProto {
	string fb_access_token = 1;
	bool force_update = 2;
}

message PlatformUpdateNotificationOutProto {
	repeated string notification_ids = 1;
	repeated int64 create_timestamp_ms = 2;
	NotificationState state = 3;
}

message PlatformUpdateNotificationProto {
	repeated string notification_ids = 1;
	repeated int64 create_timestamp_ms = 2;
	NotificationState state = 3;
}

message PlatformUploadPoiPhotoByUrlOutProto {
	PlatformPortalCurationImageResult.Result status = 1;
}

message PlatformUploadPoiPhotoByUrlProto {
	string request_id = 1;
	string image_url = 2;
}

enum TitanPoiImageType {
	TITAN_POI_IMAGE_TYPE_UNSET = 0;
	TITAN_POI_IMAGE_TYPE_MAIN = 1;
	TITAN_POI_IMAGE_TYPE_SURROUNDING = 2;
}

enum RouteVisitOrder {
	TITAN_ROUTE_VISIT_ORDER_ROUTE_VISIT_ORDER_UNSPECIFIED = 0;
	TITAN_ROUTE_VISIT_ORDER_IN_ORDER = 1;
	TITAN_ROUTE_VISIT_ORDER_UNORDERED = 2;
	TITAN_ROUTE_VISIT_ORDER_REVERSIBLE = 3;
}

message TitanAsyncFileUploadCompleteOutProto {
	enum ErrorStatus {
		UNSET = 0;
		SERVER_UPDATE_FAILED = 1;
		MISSING_SUBMISSION_ID = 2;
		MISSING_SUBMISSION_TYPE = 3;
		MISSING_UPLOAD_STATUS = 4;
	}

	ErrorStatus error = 1;
}

message TitanAsyncFileUploadCompleteProto {
	enum Status {
		UNSET = 0;
		UPLOAD_DONE = 1;
		UPLOAD_FAILED = 2;
	}

	string submission_id = 1;
	PlayerSubmissionTypeProto submission_type = 2;
	Status upload_status = 3;
}

message TitanAvailableSubmissionsPerSubmissionType {
	PlayerSubmissionTypeProto player_submission_type = 1;
	int32 submissions_left = 2;
	int32 min_player_level = 3;
	bool is_feature_enabled = 4;
	int64 time_window_for_submissions_limit_ms = 5;
	int32 max_poi_distance_in_meters = 6;
	repeated string blacklisted_os = 7;
}

message TitanGenerateGmapSignedUrlOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_NOT_VALID = 2;
		ERROR_RATE_LIMITED = 3;
		ERROR_MISSING_INPUT = 4;
		ERROR_UNKNOWN = 5;
	}

	Result result = 1;
	string signed_url = 2;
}

message TitanGenerateGmapSignedUrlProto {
	double latitude = 1;
	double longitude = 2;
	int32 width = 3;
	int32 height = 4;
	int32 zoom = 5;
	string language_code = 6;
	string country_code = 7;
	string map_style = 8;
	string map_type = 9;
	string icon_params = 10;
}

message TitanGetAvailableSubmissionsOutProto {
	int32 submissions_left = 1;
	int32 min_player_level = 2;
	bool has_valid_email = 3;
	bool is_feature_enabled = 4;
	int64 time_window_for_submissions_limit_ms = 5;
	int32 max_poi_distance_in_meters = 6;
	repeated string blacklisted_os = 7;
	repeated TitanAvailableSubmissionsPerSubmissionType availability_result_per_type = 8;
}

message TitanGetAvailableSubmissionsProto {
	PlayerSubmissionTypeProto submission_type = 1;
	repeated PlayerSubmissionTypeProto submission_types = 2;
}

message TitanGetGmapSettingsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_MISSING_CONFIG = 3;
		ERROR_NO_UNIQUE_ID = 4;
	}

	Result result = 1;
	string gmap_template_url = 2;
	int32 max_poi_distance_in_meters = 3;
}

message TitanGetGmapSettingsProto {
}

message TitanGetGrapeshotUploadUrlOutProto {
	enum Status {
		UNSET = 0;
		FAILURE = 1;
		SUCCESS = 2;
		MISSING_FILE_CONTEXTS = 3;
		DUPLICATE_FILE_CONTEXT = 4;
		MISSING_SUBMISSION_TYPE = 5;
		MISSING_SUBMISSION_ID = 6;
	}

	Status status = 1;
	map<string, TitanGrapeshotUploadingDataProto> file_context_to_grapeshot_data = 4;
}

message TitanGetGrapeshotUploadUrlProto {
	PlayerSubmissionTypeProto submission_type = 1;
	string submission_id = 2;
	repeated string file_upload_context = 3;
}

message TitanGetUploadUrlOutProto {
	enum Status {
		UNSET = 0;
		FAILURES = 1;
		SUCCESS = 2;
		MISSING_IMAGE_CONTEXTS = 3;
		DUPLICATE_IMAGE_CONTEXTS = 4;
	}

	Status status = 1;
	string signed_url = 2;
	string supporting_image_signed_url = 3;
	map<string, string> context_signed_urls = 4;
}

message TitanGetUploadUrlProto {
	string user_id = 1;
	string game_unique_id = 2;
	PlayerSubmissionTypeProto submission_type = 3;
	string submission_id = 4;
	repeated string image_contexts = 5;
}

message TitanGrapeshotAuthenticationDataProto {
	string authorization = 1;
	string date = 2;
}

message TitanGrapeshotChunkDataProto {
	string chunk_file_path = 1;
	uint32 chunk_number = 2;
	TitanGrapeshotAuthenticationDataProto upload_authentication = 3;
	TitanGrapeshotAuthenticationDataProto delete_authentication = 4;
}

message TitanGrapeshotComposeDataProto {
	string target_file_path = 1;
	TitanGrapeshotAuthenticationDataProto authentication = 2;
}

message TitanGrapeshotUploadingDataProto {
	repeated TitanGrapeshotChunkDataProto chunk_data = 1;
	TitanGrapeshotComposeDataProto compose_data = 2;
	string gcs_bucket = 3;
	int32 number_of_chunks = 4;
}

message TitanPlayerSubmissionResponseProto {
	enum Status {
		STATUS_UNSPECIFIED = 0;
		SUCCESS = 1;
		INTERNAL_ERROR = 2;
		TOO_MANY_RECENT_SUBMISSIONS = 3;
		MINOR = 4;
		NOT_AVAILABLE = 5;
		INVALID_INPUT = 6;
		MISSING_IMAGE = 7;
	}

	Status status = 1;
	string submission_id = 2;
}

message TitanPoiPlayerMetadataTelemetry {
	string device_model = 1;
	string device_os = 2;
}

message TitanPoiSubmissionPhotoUploadErrorTelemetry {
	enum PoiSubmissionPhotoUploadErrorIds {
		UNSET = 0;
		POI_PHOTO_UPLOAD_ERROR = 1;
		POI_PHOTO_UPLOAD_TIMEOUT = 2;
	}

	PoiSubmissionPhotoUploadErrorIds error_id = 1;
	TitanPoiImageType image_type = 2;
	string error_message = 3;
}

message TitanPoiSubmissionTelemetry {
	enum PoiCameraStepIds {
		UNSET = 0;
		ENTER = 1;
		RETAKE = 2;
		CONFIRM = 3;
		EXIT = 4;
	}

	enum PoiSubmissionGuiEventId {
		UNKNOWN = 0;
		POI_NOMINATION_ENTER = 1;
		POI_TUTORIAL_COMPLETE = 2;
		POI_MAP_CHANGEDVIEW_MAP = 3;
		POI_MAP_CHANGEDVIEW_SATELLITE = 4;
		POI_MAP_CENTER_LOCATION = 5;
		POI_LOCATION_SET = 6;
		POI_PHOTO_CAMERA_ENTER = 7;
		POI_PHOTO_CAMERA_EXIT = 8;
		POI_TITLE_ENTERED = 9;
		POI_DESCRIPTION_ENTER = 10;
		POI_DETAILS_CONFIRM = 11;
		POI_SUPPORTINGINFO_ENTER = 12;
		POI_SUBMIT_BUTTON_HIT = 13;
		POI_EXIT_BUTTON_HIT = 14;
	}

	PoiSubmissionGuiEventId gui_event_id = 1;
	TitanPoiImageType image_type = 2;
	PoiCameraStepIds camera_step_id = 3;
}

message TitanPoiVideoSubmissionMetadataProto {
	string poi_id = 1;
	PlatformLocationE6Proto location = 2;
	int32 player_level = 3;
}

message TitanPortalCurationImageResult {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		FEATURE_DISABLED = 2;
		ALREADY_UPLOADED = 3;
		IMAGE_NOT_FOUND = 4;
		IMAGE_TOO_BIG = 5;
		IMAGE_NOT_SERVABLE = 6;
		PORTAL_NOT_FOUND = 7;
	}

}

message TitanRouteCheckpointProto {
	TitanRoutePoiProto poi = 1;
	TitanRouteGuidepostProto guidepost = 2;
}

message TitanRouteGuidepostProto {
	PlatformLocationE6Proto location = 1;
}

message TitanRouteImageProto {
	string image_id = 1;
	string image_context = 2;
}

message TitanRoutePoiProto {
	string poi_id = 1;
}

message TitanSubmitNewPoiOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
		INTERNAL_ERROR = 3;
		TOO_MANY_RECENT_SUBMISSIONS = 4;
		INVALID_INPUT = 5;
		MINOR = 6;
		NOT_AVAILABLE = 7;
	}

	Status status = 1;
	string submission_id = 2;
}

message TitanSubmitNewPoiProto {
	string title = 1;
	string long_description = 2;
	int32 lat_e6 = 4;
	int32 lng_e6 = 5;
	string supporting_statement = 14;
	bool async_file_upload = 18;
}

message TitanSubmitNewRouteOutProto {
	enum Status {
		STATUS_UNSPECIFIED = 0;
		SUCCESS = 1;
		INTERNAL_ERROR = 2;
		TOO_MANY_RECENT_SUBMISSIONS = 3;
		MINOR = 4;
		NOT_AVAILABLE = 5;
		INVALID_INPUT = 6;
		MISSING_IMAGE = 7;
		INVALID_CHECKPOINT = 8;
		INVALID_ROUTE_LENGTH = 9;
		DUPLICATE_CHECKPOINTS = 10;
		ALREADY_SUBMITTED = 11;
	}

	Status status = 1;
}

message TitanSubmitNewRouteProto {
	string route_submission_id = 1;
	string title = 2;
	string description = 3;
	RouteVisitOrder visit_order = 5;
	repeated TitanRouteCheckpointProto checkpoints = 6;
	TitanRouteImageProto main_image = 7;
}

message TitanSubmitPoiImageProto {
	string poi_id = 1;
	bool async_file_upload = 2;
}

message TitanSubmitPoiLocationUpdateProto {
	string poi_id = 1;
	PlatformLocationE6Proto location = 2;
}

message TitanSubmitPoiTakedownRequestProto {
	string poi_id = 1;
	PoiInvalidReason invalid_reason = 2;
}

message TitanSubmitPoiTextMetadataUpdateProto {
	string poi_id = 1;
	string title = 2;
	string description = 3;
}

message TitanSubmitSponsorPoiLocationUpdateProto {
	string poi_id = 1;
	PlatformLocationE6Proto location = 2;
}

message TitanSubmitSponsorPoiReportProto {
	string poi_id = 1;
	SponsorPoiInvalidReason invalid_reason = 2;
	string additional_details = 3;
}

message TitanTitanGameClientTelemetryOmniProto {
	TitanPoiSubmissionTelemetry poi_submission_telemetry = 1;
	TitanPoiSubmissionPhotoUploadErrorTelemetry poi_submission_photo_upload_error_telemetry = 2;
	TitanPoiPlayerMetadataTelemetry player_metadata_telemetry = 3;
	PlatformPlatformServerData server_data = 1001;
}

message TitanUploadPoiPhotoByUrlOutProto {
	PlatformPortalCurationImageResult.Result status = 1;
}

message TitanUploadPoiPhotoByUrlProto {
	string request_id = 1;
	string image_url = 2;
}

message PlatformAvailableSkuProto {
	string id = 1;
	bool is_third_party_vendor_item = 2;
	repeated CurrencyQuantityProto price = 3;
	repeated CurrencyQuantityProto currency_granted = 4;
	repeated PlatformGameItemContentProto game_item_content = 5;
	repeated PlatformSkuPresentationProto presentation_data = 6;
	bool can_be_purchased = 7;
}

message PlatformCurrencyQuantityProto {
	string currency_type = 1;
	int32 quantity = 2;
}

message PlatformCurrencyUpdateProto {
	string currency_name = 1;
	int32 currency_delta = 2;
	int32 currency_balance = 3;
	int32 fiat_purchased_balance = 4;
}

message PlatformGameItemContentProto {
	string type = 1;
	int32 quantity = 2;
}

message PlatformGetAvailableSkusAndBalancesOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	repeated PlatformAvailableSkuProto available_sku = 1;
	repeated CurrencyQuantityProto balance = 2;
	string player_token = 3;
}

message PlatformGetAvailableSkusAndBalancesProto {
}

message PlatformPurchaseSkuOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
		BALANCE_TOO_LOW = 3;
		SKU_NOT_AVAILABLE = 4;
		OVER_INVENTORY_LIMIT = 5;
	}

}

message PlatformPurchaseSkuProto {
	string sku_id = 1;
}

message PlatformRedeemGoogleReceiptOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	string transaction_token = 1;
}

message PlatformRedeemGoogleReceiptProto {
	string receipt = 1;
	string receipt_signature = 2;
	string purchase_currency = 3;
	int32 price_paid_e6 = 4;
	int64 price_paid_e6_long = 5;
}

message PlatformSkuPresentationProto {
	string key = 1;
	string value = 2;
}

enum SocialAction {
	SOCIAL_ACTION_UNKNOWN_SOCIAL_ACTION = 0;
	SOCIAL_ACTION_SEARCH_PLAYER = 10000;
	SOCIAL_ACTION_SEND_FRIEND_INVITE = 10002;
	SOCIAL_ACTION_CANCEL_FRIEND_INVITE = 10003;
	SOCIAL_ACTION_ACCEPT_FRIEND_INVITE = 10004;
	SOCIAL_ACTION_DECLINE_FRIEND_INVITE = 10005;
	SOCIAL_ACTION_LIST_FRIENDS = 10006;
	SOCIAL_ACTION_LIST_OUTGOING_FRIEND_INVITES = 10007;
	SOCIAL_ACTION_LIST_INCOMING_FRIEND_INVITES = 10008;
	SOCIAL_ACTION_REMOVE_FRIEND = 10009;
	SOCIAL_ACTION_LIST_FRIEND_STATUS = 10010;
	SOCIAL_ACTION_SEND_FACEBOOK_FRIEND_INVITE = 10011;
	SOCIAL_ACTION_IS_MY_FRIEND = 10012;
	SOCIAL_ACTION_CREATE_INVITE_CODE = 10013;
	SOCIAL_ACTION_GET_FACEBOOK_FRIEND_LIST = 10014;
	SOCIAL_ACTION_UPDATE_FACEBOOK_STATUS = 10015;
	SOCIAL_ACTION_SAVE_PLAYER_SETTINGS = 10016;
	SOCIAL_ACTION_GET_PLAYER_SETTINGS = 10017;
	SOCIAL_ACTION_GET_NIANTIC_FRIEND_LIST = 10018;
	SOCIAL_ACTION_GET_NIANTIC_FRIEND_DETAILS = 10019;
	SOCIAL_ACTION_SEND_NIANTIC_FRIEND_INVITE = 10020;
	SOCIAL_ACTION_SET_ACCOUNT_SETTINGS = 10021;
	SOCIAL_ACTION_GET_ACCOUNT_SETTINGS = 10022;
	SOCIAL_ACTION_REGISTER_PUSH_NOTIFICATION = 10101;
	SOCIAL_ACTION_UNREGISTER_PUSH_NOTIFICATION = 10102;
	SOCIAL_ACTION_UPDATE_NOTIFICATION = 10103;
	SOCIAL_ACTION_OPT_OUT_PUSH_NOTIFICATION_CATEGORY = 10104;
	SOCIAL_ACTION_GET_INBOX = 10105;
}

enum PhoneBoothPresentationMode {
	PHONE_BOOTH_PRESENTATION_MODE_NONE = 0;
	PHONE_BOOTH_PRESENTATION_MODE_PORTRAIT = 1;
	PHONE_BOOTH_PRESENTATION_MODE_DIALOG = 2;
}

enum AssetTelemetryIds {
	ASSET_TELEMETRY_IDS_UNDEFINED_ASSET_EVENT = 0;
	ASSET_TELEMETRY_IDS_DOWNLOAD_START = 1;
	ASSET_TELEMETRY_IDS_DOWNLOAD_FINISHED = 2;
	ASSET_TELEMETRY_IDS_DOWNLOAD_FAILED = 3;
	ASSET_TELEMETRY_IDS_ASSET_RETRIEVED_FROM_CACHE = 4;
	ASSET_TELEMETRY_IDS_CACHE_THRASH = 5;
}

enum AvatarCustomizationTelemetryIds {
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_UNDEFINED_AVATAR_CUSTOMIZATION = 0;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_EQUIP_ITEM = 1;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_OPEN_FEATURES = 2;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_OPEN_STORE = 3;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_PURCHASE_ITEM = 4;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_PURCHASE_ERROR = 5;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_SELECT_ITEM_GROUP = 6;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_SELECT_SLOT = 7;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_SELECT_COLOR = 8;
	AVATAR_CUSTOMIZATION_TELEMETRY_IDS_SHOW_QUICK_SHOP = 9;
}

enum BattleHubSection {
	BATTLE_HUB_SECTION_SECTION_UNSET = 0;
	BATTLE_HUB_SECTION_SECTION_VS_SEEKER = 1;
	BATTLE_HUB_SECTION_SECTION_CURR_SEASON = 2;
	BATTLE_HUB_SECTION_SECTION_LAST_SEASON = 3;
	BATTLE_HUB_SECTION_SECTION_NEARBY = 4;
	BATTLE_HUB_SECTION_SECTION_TEAM_LEADERS = 5;
	BATTLE_HUB_SECTION_SECTION_QR_CODE = 6;
}

enum BattleHubSubsection {
	BATTLE_HUB_SUBSECTION_SUBSECTION_UNSET = 0;
	BATTLE_HUB_SUBSECTION_SUBSECTION_VS_CHARGING = 1;
	BATTLE_HUB_SUBSECTION_SUBSECTION_VS_FREE = 2;
	BATTLE_HUB_SUBSECTION_SUBSECTION_VS_PREMIUM = 3;
	BATTLE_HUB_SUBSECTION_SUBSECTION_NEARBY_TEAM_LEADERS = 4;
	BATTLE_HUB_SUBSECTION_SUBSECTION_NEARBY_QR_CODE = 5;
}

enum BattlePartyTelemetryIds {
	BATTLE_PARTY_TELEMETRY_IDS_UNDEFINED_BATTLE_PARTY_EVENT = 0;
	BATTLE_PARTY_TELEMETRY_IDS_ADD = 1;
	BATTLE_PARTY_TELEMETRY_IDS_REMOVE = 2;
	BATTLE_PARTY_TELEMETRY_IDS_GYM_BATTLE = 3;
	BATTLE_PARTY_TELEMETRY_IDS_RAID_BATTLE = 4;
	BATTLE_PARTY_TELEMETRY_IDS_BATTLE_POKEMON_CHANGED = 5;
}

enum BuddyActivity {
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_UNSET = 0;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_FEED = 1;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_PET = 2;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_SNAPSHOT = 3;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_WALK = 4;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_NEW_POIS = 5;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_GYM_BATTLE = 6;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_RAID_BATTLE = 7;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_NPC_BATTLE = 8;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_PVP_BATTLE = 9;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_OPEN_SOUVENIRS = 10;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_OPEN_CONSUMABLES = 11;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_INVASION_GRUNT = 12;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_INVASION_LEADER = 13;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_INVASION_GIOVANNI = 14;
	BUDDY_ACTIVITY_BUDDY_ACTIVITY_ATTRACTIVE_POI = 15;
}

enum BuddyActivityCategory {
	BUDDY_ACTIVITY_CATEGORY_BUDDY_CATEGORY_UNSET = 0;
	BUDDY_ACTIVITY_CATEGORY_BUDDY_CATEGORY_FEED = 1;
	BUDDY_ACTIVITY_CATEGORY_BUDDY_CATEGORY_CARE = 2;
	BUDDY_ACTIVITY_CATEGORY_BUDDY_CATEGORY_SNAPSHOT = 3;
	BUDDY_ACTIVITY_CATEGORY_BUDDY_CATEGORY_WALK = 4;
	BUDDY_ACTIVITY_CATEGORY_BUDDY_CATEGORY_BATTLE = 5;
	BUDDY_ACTIVITY_CATEGORY_BUDDY_CATEGORY_EXPLORE = 6;
	BUDDY_ACTIVITY_CATEGORY_BUDDY_CATEGORY_BONUS = 7;
}

enum BuddyAnimation {
	BUDDY_ANIMATION_BUDDY_ANIMATION_UNSET = 0;
	BUDDY_ANIMATION_BUDDY_ANIMATION_HAPPY = 1;
	BUDDY_ANIMATION_BUDDY_ANIMATION_HATE = 2;
}

enum BuddyEmotionLevel {
	BUDDY_EMOTION_LEVEL_BUDDY_EMOTION_LEVEL_UNSET = 0;
	BUDDY_EMOTION_LEVEL_BUDDY_EMOTION_LEVEL_0 = 1;
	BUDDY_EMOTION_LEVEL_BUDDY_EMOTION_LEVEL_1 = 2;
	BUDDY_EMOTION_LEVEL_BUDDY_EMOTION_LEVEL_2 = 3;
	BUDDY_EMOTION_LEVEL_BUDDY_EMOTION_LEVEL_3 = 4;
	BUDDY_EMOTION_LEVEL_BUDDY_EMOTION_LEVEL_4 = 5;
	BUDDY_EMOTION_LEVEL_BUDDY_EMOTION_LEVEL_5 = 6;
	BUDDY_EMOTION_LEVEL_BUDDY_EMOTION_LEVEL_6 = 7;
}

enum BuddyLevel {
	BUDDY_LEVEL_BUDDY_LEVEL_UNSET = 0;
	BUDDY_LEVEL_BUDDY_LEVEL_0 = 1;
	BUDDY_LEVEL_BUDDY_LEVEL_1 = 2;
	BUDDY_LEVEL_BUDDY_LEVEL_2 = 3;
	BUDDY_LEVEL_BUDDY_LEVEL_3 = 4;
	BUDDY_LEVEL_BUDDY_LEVEL_4 = 5;
	BUDDY_LEVEL_BUDDY_LEVEL_5 = 6;
}

enum CameraInterpolation {
	CAMERA_INTERPOLATION_CAM_INTERP_CUT = 0;
	CAMERA_INTERPOLATION_CAM_INTERP_LINEAR = 1;
	CAMERA_INTERPOLATION_CAM_INTERP_SMOOTH = 2;
	CAMERA_INTERPOLATION_CAM_INTERP_SMOOTH_ROT_LINEAR_MOVE = 3;
	CAMERA_INTERPOLATION_CAM_INTERP_DEPENDS = 4;
}

enum CameraTarget {
	CAMERA_TARGET_CAM_TARGET_ATTACKER = 0;
	CAMERA_TARGET_CAM_TARGET_ATTACKER_EDGE = 1;
	CAMERA_TARGET_CAM_TARGET_ATTACKER_GROUND = 2;
	CAMERA_TARGET_CAM_TARGET_DEFENDER = 3;
	CAMERA_TARGET_CAM_TARGET_DEFENDER_EDGE = 4;
	CAMERA_TARGET_CAM_TARGET_DEFENDER_GROUND = 5;
	CAMERA_TARGET_CAM_TARGET_ATTACKER_DEFENDER = 6;
	CAMERA_TARGET_CAM_TARGET_ATTACKER_DEFENDER_EDGE = 7;
	CAMERA_TARGET_CAM_TARGET_DEFENDER_ATTACKER = 8;
	CAMERA_TARGET_CAM_TARGET_DEFENDER_ATTACKER_EDGE = 9;
	CAMERA_TARGET_CAM_TARGET_ATTACKER_DEFENDER_MIRROR = 11;
	CAMERA_TARGET_CAM_TARGET_SHOULDER_ATTACKER_DEFENDER = 12;
	CAMERA_TARGET_CAM_TARGET_SHOULDER_ATTACKER_DEFENDER_MIRROR = 13;
	CAMERA_TARGET_CAM_TARGET_ATTACKER_DEFENDER_WORLD = 14;
}

enum CombatHubEntranceTelemetryIds {
	COMBAT_HUB_ENTRANCE_TELEMETRY_IDS_UNDEFINED_EVENT = 0;
	COMBAT_HUB_ENTRANCE_TELEMETRY_IDS_CLICKED_COMBAT_HUB_BUTTON = 1;
}

enum CombatPlayerFinishState {
	COMBAT_PLAYER_FINISH_STATE_WINNER = 0;
	COMBAT_PLAYER_FINISH_STATE_LOSER = 1;
	COMBAT_PLAYER_FINISH_STATE_DRAW = 2;
}

enum CombatRewardStatus {
	COMBAT_REWARD_STATUS_UNSET_REWARD_STATUS = 0;
	COMBAT_REWARD_STATUS_REWARDS_GRANTED = 1;
	COMBAT_REWARD_STATUS_MAX_REWARDS_RECEIVED = 2;
	COMBAT_REWARD_STATUS_PLAYER_BAG_FULL = 3;
	COMBAT_REWARD_STATUS_NO_REWARDS = 4;
}

enum CombatType {
	COMBAT_TYPE_COMBAT_TYPE_UNSET = 0;
	COMBAT_TYPE_SOLO = 1;
	COMBAT_TYPE_QR_CODE = 2;
	COMBAT_TYPE_FRIENDS = 3;
	COMBAT_TYPE_NEARBY = 4;
	COMBAT_TYPE_SOLO_INVASION = 5;
	COMBAT_TYPE_VS_SEEKER = 6;
}

enum DeviceServiceTelemetryIds {
	DEVICE_SERVICE_TELEMETRY_IDS_UNDEFINED_DEVICE_SERVICE = 0;
	DEVICE_SERVICE_TELEMETRY_IDS_FITNESS = 1;
	DEVICE_SERVICE_TELEMETRY_IDS_SMART_WATCH = 2;
	DEVICE_SERVICE_TELEMETRY_IDS_SFIDA = 3;
	DEVICE_SERVICE_TELEMETRY_IDS_AWARENESS = 4;
	DEVICE_SERVICE_TELEMETRY_IDS_ADVENTURE_SYNC = 5;
}

enum EggIncubatorType {
	EGG_INCUBATOR_TYPE_INCUBATOR_UNSET = 0;
	EGG_INCUBATOR_TYPE_INCUBATOR_DISTANCE = 1;
}

enum EncounterType {
	ENCOUNTER_TYPE_SPAWN_POINT = 0;
	ENCOUNTER_TYPE_INCENSE = 1;
	ENCOUNTER_TYPE_DISK = 2;
	ENCOUNTER_TYPE_POST_RAID = 3;
	ENCOUNTER_TYPE_STORY_QUEST = 4;
	ENCOUNTER_TYPE_QUEST_STAMP_CARD = 5;
	ENCOUNTER_TYPE_CHALLENGE_QUEST = 6;
	ENCOUNTER_TYPE_PHOTOBOMB = 7;
	ENCOUNTER_TYPE_INVASION = 8;
	ENCOUNTER_TYPE_VS_SEEKER_REWARD = 9;
	ENCOUNTER_TYPE_TIMED_STORY_QUEST = 10;
	ENCOUNTER_TYPE_DAILY_BONUS = 11;
}

enum FortType {
	FORT_TYPE_GYM = 0;
	FORT_TYPE_CHECKPOINT = 1;
}

enum FriendshipLevelMilestone {
	FRIENDSHIP_LEVEL_MILESTONE_FRIENDSHIP_LEVEL_UNSET = 0;
	FRIENDSHIP_LEVEL_MILESTONE_FRIENDSHIP_LEVEL_0 = 1;
	FRIENDSHIP_LEVEL_MILESTONE_FRIENDSHIP_LEVEL_1 = 2;
	FRIENDSHIP_LEVEL_MILESTONE_FRIENDSHIP_LEVEL_2 = 3;
	FRIENDSHIP_LEVEL_MILESTONE_FRIENDSHIP_LEVEL_3 = 4;
	FRIENDSHIP_LEVEL_MILESTONE_FRIENDSHIP_LEVEL_4 = 5;
}

enum GenericClickTelemetryIds {
	GENERIC_CLICK_TELEMETRY_IDS_UNDEFINED_GENERIC_EVENT = 0;
	GENERIC_CLICK_TELEMETRY_IDS_SPEED_WARNING_SHOW = 1;
	GENERIC_CLICK_TELEMETRY_IDS_SPEED_WARNING_PASSENGER = 2;
}

enum GymBadgeType {
	GYM_BADGE_TYPE_GYM_BADGE_UNSET = 0;
	GYM_BADGE_TYPE_GYM_BADGE_VANILLA = 1;
	GYM_BADGE_TYPE_GYM_BADGE_BRONZE = 2;
	GYM_BADGE_TYPE_GYM_BADGE_SILVER = 3;
	GYM_BADGE_TYPE_GYM_BADGE_GOLD = 4;
}

enum HoloActivityType {
	HOLO_ACTIVITY_TYPE_ACTIVITY_UNKNOWN = 0;
	HOLO_ACTIVITY_TYPE_ACTIVITY_CATCH_POKEMON = 1;
	HOLO_ACTIVITY_TYPE_ACTIVITY_CATCH_LEGEND_POKEMON = 2;
	HOLO_ACTIVITY_TYPE_ACTIVITY_FLEE_POKEMON = 3;
	HOLO_ACTIVITY_TYPE_ACTIVITY_DEFEAT_FORT = 4;
	HOLO_ACTIVITY_TYPE_ACTIVITY_EVOLVE_POKEMON = 5;
	HOLO_ACTIVITY_TYPE_ACTIVITY_HATCH_EGG = 6;
	HOLO_ACTIVITY_TYPE_ACTIVITY_WALK_KM = 7;
	HOLO_ACTIVITY_TYPE_ACTIVITY_POKEDEX_ENTRY_NEW = 8;
	HOLO_ACTIVITY_TYPE_ACTIVITY_CATCH_FIRST_THROW = 9;
	HOLO_ACTIVITY_TYPE_ACTIVITY_CATCH_NICE_THROW = 10;
	HOLO_ACTIVITY_TYPE_ACTIVITY_CATCH_GREAT_THROW = 11;
	HOLO_ACTIVITY_TYPE_ACTIVITY_CATCH_EXCELLENT_THROW = 12;
	HOLO_ACTIVITY_TYPE_ACTIVITY_CATCH_CURVEBALL = 13;
	HOLO_ACTIVITY_TYPE_ACTIVITY_CATCH_FIRST_CATCH_OF_DAY = 14;
	HOLO_ACTIVITY_TYPE_ACTIVITY_CATCH_MILESTONE = 15;
	HOLO_ACTIVITY_TYPE_ACTIVITY_TRAIN_POKEMON = 16;
	HOLO_ACTIVITY_TYPE_ACTIVITY_SEARCH_FORT = 17;
	HOLO_ACTIVITY_TYPE_ACTIVITY_RELEASE_POKEMON = 18;
	HOLO_ACTIVITY_TYPE_ACTIVITY_HATCH_EGG_SMALL_BONUS = 19;
	HOLO_ACTIVITY_TYPE_ACTIVITY_HATCH_EGG_MEDIUM_BONUS = 20;
	HOLO_ACTIVITY_TYPE_ACTIVITY_HATCH_EGG_LARGE_BONUS = 21;
	HOLO_ACTIVITY_TYPE_ACTIVITY_DEFEAT_GYM_DEFENDER = 22;
	HOLO_ACTIVITY_TYPE_ACTIVITY_DEFEAT_GYM_LEADER = 23;
	HOLO_ACTIVITY_TYPE_ACTIVITY_CATCH_FIRST_CATCH_STREAK_BONUS = 24;
	HOLO_ACTIVITY_TYPE_ACTIVITY_SEARCH_FORT_FIRST_OF_THE_DAY = 25;
	HOLO_ACTIVITY_TYPE_ACTIVITY_SEARCH_FORT_STREAK_BONUS = 26;
	HOLO_ACTIVITY_TYPE_ACTIVITY_DEFEAT_RAID_POKEMON = 27;
	HOLO_ACTIVITY_TYPE_ACTIVITY_FEED_BERRY = 28;
	HOLO_ACTIVITY_TYPE_ACTIVITY_SEARCH_GYM = 29;
	HOLO_ACTIVITY_TYPE_ACTIVITY_NEW_POKESTOP = 30;
	HOLO_ACTIVITY_TYPE_ACTIVITY_GYM_BATTLE_LOSS = 31;
	HOLO_ACTIVITY_TYPE_ACTIVITY_CATCH_AR_PLUS_BONUS = 32;
	HOLO_ACTIVITY_TYPE_ACTIVITY_CATCH_QUEST_POKEMON_ENCOUNTER = 33;
	HOLO_ACTIVITY_TYPE_ACTIVITY_FRIENDSHIP_LEVEL_UP_0 = 35;
	HOLO_ACTIVITY_TYPE_ACTIVITY_FRIENDSHIP_LEVEL_UP_1 = 36;
	HOLO_ACTIVITY_TYPE_ACTIVITY_FRIENDSHIP_LEVEL_UP_2 = 37;
	HOLO_ACTIVITY_TYPE_ACTIVITY_FRIENDSHIP_LEVEL_UP_3 = 38;
	HOLO_ACTIVITY_TYPE_ACTIVITY_FRIENDSHIP_LEVEL_UP_4 = 39;
	HOLO_ACTIVITY_TYPE_ACTIVITY_SEND_GIFT = 40;
	HOLO_ACTIVITY_TYPE_ACTIVITY_SHARE_EX_RAID_PASS = 41;
	HOLO_ACTIVITY_TYPE_ACTIVITY_RAID_LEVEL_1_ADDITIONAL_XP = 42;
	HOLO_ACTIVITY_TYPE_ACTIVITY_RAID_LEVEL_2_ADDITIONAL_XP = 43;
	HOLO_ACTIVITY_TYPE_ACTIVITY_RAID_LEVEL_3_ADDITIONAL_XP = 44;
	HOLO_ACTIVITY_TYPE_ACTIVITY_RAID_LEVEL_4_ADDITIONAL_XP = 45;
	HOLO_ACTIVITY_TYPE_ACTIVITY_RAID_LEVEL_5_ADDITIONAL_XP = 46;
	HOLO_ACTIVITY_TYPE_ACTIVITY_HATCH_EGG_SHADOW = 47;
	HOLO_ACTIVITY_TYPE_ACTIVITY_HATCH_EGG_GIFT = 48;
	HOLO_ACTIVITY_TYPE_ACTIVITY_REMOTE_DEFEAT_RAID_POKEMON = 49;
	HOLO_ACTIVITY_TYPE_ACTIVITY_REMOTE_RAID_LEVEL_1_ADDITIONAL_XP = 50;
	HOLO_ACTIVITY_TYPE_ACTIVITY_REMOTE_RAID_LEVEL_2_ADDITIONAL_XP = 51;
	HOLO_ACTIVITY_TYPE_ACTIVITY_REMOTE_RAID_LEVEL_3_ADDITIONAL_XP = 52;
	HOLO_ACTIVITY_TYPE_ACTIVITY_REMOTE_RAID_LEVEL_4_ADDITIONAL_XP = 53;
	HOLO_ACTIVITY_TYPE_ACTIVITY_REMOTE_RAID_LEVEL_5_ADDITIONAL_XP = 54;
}

enum HoloBadgeType {
	HOLO_BADGE_TYPE_BADGE_UNSET = 0;
	HOLO_BADGE_TYPE_BADGE_TRAVEL_KM = 1;
	HOLO_BADGE_TYPE_BADGE_POKEDEX_ENTRIES = 2;
	HOLO_BADGE_TYPE_BADGE_CAPTURE_TOTAL = 3;
	HOLO_BADGE_TYPE_BADGE_DEFEATED_FORT = 4;
	HOLO_BADGE_TYPE_BADGE_EVOLVED_TOTAL = 5;
	HOLO_BADGE_TYPE_BADGE_HATCHED_TOTAL = 6;
	HOLO_BADGE_TYPE_BADGE_ENCOUNTERED_TOTAL = 7;
	HOLO_BADGE_TYPE_BADGE_POKESTOPS_VISITED = 8;
	HOLO_BADGE_TYPE_BADGE_UNIQUE_POKESTOPS = 9;
	HOLO_BADGE_TYPE_BADGE_POKEBALL_THROWN = 10;
	HOLO_BADGE_TYPE_BADGE_BIG_MAGIKARP = 11;
	HOLO_BADGE_TYPE_BADGE_DEPLOYED_TOTAL = 12;
	HOLO_BADGE_TYPE_BADGE_BATTLE_ATTACK_WON = 13;
	HOLO_BADGE_TYPE_BADGE_BATTLE_TRAINING_WON = 14;
	HOLO_BADGE_TYPE_BADGE_BATTLE_DEFEND_WON = 15;
	HOLO_BADGE_TYPE_BADGE_PRESTIGE_RAISED = 16;
	HOLO_BADGE_TYPE_BADGE_PRESTIGE_DROPPED = 17;
	HOLO_BADGE_TYPE_BADGE_TYPE_NORMAL = 18;
	HOLO_BADGE_TYPE_BADGE_TYPE_FIGHTING = 19;
	HOLO_BADGE_TYPE_BADGE_TYPE_FLYING = 20;
	HOLO_BADGE_TYPE_BADGE_TYPE_POISON = 21;
	HOLO_BADGE_TYPE_BADGE_TYPE_GROUND = 22;
	HOLO_BADGE_TYPE_BADGE_TYPE_ROCK = 23;
	HOLO_BADGE_TYPE_BADGE_TYPE_BUG = 24;
	HOLO_BADGE_TYPE_BADGE_TYPE_GHOST = 25;
	HOLO_BADGE_TYPE_BADGE_TYPE_STEEL = 26;
	HOLO_BADGE_TYPE_BADGE_TYPE_FIRE = 27;
	HOLO_BADGE_TYPE_BADGE_TYPE_WATER = 28;
	HOLO_BADGE_TYPE_BADGE_TYPE_GRASS = 29;
	HOLO_BADGE_TYPE_BADGE_TYPE_ELECTRIC = 30;
	HOLO_BADGE_TYPE_BADGE_TYPE_PSYCHIC = 31;
	HOLO_BADGE_TYPE_BADGE_TYPE_ICE = 32;
	HOLO_BADGE_TYPE_BADGE_TYPE_DRAGON = 33;
	HOLO_BADGE_TYPE_BADGE_TYPE_DARK = 34;
	HOLO_BADGE_TYPE_BADGE_TYPE_FAIRY = 35;
	HOLO_BADGE_TYPE_BADGE_SMALL_RATTATA = 36;
	HOLO_BADGE_TYPE_BADGE_PIKACHU = 37;
	HOLO_BADGE_TYPE_BADGE_UNOWN = 38;
	HOLO_BADGE_TYPE_BADGE_POKEDEX_ENTRIES_GEN2 = 39;
	HOLO_BADGE_TYPE_BADGE_RAID_BATTLE_WON = 40;
	HOLO_BADGE_TYPE_BADGE_LEGENDARY_BATTLE_WON = 41;
	HOLO_BADGE_TYPE_BADGE_BERRIES_FED = 42;
	HOLO_BADGE_TYPE_BADGE_HOURS_DEFENDED = 43;
	HOLO_BADGE_TYPE_BADGE_PLACE_HOLDER = 44;
	HOLO_BADGE_TYPE_BADGE_POKEDEX_ENTRIES_GEN3 = 45;
	HOLO_BADGE_TYPE_BADGE_CHALLENGE_QUESTS = 46;
	HOLO_BADGE_TYPE_BADGE_MEW_ENCOUNTER = 47;
	HOLO_BADGE_TYPE_BADGE_MAX_LEVEL_FRIENDS = 48;
	HOLO_BADGE_TYPE_BADGE_TRADING = 49;
	HOLO_BADGE_TYPE_BADGE_TRADING_DISTANCE = 50;
	HOLO_BADGE_TYPE_BADGE_POKEDEX_ENTRIES_GEN4 = 51;
	HOLO_BADGE_TYPE_BADGE_GREAT_LEAGUE = 52;
	HOLO_BADGE_TYPE_BADGE_ULTRA_LEAGUE = 53;
	HOLO_BADGE_TYPE_BADGE_MASTER_LEAGUE = 54;
	HOLO_BADGE_TYPE_BADGE_PHOTOBOMB = 55;
	HOLO_BADGE_TYPE_BADGE_POKEDEX_ENTRIES_GEN5 = 56;
	HOLO_BADGE_TYPE_BADGE_POKEMON_PURIFIED = 57;
	HOLO_BADGE_TYPE_BADGE_ROCKET_GRUNTS_DEFEATED = 58;
	HOLO_BADGE_TYPE_BADGE_ROCKET_GIOVANNI_DEFEATED = 59;
	HOLO_BADGE_TYPE_BADGE_BUDDY_BEST = 60;
	HOLO_BADGE_TYPE_BADGE_POKEDEX_ENTRIES_GEN6 = 61;
	HOLO_BADGE_TYPE_BADGE_POKEDEX_ENTRIES_GEN7 = 62;
	HOLO_BADGE_TYPE_BADGE_POKEDEX_ENTRIES_GEN8 = 63;
	HOLO_BADGE_TYPE_BADGE_WAYFARER = 68;
	HOLO_BADGE_TYPE_BADGE_EVENT_MIN = 2000;
	HOLO_BADGE_TYPE_BADGE_CHICAGO_FEST_JULY_2017 = 2001;
	HOLO_BADGE_TYPE_BADGE_PIKACHU_OUTBREAK_YOKOHAMA_2017 = 2002;
	HOLO_BADGE_TYPE_BADGE_SAFARI_ZONE_EUROPE_2017 = 2003;
	HOLO_BADGE_TYPE_BADGE_SAFARI_ZONE_EUROPE_2017_10_07 = 2004;
	HOLO_BADGE_TYPE_BADGE_SAFARI_ZONE_EUROPE_2017_10_14 = 2005;
	HOLO_BADGE_TYPE_BADGE_CHICAGO_FEST_JULY_2018_SAT_NORTH = 2006;
	HOLO_BADGE_TYPE_BADGE_CHICAGO_FEST_JULY_2018_SAT_SOUTH = 2007;
	HOLO_BADGE_TYPE_BADGE_CHICAGO_FEST_JULY_2018_SUN_NORTH = 2008;
	HOLO_BADGE_TYPE_BADGE_CHICAGO_FEST_JULY_2018_SUN_SOUTH = 2009;
	HOLO_BADGE_TYPE_BADGE_APAC_PARTNER_JULY_2018_0 = 2010;
	HOLO_BADGE_TYPE_BADGE_APAC_PARTNER_JULY_2018_1 = 2011;
	HOLO_BADGE_TYPE_BADGE_APAC_PARTNER_JULY_2018_2 = 2012;
	HOLO_BADGE_TYPE_BADGE_APAC_PARTNER_JULY_2018_3 = 2013;
	HOLO_BADGE_TYPE_BADGE_APAC_PARTNER_JULY_2018_4 = 2014;
	HOLO_BADGE_TYPE_BADGE_APAC_PARTNER_JULY_2018_5 = 2015;
	HOLO_BADGE_TYPE_BADGE_APAC_PARTNER_JULY_2018_6 = 2016;
	HOLO_BADGE_TYPE_BADGE_APAC_PARTNER_JULY_2018_7 = 2017;
	HOLO_BADGE_TYPE_BADGE_APAC_PARTNER_JULY_2018_8 = 2018;
	HOLO_BADGE_TYPE_BADGE_APAC_PARTNER_JULY_2018_9 = 2019;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_29_AUG_2018_MIKASA = 2020;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_29_AUG_2018_VERNY = 2021;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_29_AUG_2018_KURIHAMA = 2022;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_30_AUG_2018_MIKASA = 2023;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_30_AUG_2018_VERNY = 2024;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_30_AUG_2018_KURIHAMA = 2025;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_31_AUG_2018_MIKASA = 2026;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_31_AUG_2018_VERNY = 2027;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_31_AUG_2018_KURIHAMA = 2028;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_1_SEP_2018_MIKASA = 2029;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_1_SEP_2018_VERNY = 2030;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_1_SEP_2018_KURIHAMA = 2031;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_2_SEP_2018_MIKASA = 2032;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_2_SEP_2018_VERNY = 2033;
	HOLO_BADGE_TYPE_BADGE_YOKOSUKA_2_SEP_2018_KURIHAMA = 2034;
	HOLO_BADGE_TYPE_BADGE_TOP_BANANA_1 = 2035;
	HOLO_BADGE_TYPE_BADGE_TOP_BANANA_2 = 2036;
	HOLO_BADGE_TYPE_BADGE_TOP_BANANA_3 = 2037;
	HOLO_BADGE_TYPE_BADGE_PARTNER_EVENT_2019_0 = 2038;
	HOLO_BADGE_TYPE_BADGE_PARTNER_EVENT_2019_1 = 2039;
	HOLO_BADGE_TYPE_BADGE_PARTNER_EVENT_2019_2 = 2040;
	HOLO_BADGE_TYPE_BADGE_PARTNER_EVENT_2019_3 = 2041;
	HOLO_BADGE_TYPE_BADGE_PARTNER_EVENT_2019_4 = 2042;
	HOLO_BADGE_TYPE_BADGE_PARTNER_EVENT_2019_5 = 2043;
	HOLO_BADGE_TYPE_BADGE_PARTNER_EVENT_2019_6 = 2044;
	HOLO_BADGE_TYPE_BADGE_PARTNER_EVENT_2019_7 = 2045;
	HOLO_BADGE_TYPE_BADGE_PARTNER_EVENT_2019_8 = 2046;
	HOLO_BADGE_TYPE_BADGE_PARTNER_EVENT_2019_9 = 2047;
	HOLO_BADGE_TYPE_BADGE_SENTOSA_18_APR_2019 = 2048;
	HOLO_BADGE_TYPE_BADGE_SENTOSA_19_APR_2019 = 2049;
	HOLO_BADGE_TYPE_BADGE_SENTOSA_20_APR_2019 = 2050;
	HOLO_BADGE_TYPE_BADGE_SENTOSA_21_APR_2019 = 2051;
	HOLO_BADGE_TYPE_BADGE_SENTOSA_22_APR_2019 = 2052;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_00 = 2053;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_01 = 2054;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_02 = 2055;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_03 = 2056;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_04 = 2057;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_05 = 2058;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_06 = 2059;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_07 = 2060;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_08 = 2061;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_09 = 2062;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_10 = 2063;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_11 = 2064;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_12 = 2065;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_13 = 2066;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_14 = 2067;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_15 = 2068;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_16 = 2069;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_17 = 2070;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_18 = 2071;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_19 = 2072;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_20 = 2073;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_21 = 2074;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_22 = 2075;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_23 = 2076;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_24 = 2077;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_25 = 2078;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_26 = 2079;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_27 = 2080;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_28 = 2081;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_29 = 2082;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_30 = 2083;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_31 = 2084;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_32 = 2085;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_33 = 2086;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_34 = 2087;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_35 = 2088;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_36 = 2089;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_37 = 2090;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_38 = 2091;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_39 = 2092;
	HOLO_BADGE_TYPE_BADGE_CITY_EXPLORER_PASS_40 = 2093;
	HOLO_BADGE_TYPE_BADGE_DYNAMIC_EVENT_MIN = 5000;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_00_NORTH_GENERAL = 5001;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_00_NORTH_EARLYACCESS = 5002;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_00_SOUTH_GENERAL = 5003;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_00_SOUTH_EARLYACCESS = 5004;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_01_NORTH_GENERAL = 5005;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_01_NORTH_EARLYACCESS = 5006;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_01_SOUTH_GENERAL = 5007;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_01_SOUTH_EARLYACCESS = 5008;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_02_NORTH_GENERAL = 5009;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_02_NORTH_EARLYACCESS = 5010;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_02_SOUTH_GENERAL = 5011;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_02_SOUTH_EARLYACCESS = 5012;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_03_NORTH_GENERAL = 5013;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_03_NORTH_EARLYACCESS = 5014;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_03_SOUTH_GENERAL = 5015;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_03_SOUTH_EARLYACCESS = 5016;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_04_NORTH_GENERAL = 5017;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_04_NORTH_EARLYACCESS = 5018;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_04_SOUTH_GENERAL = 5019;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_AMERICAS_DAY_04_SOUTH_EARLYACCESS = 5020;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_EMEA_DAY_00_GENERAL = 5021;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_EMEA_DAY_00_EARLYACCESS = 5022;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_EMEA_DAY_01_GENERAL = 5023;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_EMEA_DAY_01_EARLYACCESS = 5024;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_EMEA_DAY_02_GENERAL = 5025;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_EMEA_DAY_02_EARLYACCESS = 5026;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_EMEA_DAY_03_GENERAL = 5027;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_EMEA_DAY_03_EARLYACCESS = 5028;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_EMEA_DAY_04_GENERAL = 5029;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_EMEA_DAY_04_EARLYACCESS = 5030;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_APAC_DAY_00_GENERAL = 5031;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_APAC_DAY_01_GENERAL = 5032;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_APAC_DAY_02_GENERAL = 5033;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_APAC_DAY_03_GENERAL = 5034;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_APAC_DAY_04_GENERAL = 5035;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_APAC_DAY_05_GENERAL = 5036;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_APAC_DAY_06_GENERAL = 5037;
	HOLO_BADGE_TYPE_BADGE_GOFEST_2019_APAC_DAY_07_GENERAL = 5038;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2019_MONTREAL_DAY_00_GENERAL = 5039;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2019_MONTREAL_DAY_00_EARLYACCESS = 5040;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2019_MONTREAL_DAY_01_GENERAL = 5041;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2019_MONTREAL_DAY_01_EARLYACCESS = 5042;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2019_MONTREAL_DAY_02_GENERAL = 5043;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2019_MONTREAL_DAY_02_EARLYACCESS = 5044;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2019_MONTREAL_DAY_03_GENERAL = 5045;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2019_MONTREAL_DAY_03_EARLYACCESS = 5046;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_STLOUIS_DAY_00_GENERAL = 5047;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_STLOUIS_DAY_00_EARLYACCESS = 5048;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_STLOUIS_DAY_01_GENERAL = 5049;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_STLOUIS_DAY_01_EARLYACCESS = 5050;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_STLOUIS_DAY_02_GENERAL = 5051;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_STLOUIS_DAY_02_EARLYACCESS = 5052;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_STLOUIS_DAY_03_GENERAL = 5053;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_STLOUIS_DAY_03_EARLYACCESS = 5054;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_00_GENERAL = 5055;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_00_EARLYACCESS = 5056;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_01_GENERAL = 5057;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_01_EARLYACCESS = 5058;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_02_GENERAL = 5059;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_02_EARLYACCESS = 5060;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_03_GENERAL = 5061;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_LIVERPOOL_DAY_03_EARLYACCESS = 5062;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_00_GENERAL = 5063;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_00_EARLYACCESS = 5064;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_01_GENERAL = 5065;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_01_EARLYACCESS = 5066;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_02_GENERAL = 5067;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_02_EARLYACCESS = 5068;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_03_GENERAL = 5069;
	HOLO_BADGE_TYPE_BADGE_SAFARIZONE_2020_PHILADELPHIA_DAY_03_EARLYACCESS = 5070;
	HOLO_BADGE_TYPE_BADGE_GLOBAL_TICKETED_EVENT = 5100;
	HOLO_BADGE_TYPE_BADGE_EVENT_0001 = 5201;
	HOLO_BADGE_TYPE_BADGE_EVENT_0002 = 5202;
	HOLO_BADGE_TYPE_BADGE_EVENT_0003 = 5203;
	HOLO_BADGE_TYPE_BADGE_EVENT_0004 = 5204;
	HOLO_BADGE_TYPE_BADGE_EVENT_0005 = 5205;
	HOLO_BADGE_TYPE_BADGE_EVENT_0006 = 5206;
	HOLO_BADGE_TYPE_BADGE_EVENT_0007 = 5207;
	HOLO_BADGE_TYPE_BADGE_EVENT_0008 = 5208;
	HOLO_BADGE_TYPE_BADGE_EVENT_0009 = 5209;
	HOLO_BADGE_TYPE_BADGE_EVENT_0010 = 5210;
}

enum HoloholoClientTelemetryIds {
	HOLOHOLO_CLIENT_TELEMETRY_IDS_UNDEFINED = 0;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_BOOT_TIME = 1;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_FRAME_RATE = 2;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_GENERIC_CLICK = 3;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_MAP_EVENT = 4;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_SPIN_POKESTOP = 5;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_PROFILE_PAGE = 6;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_SHOPPING_PAGE = 7;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_ENCOUNTER_POKEMON = 8;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_CATCH_POKEMON = 9;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_DEPLOY_POKEMON = 10;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_FEED_POKEMON = 11;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_EVOLVE_POKEMON = 12;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_RELEASE_POKEMON = 13;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_NICKNAME_POKEMON = 14;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_NEWS_PAGE = 15;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_ITEM = 16;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_BATTLE_PARTY = 17;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_PASSCODE_REDEEM = 18;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_LINK_LOGIN = 19;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_RAID = 20;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_PUSH_NOTIFICATION = 21;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_AVATAR_CUSTOMIZATION = 22;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_READ_POINT_OF_INTEREST_DESCRIPTION = 23;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_WEB = 24;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_CHANGE_AR = 25;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_WEATHER_DETAIL_CLICK = 26;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_USER_ISSUE_WEATHER_REPORT = 27;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_POKEMON_INVENTORY = 28;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_SOCIAL = 29;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_CHECK_ENCOUNTER_TRAY_INFO = 30;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_POKEMON_GO_PLUS = 31;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_RPC_TIMING = 32;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_SOCIAL_GIFT_COUNT = 33;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_ASSET_BUNDLE_DOWNLOAD = 34;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_ASSET_POI_DOWNLOAD = 35;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_ASSET_STREAM_DOWNLOAD = 36;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_ASSET_STREAM_CACHE_CULLED = 37;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_RPC_SOCKET_TIMING = 38;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_PERMISSIONS_FLOW = 39;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_DEVICE_SERVICE_TOGGLE = 40;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_BOOT_TELEMETRY = 41;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_AR_PHOTO_SESSION_TELEMETRY = 42;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_LEAVE_POINT_OF_INTEREST = 43;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_VIEW_POINT_OF_INTEREST_IMAGE = 44;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_COMBAT_HUB_ENTRANCE_TELEMETRY = 45;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_DEVICE_SPECIFICATIONS_TELEMETRY = 46;
	HOLOHOLO_CLIENT_TELEMETRY_IDS_SCREEN_RESOLUTION_TELEMETRY = 47;
}

enum HoloIapItemCategory {
	HOLO_IAP_ITEM_CATEGORY_IAP_CATEGORY_NONE = 0;
	HOLO_IAP_ITEM_CATEGORY_IAP_CATEGORY_BUNDLE = 1;
	HOLO_IAP_ITEM_CATEGORY_IAP_CATEGORY_ITEMS = 2;
	HOLO_IAP_ITEM_CATEGORY_IAP_CATEGORY_UPGRADES = 3;
	HOLO_IAP_ITEM_CATEGORY_IAP_CATEGORY_POKECOINS = 4;
	HOLO_IAP_ITEM_CATEGORY_IAP_CATEGORY_AVATAR = 5;
	HOLO_IAP_ITEM_CATEGORY_IAP_CATEGORY_AVATAR_STORE_LINK = 6;
	HOLO_IAP_ITEM_CATEGORY_IAP_CATEGORY_TEAM_CHANGE = 7;
	HOLO_IAP_ITEM_CATEGORY_IAP_CATEGORY_GLOBAL_EVENT_TICKET = 10;
	HOLO_IAP_ITEM_CATEGORY_IAP_CATEGORY_VS_SEEKER = 11;
	HOLO_IAP_ITEM_CATEGORY_IAP_CATEGORY_STICKER = 12;
	HOLO_IAP_ITEM_CATEGORY_IAP_CATEGORY_FREE = 13;
}

enum HoloItemCategory {
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_NONE = 0;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_POKEBALL = 1;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_FOOD = 2;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_MEDICINE = 3;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_BOOST = 4;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_UTILITES = 5;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_CAMERA = 6;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_DISK = 7;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_INCUBATOR = 8;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_INCENSE = 9;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_XP_BOOST = 10;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_INVENTORY_UPGRADE = 11;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_EVOLUTION_REQUIREMENT = 12;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_MOVE_REROLL = 13;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_CANDY = 14;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_RAID_TICKET = 15;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_STARDUST_BOOST = 16;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_FRIEND_GIFT_BOX = 17;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_TEAM_CHANGE = 18;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_VS_SEEKER = 20;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_INCIDENT_TICKET = 21;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_GLOBAL_EVENT_TICKET = 22;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_BUDDY_EXCLUSIVE_FOOD = 23;
	HOLO_ITEM_CATEGORY_ITEM_CATEGORY_STICKER = 24;
}

enum HoloItemEffect {
	HOLO_ITEM_EFFECT_ITEM_EFFECT_NONE = 0;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_NO_FLEE = 1000;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_NO_MOVEMENT = 1002;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_NO_THREAT = 1003;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_TARGET_MAX = 1004;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_TARGET_SLOW = 1005;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_CHANCE_NIGHT = 1006;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_CHANCE_TRAINER = 1007;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_CHANCE_FIRST_THROW = 1008;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_CHANCE_LEGEND = 1009;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_CHANCE_HEAVY = 1010;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_CHANCE_REPEAT = 1011;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_CHANCE_MULTI_THROW = 1012;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_CHANCE_ALWAYS = 1013;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CAP_CHANCE_SINGLE_THROW = 1014;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_CANDY_AWARD = 1015;
	HOLO_ITEM_EFFECT_ITEM_EFFECT_FULL_MOTIVATION = 1016;
}

enum HoloItemType {
	HOLO_ITEM_TYPE_ITEM_TYPE_NONE = 0;
	HOLO_ITEM_TYPE_ITEM_TYPE_POKEBALL = 1;
	HOLO_ITEM_TYPE_ITEM_TYPE_POTION = 2;
	HOLO_ITEM_TYPE_ITEM_TYPE_REVIVE = 3;
	HOLO_ITEM_TYPE_ITEM_TYPE_MAP = 4;
	HOLO_ITEM_TYPE_ITEM_TYPE_BATTLE = 5;
	HOLO_ITEM_TYPE_ITEM_TYPE_FOOD = 6;
	HOLO_ITEM_TYPE_ITEM_TYPE_CAMERA = 7;
	HOLO_ITEM_TYPE_ITEM_TYPE_DISK = 8;
	HOLO_ITEM_TYPE_ITEM_TYPE_INCUBATOR = 9;
	HOLO_ITEM_TYPE_ITEM_TYPE_INCENSE = 10;
	HOLO_ITEM_TYPE_ITEM_TYPE_XP_BOOST = 11;
	HOLO_ITEM_TYPE_ITEM_TYPE_INVENTORY_UPGRADE = 12;
	HOLO_ITEM_TYPE_ITEM_TYPE_EVOLUTION_REQUIREMENT = 13;
	HOLO_ITEM_TYPE_ITEM_TYPE_MOVE_REROLL = 14;
	HOLO_ITEM_TYPE_ITEM_TYPE_CANDY = 15;
	HOLO_ITEM_TYPE_ITEM_TYPE_RAID_TICKET = 16;
	HOLO_ITEM_TYPE_ITEM_TYPE_STARDUST_BOOST = 17;
	HOLO_ITEM_TYPE_ITEM_TYPE_FRIEND_GIFT_BOX = 18;
	HOLO_ITEM_TYPE_ITEM_TYPE_TEAM_CHANGE = 19;
	HOLO_ITEM_TYPE_ITEM_TYPE_VS_SEEKER_BATTLE_NOW = 21;
	HOLO_ITEM_TYPE_ITEM_TYPE_INCIDENT_TICKET = 22;
	HOLO_ITEM_TYPE_ITEM_TYPE_GLOBAL_EVENT_TICKET = 23;
}

enum HoloPokemonClass {
	HOLO_POKEMON_CLASS_POKEMON_CLASS_NORMAL = 0;
	HOLO_POKEMON_CLASS_POKEMON_CLASS_LEGENDARY = 1;
	HOLO_POKEMON_CLASS_POKEMON_CLASS_MYTHIC = 2;
}

enum HoloPokemonEggType {
	HOLO_POKEMON_EGG_TYPE_EGG_TYPE_UNSET = 0;
	HOLO_POKEMON_EGG_TYPE_EGG_TYPE_SHADOW = 1;
}

enum HoloPokemonFamilyId {
	HOLO_POKEMON_FAMILY_ID_FAMILY_UNSET = 0;
	HOLO_POKEMON_FAMILY_ID_V0001_FAMILY_BULBASAUR = 1;
	HOLO_POKEMON_FAMILY_ID_V0004_FAMILY_CHARMANDER = 4;
	HOLO_POKEMON_FAMILY_ID_V0007_FAMILY_SQUIRTLE = 7;
	HOLO_POKEMON_FAMILY_ID_V0010_FAMILY_CATERPIE = 10;
	HOLO_POKEMON_FAMILY_ID_V0013_FAMILY_WEEDLE = 13;
	HOLO_POKEMON_FAMILY_ID_V0016_FAMILY_PIDGEY = 16;
	HOLO_POKEMON_FAMILY_ID_V0019_FAMILY_RATTATA = 19;
	HOLO_POKEMON_FAMILY_ID_V0021_FAMILY_SPEAROW = 21;
	HOLO_POKEMON_FAMILY_ID_V0023_FAMILY_EKANS = 23;
	HOLO_POKEMON_FAMILY_ID_V0025_FAMILY_PIKACHU = 25;
	HOLO_POKEMON_FAMILY_ID_V0027_FAMILY_SANDSHREW = 27;
	HOLO_POKEMON_FAMILY_ID_V0029_FAMILY_NIDORAN = 29;
	HOLO_POKEMON_FAMILY_ID_V0032_FAMILY_NIDORAN = 32;
	HOLO_POKEMON_FAMILY_ID_V0035_FAMILY_CLEFAIRY = 35;
	HOLO_POKEMON_FAMILY_ID_V0037_FAMILY_VULPIX = 37;
	HOLO_POKEMON_FAMILY_ID_V0039_FAMILY_JIGGLYPUFF = 39;
	HOLO_POKEMON_FAMILY_ID_V0041_FAMILY_ZUBAT = 41;
	HOLO_POKEMON_FAMILY_ID_V0043_FAMILY_ODDISH = 43;
	HOLO_POKEMON_FAMILY_ID_V0046_FAMILY_PARAS = 46;
	HOLO_POKEMON_FAMILY_ID_V0048_FAMILY_VENONAT = 48;
	HOLO_POKEMON_FAMILY_ID_V0050_FAMILY_DIGLETT = 50;
	HOLO_POKEMON_FAMILY_ID_V0052_FAMILY_MEOWTH = 52;
	HOLO_POKEMON_FAMILY_ID_V0054_FAMILY_PSYDUCK = 54;
	HOLO_POKEMON_FAMILY_ID_V0056_FAMILY_MANKEY = 56;
	HOLO_POKEMON_FAMILY_ID_V0058_FAMILY_GROWLITHE = 58;
	HOLO_POKEMON_FAMILY_ID_V0060_FAMILY_POLIWAG = 60;
	HOLO_POKEMON_FAMILY_ID_V0063_FAMILY_ABRA = 63;
	HOLO_POKEMON_FAMILY_ID_V0066_FAMILY_MACHOP = 66;
	HOLO_POKEMON_FAMILY_ID_V0069_FAMILY_BELLSPROUT = 69;
	HOLO_POKEMON_FAMILY_ID_V0072_FAMILY_TENTACOOL = 72;
	HOLO_POKEMON_FAMILY_ID_V0074_FAMILY_GEODUDE = 74;
	HOLO_POKEMON_FAMILY_ID_V0077_FAMILY_PONYTA = 77;
	HOLO_POKEMON_FAMILY_ID_V0079_FAMILY_SLOWPOKE = 79;
	HOLO_POKEMON_FAMILY_ID_V0081_FAMILY_MAGNEMITE = 81;
	HOLO_POKEMON_FAMILY_ID_V0083_FAMILY_FARFETCHD = 83;
	HOLO_POKEMON_FAMILY_ID_V0084_FAMILY_DODUO = 84;
	HOLO_POKEMON_FAMILY_ID_V0086_FAMILY_SEEL = 86;
	HOLO_POKEMON_FAMILY_ID_V0088_FAMILY_GRIMER = 88;
	HOLO_POKEMON_FAMILY_ID_V0090_FAMILY_SHELLDER = 90;
	HOLO_POKEMON_FAMILY_ID_V0092_FAMILY_GASTLY = 92;
	HOLO_POKEMON_FAMILY_ID_V0095_FAMILY_ONIX = 95;
	HOLO_POKEMON_FAMILY_ID_V0096_FAMILY_DROWZEE = 96;
	HOLO_POKEMON_FAMILY_ID_V0098_FAMILY_KRABBY = 98;
	HOLO_POKEMON_FAMILY_ID_V0100_FAMILY_VOLTORB = 100;
	HOLO_POKEMON_FAMILY_ID_V0102_FAMILY_EXEGGCUTE = 102;
	HOLO_POKEMON_FAMILY_ID_V0104_FAMILY_CUBONE = 104;
	HOLO_POKEMON_FAMILY_ID_V0106_FAMILY_HITMONLEE = 106;
	HOLO_POKEMON_FAMILY_ID_V0107_FAMILY_HITMONCHAN = 107;
	HOLO_POKEMON_FAMILY_ID_V0108_FAMILY_LICKITUNG = 108;
	HOLO_POKEMON_FAMILY_ID_V0109_FAMILY_KOFFING = 109;
	HOLO_POKEMON_FAMILY_ID_V0111_FAMILY_RHYHORN = 111;
	HOLO_POKEMON_FAMILY_ID_V0113_FAMILY_CHANSEY = 113;
	HOLO_POKEMON_FAMILY_ID_V0114_FAMILY_TANGELA = 114;
	HOLO_POKEMON_FAMILY_ID_V0115_FAMILY_KANGASKHAN = 115;
	HOLO_POKEMON_FAMILY_ID_V0116_FAMILY_HORSEA = 116;
	HOLO_POKEMON_FAMILY_ID_V0118_FAMILY_GOLDEEN = 118;
	HOLO_POKEMON_FAMILY_ID_V0120_FAMILY_STARYU = 120;
	HOLO_POKEMON_FAMILY_ID_V0122_FAMILY_MR_MIME = 122;
	HOLO_POKEMON_FAMILY_ID_V0123_FAMILY_SCYTHER = 123;
	HOLO_POKEMON_FAMILY_ID_V0124_FAMILY_JYNX = 124;
	HOLO_POKEMON_FAMILY_ID_V0125_FAMILY_ELECTABUZZ = 125;
	HOLO_POKEMON_FAMILY_ID_V0126_FAMILY_MAGMAR = 126;
	HOLO_POKEMON_FAMILY_ID_V0127_FAMILY_PINSIR = 127;
	HOLO_POKEMON_FAMILY_ID_V0128_FAMILY_TAUROS = 128;
	HOLO_POKEMON_FAMILY_ID_V0129_FAMILY_MAGIKARP = 129;
	HOLO_POKEMON_FAMILY_ID_V0131_FAMILY_LAPRAS = 131;
	HOLO_POKEMON_FAMILY_ID_V0132_FAMILY_DITTO = 132;
	HOLO_POKEMON_FAMILY_ID_V0133_FAMILY_EEVEE = 133;
	HOLO_POKEMON_FAMILY_ID_V0137_FAMILY_PORYGON = 137;
	HOLO_POKEMON_FAMILY_ID_V0138_FAMILY_OMANYTE = 138;
	HOLO_POKEMON_FAMILY_ID_V0140_FAMILY_KABUTO = 140;
	HOLO_POKEMON_FAMILY_ID_V0142_FAMILY_AERODACTYL = 142;
	HOLO_POKEMON_FAMILY_ID_V0143_FAMILY_SNORLAX = 143;
	HOLO_POKEMON_FAMILY_ID_V0144_FAMILY_ARTICUNO = 144;
	HOLO_POKEMON_FAMILY_ID_V0145_FAMILY_ZAPDOS = 145;
	HOLO_POKEMON_FAMILY_ID_V0146_FAMILY_MOLTRES = 146;
	HOLO_POKEMON_FAMILY_ID_V0147_FAMILY_DRATINI = 147;
	HOLO_POKEMON_FAMILY_ID_V0150_FAMILY_MEWTWO = 150;
	HOLO_POKEMON_FAMILY_ID_V0151_FAMILY_MEW = 151;
	HOLO_POKEMON_FAMILY_ID_V0152_FAMILY_CHIKORITA = 152;
	HOLO_POKEMON_FAMILY_ID_V0155_FAMILY_CYNDAQUIL = 155;
	HOLO_POKEMON_FAMILY_ID_V0158_FAMILY_TOTODILE = 158;
	HOLO_POKEMON_FAMILY_ID_V0161_FAMILY_SENTRET = 161;
	HOLO_POKEMON_FAMILY_ID_V0163_FAMILY_HOOTHOOT = 163;
	HOLO_POKEMON_FAMILY_ID_V0165_FAMILY_LEDYBA = 165;
	HOLO_POKEMON_FAMILY_ID_V0167_FAMILY_SPINARAK = 167;
	HOLO_POKEMON_FAMILY_ID_V0170_FAMILY_CHINCHOU = 170;
	HOLO_POKEMON_FAMILY_ID_V0175_FAMILY_TOGEPI = 175;
	HOLO_POKEMON_FAMILY_ID_V0177_FAMILY_NATU = 177;
	HOLO_POKEMON_FAMILY_ID_V0179_FAMILY_MAREEP = 179;
	HOLO_POKEMON_FAMILY_ID_V0183_FAMILY_MARILL = 183;
	HOLO_POKEMON_FAMILY_ID_V0185_FAMILY_SUDOWOODO = 185;
	HOLO_POKEMON_FAMILY_ID_V0187_FAMILY_HOPPIP = 187;
	HOLO_POKEMON_FAMILY_ID_V0190_FAMILY_AIPOM = 190;
	HOLO_POKEMON_FAMILY_ID_V0191_FAMILY_SUNKERN = 191;
	HOLO_POKEMON_FAMILY_ID_V0193_FAMILY_YANMA = 193;
	HOLO_POKEMON_FAMILY_ID_V0194_FAMILY_WOOPER = 194;
	HOLO_POKEMON_FAMILY_ID_V0198_FAMILY_MURKROW = 198;
	HOLO_POKEMON_FAMILY_ID_V0200_FAMILY_MISDREAVUS = 200;
	HOLO_POKEMON_FAMILY_ID_V0201_FAMILY_UNOWN = 201;
	HOLO_POKEMON_FAMILY_ID_V0202_FAMILY_WOBBUFFET = 202;
	HOLO_POKEMON_FAMILY_ID_V0203_FAMILY_GIRAFARIG = 203;
	HOLO_POKEMON_FAMILY_ID_V0204_FAMILY_PINECO = 204;
	HOLO_POKEMON_FAMILY_ID_V0206_FAMILY_DUNSPARCE = 206;
	HOLO_POKEMON_FAMILY_ID_V0207_FAMILY_GLIGAR = 207;
	HOLO_POKEMON_FAMILY_ID_V0209_FAMILY_SNUBBULL = 209;
	HOLO_POKEMON_FAMILY_ID_V0211_FAMILY_QWILFISH = 211;
	HOLO_POKEMON_FAMILY_ID_V0213_FAMILY_SHUCKLE = 213;
	HOLO_POKEMON_FAMILY_ID_V0214_FAMILY_HERACROSS = 214;
	HOLO_POKEMON_FAMILY_ID_V0215_FAMILY_SNEASEL = 215;
	HOLO_POKEMON_FAMILY_ID_V0216_FAMILY_TEDDIURSA = 216;
	HOLO_POKEMON_FAMILY_ID_V0218_FAMILY_SLUGMA = 218;
	HOLO_POKEMON_FAMILY_ID_V0220_FAMILY_SWINUB = 220;
	HOLO_POKEMON_FAMILY_ID_V0222_FAMILY_CORSOLA = 222;
	HOLO_POKEMON_FAMILY_ID_V0223_FAMILY_REMORAID = 223;
	HOLO_POKEMON_FAMILY_ID_V0225_FAMILY_DELIBIRD = 225;
	HOLO_POKEMON_FAMILY_ID_V0226_FAMILY_MANTINE = 226;
	HOLO_POKEMON_FAMILY_ID_V0227_FAMILY_SKARMORY = 227;
	HOLO_POKEMON_FAMILY_ID_V0228_FAMILY_HOUNDOUR = 228;
	HOLO_POKEMON_FAMILY_ID_V0231_FAMILY_PHANPY = 231;
	HOLO_POKEMON_FAMILY_ID_V0234_FAMILY_STANTLER = 234;
	HOLO_POKEMON_FAMILY_ID_V0235_FAMILY_SMEARGLE = 235;
	HOLO_POKEMON_FAMILY_ID_V0236_FAMILY_TYROGUE = 236;
	HOLO_POKEMON_FAMILY_ID_V0241_FAMILY_MILTANK = 241;
	HOLO_POKEMON_FAMILY_ID_V0243_FAMILY_RAIKOU = 243;
	HOLO_POKEMON_FAMILY_ID_V0244_FAMILY_ENTEI = 244;
	HOLO_POKEMON_FAMILY_ID_V0245_FAMILY_SUICUNE = 245;
	HOLO_POKEMON_FAMILY_ID_V0246_FAMILY_LARVITAR = 246;
	HOLO_POKEMON_FAMILY_ID_V0249_FAMILY_LUGIA = 249;
	HOLO_POKEMON_FAMILY_ID_V0250_FAMILY_HO_OH = 250;
	HOLO_POKEMON_FAMILY_ID_V0251_FAMILY_CELEBI = 251;
	HOLO_POKEMON_FAMILY_ID_V0252_FAMILY_TREECKO = 252;
	HOLO_POKEMON_FAMILY_ID_V0255_FAMILY_TORCHIC = 255;
	HOLO_POKEMON_FAMILY_ID_V0258_FAMILY_MUDKIP = 258;
	HOLO_POKEMON_FAMILY_ID_V0261_FAMILY_POOCHYENA = 261;
	HOLO_POKEMON_FAMILY_ID_V0263_FAMILY_ZIGZAGOON = 263;
	HOLO_POKEMON_FAMILY_ID_V0265_FAMILY_WURMPLE = 265;
	HOLO_POKEMON_FAMILY_ID_V0270_FAMILY_LOTAD = 270;
	HOLO_POKEMON_FAMILY_ID_V0273_FAMILY_SEEDOT = 273;
	HOLO_POKEMON_FAMILY_ID_V0276_FAMILY_TAILLOW = 276;
	HOLO_POKEMON_FAMILY_ID_V0278_FAMILY_WINGULL = 278;
	HOLO_POKEMON_FAMILY_ID_V0280_FAMILY_RALTS = 280;
	HOLO_POKEMON_FAMILY_ID_V0283_FAMILY_SURSKIT = 283;
	HOLO_POKEMON_FAMILY_ID_V0285_FAMILY_SHROOMISH = 285;
	HOLO_POKEMON_FAMILY_ID_V0287_FAMILY_SLAKOTH = 287;
	HOLO_POKEMON_FAMILY_ID_V0290_FAMILY_NINCADA = 290;
	HOLO_POKEMON_FAMILY_ID_V0293_FAMILY_WHISMUR = 293;
	HOLO_POKEMON_FAMILY_ID_V0296_FAMILY_MAKUHITA = 296;
	HOLO_POKEMON_FAMILY_ID_V0299_FAMILY_NOSEPASS = 299;
	HOLO_POKEMON_FAMILY_ID_V0300_FAMILY_SKITTY = 300;
	HOLO_POKEMON_FAMILY_ID_V0302_FAMILY_SABLEYE = 302;
	HOLO_POKEMON_FAMILY_ID_V0303_FAMILY_MAWILE = 303;
	HOLO_POKEMON_FAMILY_ID_V0304_FAMILY_ARON = 304;
	HOLO_POKEMON_FAMILY_ID_V0307_FAMILY_MEDITITE = 307;
	HOLO_POKEMON_FAMILY_ID_V0309_FAMILY_ELECTRIKE = 309;
	HOLO_POKEMON_FAMILY_ID_V0311_FAMILY_PLUSLE = 311;
	HOLO_POKEMON_FAMILY_ID_V0312_FAMILY_MINUN = 312;
	HOLO_POKEMON_FAMILY_ID_V0313_FAMILY_VOLBEAT = 313;
	HOLO_POKEMON_FAMILY_ID_V0314_FAMILY_ILLUMISE = 314;
	HOLO_POKEMON_FAMILY_ID_V0315_FAMILY_ROSELIA = 315;
	HOLO_POKEMON_FAMILY_ID_V0316_FAMILY_GULPIN = 316;
	HOLO_POKEMON_FAMILY_ID_V0318_FAMILY_CARVANHA = 318;
	HOLO_POKEMON_FAMILY_ID_V0320_FAMILY_WAILMER = 320;
	HOLO_POKEMON_FAMILY_ID_V0322_FAMILY_NUMEL = 322;
	HOLO_POKEMON_FAMILY_ID_V0324_FAMILY_TORKOAL = 324;
	HOLO_POKEMON_FAMILY_ID_V0325_FAMILY_SPOINK = 325;
	HOLO_POKEMON_FAMILY_ID_V0327_FAMILY_SPINDA = 327;
	HOLO_POKEMON_FAMILY_ID_V0328_FAMILY_TRAPINCH = 328;
	HOLO_POKEMON_FAMILY_ID_V0331_FAMILY_CACNEA = 331;
	HOLO_POKEMON_FAMILY_ID_V0333_FAMILY_SWABLU = 333;
	HOLO_POKEMON_FAMILY_ID_V0335_FAMILY_ZANGOOSE = 335;
	HOLO_POKEMON_FAMILY_ID_V0336_FAMILY_SEVIPER = 336;
	HOLO_POKEMON_FAMILY_ID_V0337_FAMILY_LUNATONE = 337;
	HOLO_POKEMON_FAMILY_ID_V0338_FAMILY_SOLROCK = 338;
	HOLO_POKEMON_FAMILY_ID_V0339_FAMILY_BARBOACH = 339;
	HOLO_POKEMON_FAMILY_ID_V0341_FAMILY_CORPHISH = 341;
	HOLO_POKEMON_FAMILY_ID_V0343_FAMILY_BALTOY = 343;
	HOLO_POKEMON_FAMILY_ID_V0345_FAMILY_LILEEP = 345;
	HOLO_POKEMON_FAMILY_ID_V0347_FAMILY_ANORITH = 347;
	HOLO_POKEMON_FAMILY_ID_V0349_FAMILY_FEEBAS = 349;
	HOLO_POKEMON_FAMILY_ID_V0351_FAMILY_CASTFORM = 351;
	HOLO_POKEMON_FAMILY_ID_V0352_FAMILY_KECLEON = 352;
	HOLO_POKEMON_FAMILY_ID_V0353_FAMILY_SHUPPET = 353;
	HOLO_POKEMON_FAMILY_ID_V0355_FAMILY_DUSKULL = 355;
	HOLO_POKEMON_FAMILY_ID_V0357_FAMILY_TROPIUS = 357;
	HOLO_POKEMON_FAMILY_ID_V0358_FAMILY_CHIMECHO = 358;
	HOLO_POKEMON_FAMILY_ID_V0359_FAMILY_ABSOL = 359;
	HOLO_POKEMON_FAMILY_ID_V0361_FAMILY_SNORUNT = 361;
	HOLO_POKEMON_FAMILY_ID_V0363_FAMILY_SPHEAL = 363;
	HOLO_POKEMON_FAMILY_ID_V0366_FAMILY_CLAMPERL = 366;
	HOLO_POKEMON_FAMILY_ID_V0369_FAMILY_RELICANTH = 369;
	HOLO_POKEMON_FAMILY_ID_V0370_FAMILY_LUVDISC = 370;
	HOLO_POKEMON_FAMILY_ID_V0371_FAMILY_BAGON = 371;
	HOLO_POKEMON_FAMILY_ID_V0374_FAMILY_BELDUM = 374;
	HOLO_POKEMON_FAMILY_ID_V0377_FAMILY_REGIROCK = 377;
	HOLO_POKEMON_FAMILY_ID_V0378_FAMILY_REGICE = 378;
	HOLO_POKEMON_FAMILY_ID_V0379_FAMILY_REGISTEEL = 379;
	HOLO_POKEMON_FAMILY_ID_V0380_FAMILY_LATIAS = 380;
	HOLO_POKEMON_FAMILY_ID_V0381_FAMILY_LATIOS = 381;
	HOLO_POKEMON_FAMILY_ID_V0382_FAMILY_KYOGRE = 382;
	HOLO_POKEMON_FAMILY_ID_V0383_FAMILY_GROUDON = 383;
	HOLO_POKEMON_FAMILY_ID_V0384_FAMILY_RAYQUAZA = 384;
	HOLO_POKEMON_FAMILY_ID_V0385_FAMILY_JIRACHI = 385;
	HOLO_POKEMON_FAMILY_ID_V0386_FAMILY_DEOXYS = 386;
	HOLO_POKEMON_FAMILY_ID_V0387_FAMILY_TURTWIG = 387;
	HOLO_POKEMON_FAMILY_ID_V0390_FAMILY_CHIMCHAR = 390;
	HOLO_POKEMON_FAMILY_ID_V0393_FAMILY_PIPLUP = 393;
	HOLO_POKEMON_FAMILY_ID_V0396_FAMILY_STARLY = 396;
	HOLO_POKEMON_FAMILY_ID_V0399_FAMILY_BIDOOF = 399;
	HOLO_POKEMON_FAMILY_ID_V0401_FAMILY_KRICKETOT = 401;
	HOLO_POKEMON_FAMILY_ID_V0403_FAMILY_SHINX = 403;
	HOLO_POKEMON_FAMILY_ID_V0408_FAMILY_CRANIDOS = 408;
	HOLO_POKEMON_FAMILY_ID_V0410_FAMILY_SHIELDON = 410;
	HOLO_POKEMON_FAMILY_ID_V0412_FAMILY_BURMY = 412;
	HOLO_POKEMON_FAMILY_ID_V0415_FAMILY_COMBEE = 415;
	HOLO_POKEMON_FAMILY_ID_V0417_FAMILY_PACHIRISU = 417;
	HOLO_POKEMON_FAMILY_ID_V0418_FAMILY_BUIZEL = 418;
	HOLO_POKEMON_FAMILY_ID_V0420_FAMILY_CHERUBI = 420;
	HOLO_POKEMON_FAMILY_ID_V0422_FAMILY_SHELLOS = 422;
	HOLO_POKEMON_FAMILY_ID_V0425_FAMILY_DRIFLOON = 425;
	HOLO_POKEMON_FAMILY_ID_V0427_FAMILY_BUNEARY = 427;
	HOLO_POKEMON_FAMILY_ID_V0431_FAMILY_GLAMEOW = 431;
	HOLO_POKEMON_FAMILY_ID_V0434_FAMILY_STUNKY = 434;
	HOLO_POKEMON_FAMILY_ID_V0436_FAMILY_BRONZOR = 436;
	HOLO_POKEMON_FAMILY_ID_V0441_FAMILY_CHATOT = 441;
	HOLO_POKEMON_FAMILY_ID_V0442_FAMILY_SPIRITOMB = 442;
	HOLO_POKEMON_FAMILY_ID_V0443_FAMILY_GIBLE = 443;
	HOLO_POKEMON_FAMILY_ID_V0448_FAMILY_LUCARIO = 448;
	HOLO_POKEMON_FAMILY_ID_V0449_FAMILY_HIPPOPOTAS = 449;
	HOLO_POKEMON_FAMILY_ID_V0451_FAMILY_SKORUPI = 451;
	HOLO_POKEMON_FAMILY_ID_V0453_FAMILY_CROAGUNK = 453;
	HOLO_POKEMON_FAMILY_ID_V0455_FAMILY_CARNIVINE = 455;
	HOLO_POKEMON_FAMILY_ID_V0456_FAMILY_FINNEON = 456;
	HOLO_POKEMON_FAMILY_ID_V0459_FAMILY_SNOVER = 459;
	HOLO_POKEMON_FAMILY_ID_V0479_FAMILY_ROTOM = 479;
	HOLO_POKEMON_FAMILY_ID_V0480_FAMILY_UXIE = 480;
	HOLO_POKEMON_FAMILY_ID_V0481_FAMILY_MESPRIT = 481;
	HOLO_POKEMON_FAMILY_ID_V0482_FAMILY_AZELF = 482;
	HOLO_POKEMON_FAMILY_ID_V0483_FAMILY_DIALGA = 483;
	HOLO_POKEMON_FAMILY_ID_V0484_FAMILY_PALKIA = 484;
	HOLO_POKEMON_FAMILY_ID_V0485_FAMILY_HEATRAN = 485;
	HOLO_POKEMON_FAMILY_ID_V0486_FAMILY_REGIGIGAS = 486;
	HOLO_POKEMON_FAMILY_ID_V0487_FAMILY_GIRATINA = 487;
	HOLO_POKEMON_FAMILY_ID_V0488_FAMILY_CRESSELIA = 488;
	HOLO_POKEMON_FAMILY_ID_V0489_FAMILY_PHIONE = 489;
	HOLO_POKEMON_FAMILY_ID_V0490_FAMILY_MANAPHY = 490;
	HOLO_POKEMON_FAMILY_ID_V0491_FAMILY_DARKRAI = 491;
	HOLO_POKEMON_FAMILY_ID_V0492_FAMILY_SHAYMIN = 492;
	HOLO_POKEMON_FAMILY_ID_V0493_FAMILY_ARCEUS = 493;
	HOLO_POKEMON_FAMILY_ID_V0494_FAMILY_VICTINI = 494;
	HOLO_POKEMON_FAMILY_ID_V0495_FAMILY_SNIVY = 495;
	HOLO_POKEMON_FAMILY_ID_V0498_FAMILY_TEPIG = 498;
	HOLO_POKEMON_FAMILY_ID_V0501_FAMILY_OSHAWOTT = 501;
	HOLO_POKEMON_FAMILY_ID_V0504_FAMILY_PATRAT = 504;
	HOLO_POKEMON_FAMILY_ID_V0506_FAMILY_LILLIPUP = 506;
	HOLO_POKEMON_FAMILY_ID_V0509_FAMILY_PURRLOIN = 509;
	HOLO_POKEMON_FAMILY_ID_V0511_FAMILY_PANSAGE = 511;
	HOLO_POKEMON_FAMILY_ID_V0513_FAMILY_PANSEAR = 513;
	HOLO_POKEMON_FAMILY_ID_V0515_FAMILY_PANPOUR = 515;
	HOLO_POKEMON_FAMILY_ID_V0517_FAMILY_MUNNA = 517;
	HOLO_POKEMON_FAMILY_ID_V0519_FAMILY_PIDOVE = 519;
	HOLO_POKEMON_FAMILY_ID_V0522_FAMILY_BLITZLE = 522;
	HOLO_POKEMON_FAMILY_ID_V0524_FAMILY_ROGGENROLA = 524;
	HOLO_POKEMON_FAMILY_ID_V0527_FAMILY_WOOBAT = 527;
	HOLO_POKEMON_FAMILY_ID_V0529_FAMILY_DRILBUR = 529;
	HOLO_POKEMON_FAMILY_ID_V0531_FAMILY_AUDINO = 531;
	HOLO_POKEMON_FAMILY_ID_V0532_FAMILY_TIMBURR = 532;
	HOLO_POKEMON_FAMILY_ID_V0535_FAMILY_TYMPOLE = 535;
	HOLO_POKEMON_FAMILY_ID_V0538_FAMILY_THROH = 538;
	HOLO_POKEMON_FAMILY_ID_V0539_FAMILY_SAWK = 539;
	HOLO_POKEMON_FAMILY_ID_V0540_FAMILY_SEWADDLE = 540;
	HOLO_POKEMON_FAMILY_ID_V0543_FAMILY_VENIPEDE = 543;
	HOLO_POKEMON_FAMILY_ID_V0546_FAMILY_COTTONEE = 546;
	HOLO_POKEMON_FAMILY_ID_V0548_FAMILY_PETILIL = 548;
	HOLO_POKEMON_FAMILY_ID_V0550_FAMILY_BASCULIN = 550;
	HOLO_POKEMON_FAMILY_ID_V0551_FAMILY_SANDILE = 551;
	HOLO_POKEMON_FAMILY_ID_V0554_FAMILY_DARUMAKA = 554;
	HOLO_POKEMON_FAMILY_ID_V0556_FAMILY_MARACTUS = 556;
	HOLO_POKEMON_FAMILY_ID_V0557_FAMILY_DWEBBLE = 557;
	HOLO_POKEMON_FAMILY_ID_V0559_FAMILY_SCRAGGY = 559;
	HOLO_POKEMON_FAMILY_ID_V0561_FAMILY_SIGILYPH = 561;
	HOLO_POKEMON_FAMILY_ID_V0562_FAMILY_YAMASK = 562;
	HOLO_POKEMON_FAMILY_ID_V0564_FAMILY_TIRTOUGA = 564;
	HOLO_POKEMON_FAMILY_ID_V0566_FAMILY_ARCHEN = 566;
	HOLO_POKEMON_FAMILY_ID_V0568_FAMILY_TRUBBISH = 568;
	HOLO_POKEMON_FAMILY_ID_V0570_FAMILY_ZORUA = 570;
	HOLO_POKEMON_FAMILY_ID_V0572_FAMILY_MINCCINO = 572;
	HOLO_POKEMON_FAMILY_ID_V0574_FAMILY_GOTHITA = 574;
	HOLO_POKEMON_FAMILY_ID_V0577_FAMILY_SOLOSIS = 577;
	HOLO_POKEMON_FAMILY_ID_V0580_FAMILY_DUCKLETT = 580;
	HOLO_POKEMON_FAMILY_ID_V0582_FAMILY_VANILLITE = 582;
	HOLO_POKEMON_FAMILY_ID_V0585_FAMILY_DEERLING = 585;
	HOLO_POKEMON_FAMILY_ID_V0587_FAMILY_EMOLGA = 587;
	HOLO_POKEMON_FAMILY_ID_V0588_FAMILY_KARRABLAST = 588;
	HOLO_POKEMON_FAMILY_ID_V0590_FAMILY_FOONGUS = 590;
	HOLO_POKEMON_FAMILY_ID_V0592_FAMILY_FRILLISH = 592;
	HOLO_POKEMON_FAMILY_ID_V0594_FAMILY_ALOMOMOLA = 594;
	HOLO_POKEMON_FAMILY_ID_V0595_FAMILY_JOLTIK = 595;
	HOLO_POKEMON_FAMILY_ID_V0597_FAMILY_FERROSEED = 597;
	HOLO_POKEMON_FAMILY_ID_V0599_FAMILY_KLINK = 599;
	HOLO_POKEMON_FAMILY_ID_V0602_FAMILY_TYNAMO = 602;
	HOLO_POKEMON_FAMILY_ID_V0605_FAMILY_ELGYEM = 605;
	HOLO_POKEMON_FAMILY_ID_V0607_FAMILY_LITWICK = 607;
	HOLO_POKEMON_FAMILY_ID_V0610_FAMILY_AXEW = 610;
	HOLO_POKEMON_FAMILY_ID_V0613_FAMILY_CUBCHOO = 613;
	HOLO_POKEMON_FAMILY_ID_V0615_FAMILY_CRYOGONAL = 615;
	HOLO_POKEMON_FAMILY_ID_V0616_FAMILY_SHELMET = 616;
	HOLO_POKEMON_FAMILY_ID_V0618_FAMILY_STUNFISK = 618;
	HOLO_POKEMON_FAMILY_ID_V0619_FAMILY_MIENFOO = 619;
	HOLO_POKEMON_FAMILY_ID_V0621_FAMILY_DRUDDIGON = 621;
	HOLO_POKEMON_FAMILY_ID_V0622_FAMILY_GOLETT = 622;
	HOLO_POKEMON_FAMILY_ID_V0624_FAMILY_PAWNIARD = 624;
	HOLO_POKEMON_FAMILY_ID_V0626_FAMILY_BOUFFALANT = 626;
	HOLO_POKEMON_FAMILY_ID_V0627_FAMILY_RUFFLET = 627;
	HOLO_POKEMON_FAMILY_ID_V0629_FAMILY_VULLABY = 629;
	HOLO_POKEMON_FAMILY_ID_V0631_FAMILY_HEATMOR = 631;
	HOLO_POKEMON_FAMILY_ID_V0632_FAMILY_DURANT = 632;
	HOLO_POKEMON_FAMILY_ID_V0633_FAMILY_DEINO = 633;
	HOLO_POKEMON_FAMILY_ID_V0636_FAMILY_LARVESTA = 636;
	HOLO_POKEMON_FAMILY_ID_V0638_FAMILY_COBALION = 638;
	HOLO_POKEMON_FAMILY_ID_V0639_FAMILY_TERRAKION = 639;
	HOLO_POKEMON_FAMILY_ID_V0640_FAMILY_VIRIZION = 640;
	HOLO_POKEMON_FAMILY_ID_V0641_FAMILY_TORNADUS = 641;
	HOLO_POKEMON_FAMILY_ID_V0642_FAMILY_THUNDURUS = 642;
	HOLO_POKEMON_FAMILY_ID_V0643_FAMILY_RESHIRAM = 643;
	HOLO_POKEMON_FAMILY_ID_V0644_FAMILY_ZEKROM = 644;
	HOLO_POKEMON_FAMILY_ID_V0645_FAMILY_LANDORUS = 645;
	HOLO_POKEMON_FAMILY_ID_V0646_FAMILY_KYUREM = 646;
	HOLO_POKEMON_FAMILY_ID_V0647_FAMILY_KELDEO = 647;
	HOLO_POKEMON_FAMILY_ID_V0648_FAMILY_MELOETTA = 648;
	HOLO_POKEMON_FAMILY_ID_V0649_FAMILY_GENESECT = 649;
	HOLO_POKEMON_FAMILY_ID_V0808_FAMILY_MELTAN = 808;
}

enum HoloPokemonId {
	HOLO_POKEMON_ID_POKEMON_UNSET = 0;
	HOLO_POKEMON_ID_V0001_POKEMON_BULBASAUR = 1;
	HOLO_POKEMON_ID_V0002_POKEMON_IVYSAUR = 2;
	HOLO_POKEMON_ID_V0003_POKEMON_VENUSAUR = 3;
	HOLO_POKEMON_ID_V0004_POKEMON_CHARMANDER = 4;
	HOLO_POKEMON_ID_V0005_POKEMON_CHARMELEON = 5;
	HOLO_POKEMON_ID_V0006_POKEMON_CHARIZARD = 6;
	HOLO_POKEMON_ID_V0007_POKEMON_SQUIRTLE = 7;
	HOLO_POKEMON_ID_V0008_POKEMON_WARTORTLE = 8;
	HOLO_POKEMON_ID_V0009_POKEMON_BLASTOISE = 9;
	HOLO_POKEMON_ID_V0010_POKEMON_CATERPIE = 10;
	HOLO_POKEMON_ID_V0011_POKEMON_METAPOD = 11;
	HOLO_POKEMON_ID_V0012_POKEMON_BUTTERFREE = 12;
	HOLO_POKEMON_ID_V0013_POKEMON_WEEDLE = 13;
	HOLO_POKEMON_ID_V0014_POKEMON_KAKUNA = 14;
	HOLO_POKEMON_ID_V0015_POKEMON_BEEDRILL = 15;
	HOLO_POKEMON_ID_V0016_POKEMON_PIDGEY = 16;
	HOLO_POKEMON_ID_V0017_POKEMON_PIDGEOTTO = 17;
	HOLO_POKEMON_ID_V0018_POKEMON_PIDGEOT = 18;
	HOLO_POKEMON_ID_V0019_POKEMON_RATTATA = 19;
	HOLO_POKEMON_ID_V0020_POKEMON_RATICATE = 20;
	HOLO_POKEMON_ID_V0021_POKEMON_SPEAROW = 21;
	HOLO_POKEMON_ID_V0022_POKEMON_FEAROW = 22;
	HOLO_POKEMON_ID_V0023_POKEMON_EKANS = 23;
	HOLO_POKEMON_ID_V0024_POKEMON_ARBOK = 24;
	HOLO_POKEMON_ID_V0025_POKEMON_PIKACHU = 25;
	HOLO_POKEMON_ID_V0026_POKEMON_RAICHU = 26;
	HOLO_POKEMON_ID_V0027_POKEMON_SANDSHREW = 27;
	HOLO_POKEMON_ID_V0028_POKEMON_SANDSLASH = 28;
	HOLO_POKEMON_ID_V0029_POKEMON_NIDORAN = 29;
	HOLO_POKEMON_ID_V0030_POKEMON_NIDORINA = 30;
	HOLO_POKEMON_ID_V0031_POKEMON_NIDOQUEEN = 31;
	HOLO_POKEMON_ID_V0032_POKEMON_NIDORAN = 32;
	HOLO_POKEMON_ID_V0033_POKEMON_NIDORINO = 33;
	HOLO_POKEMON_ID_V0034_POKEMON_NIDOKING = 34;
	HOLO_POKEMON_ID_V0035_POKEMON_CLEFAIRY = 35;
	HOLO_POKEMON_ID_V0036_POKEMON_CLEFABLE = 36;
	HOLO_POKEMON_ID_V0037_POKEMON_VULPIX = 37;
	HOLO_POKEMON_ID_V0038_POKEMON_NINETALES = 38;
	HOLO_POKEMON_ID_V0039_POKEMON_JIGGLYPUFF = 39;
	HOLO_POKEMON_ID_V0040_POKEMON_WIGGLYTUFF = 40;
	HOLO_POKEMON_ID_V0041_POKEMON_ZUBAT = 41;
	HOLO_POKEMON_ID_V0042_POKEMON_GOLBAT = 42;
	HOLO_POKEMON_ID_V0043_POKEMON_ODDISH = 43;
	HOLO_POKEMON_ID_V0044_POKEMON_GLOOM = 44;
	HOLO_POKEMON_ID_V0045_POKEMON_VILEPLUME = 45;
	HOLO_POKEMON_ID_V0046_POKEMON_PARAS = 46;
	HOLO_POKEMON_ID_V0047_POKEMON_PARASECT = 47;
	HOLO_POKEMON_ID_V0048_POKEMON_VENONAT = 48;
	HOLO_POKEMON_ID_V0049_POKEMON_VENOMOTH = 49;
	HOLO_POKEMON_ID_V0050_POKEMON_DIGLETT = 50;
	HOLO_POKEMON_ID_V0051_POKEMON_DUGTRIO = 51;
	HOLO_POKEMON_ID_V0052_POKEMON_MEOWTH = 52;
	HOLO_POKEMON_ID_V0053_POKEMON_PERSIAN = 53;
	HOLO_POKEMON_ID_V0054_POKEMON_PSYDUCK = 54;
	HOLO_POKEMON_ID_V0055_POKEMON_GOLDUCK = 55;
	HOLO_POKEMON_ID_V0056_POKEMON_MANKEY = 56;
	HOLO_POKEMON_ID_V0057_POKEMON_PRIMEAPE = 57;
	HOLO_POKEMON_ID_V0058_POKEMON_GROWLITHE = 58;
	HOLO_POKEMON_ID_V0059_POKEMON_ARCANINE = 59;
	HOLO_POKEMON_ID_V0060_POKEMON_POLIWAG = 60;
	HOLO_POKEMON_ID_V0061_POKEMON_POLIWHIRL = 61;
	HOLO_POKEMON_ID_V0062_POKEMON_POLIWRATH = 62;
	HOLO_POKEMON_ID_V0063_POKEMON_ABRA = 63;
	HOLO_POKEMON_ID_V0064_POKEMON_KADABRA = 64;
	HOLO_POKEMON_ID_V0065_POKEMON_ALAKAZAM = 65;
	HOLO_POKEMON_ID_V0066_POKEMON_MACHOP = 66;
	HOLO_POKEMON_ID_V0067_POKEMON_MACHOKE = 67;
	HOLO_POKEMON_ID_V0068_POKEMON_MACHAMP = 68;
	HOLO_POKEMON_ID_V0069_POKEMON_BELLSPROUT = 69;
	HOLO_POKEMON_ID_V0070_POKEMON_WEEPINBELL = 70;
	HOLO_POKEMON_ID_V0071_POKEMON_VICTREEBEL = 71;
	HOLO_POKEMON_ID_V0072_POKEMON_TENTACOOL = 72;
	HOLO_POKEMON_ID_V0073_POKEMON_TENTACRUEL = 73;
	HOLO_POKEMON_ID_V0074_POKEMON_GEODUDE = 74;
	HOLO_POKEMON_ID_V0075_POKEMON_GRAVELER = 75;
	HOLO_POKEMON_ID_V0076_POKEMON_GOLEM = 76;
	HOLO_POKEMON_ID_V0077_POKEMON_PONYTA = 77;
	HOLO_POKEMON_ID_V0078_POKEMON_RAPIDASH = 78;
	HOLO_POKEMON_ID_V0079_POKEMON_SLOWPOKE = 79;
	HOLO_POKEMON_ID_V0080_POKEMON_SLOWBRO = 80;
	HOLO_POKEMON_ID_V0081_POKEMON_MAGNEMITE = 81;
	HOLO_POKEMON_ID_V0082_POKEMON_MAGNETON = 82;
	HOLO_POKEMON_ID_V0083_POKEMON_FARFETCHD = 83;
	HOLO_POKEMON_ID_V0084_POKEMON_DODUO = 84;
	HOLO_POKEMON_ID_V0085_POKEMON_DODRIO = 85;
	HOLO_POKEMON_ID_V0086_POKEMON_SEEL = 86;
	HOLO_POKEMON_ID_V0087_POKEMON_DEWGONG = 87;
	HOLO_POKEMON_ID_V0088_POKEMON_GRIMER = 88;
	HOLO_POKEMON_ID_V0089_POKEMON_MUK = 89;
	HOLO_POKEMON_ID_V0090_POKEMON_SHELLDER = 90;
	HOLO_POKEMON_ID_V0091_POKEMON_CLOYSTER = 91;
	HOLO_POKEMON_ID_V0092_POKEMON_GASTLY = 92;
	HOLO_POKEMON_ID_V0093_POKEMON_HAUNTER = 93;
	HOLO_POKEMON_ID_V0094_POKEMON_GENGAR = 94;
	HOLO_POKEMON_ID_V0095_POKEMON_ONIX = 95;
	HOLO_POKEMON_ID_V0096_POKEMON_DROWZEE = 96;
	HOLO_POKEMON_ID_V0097_POKEMON_HYPNO = 97;
	HOLO_POKEMON_ID_V0098_POKEMON_KRABBY = 98;
	HOLO_POKEMON_ID_V0099_POKEMON_KINGLER = 99;
	HOLO_POKEMON_ID_V0100_POKEMON_VOLTORB = 100;
	HOLO_POKEMON_ID_V0101_POKEMON_ELECTRODE = 101;
	HOLO_POKEMON_ID_V0102_POKEMON_EXEGGCUTE = 102;
	HOLO_POKEMON_ID_V0103_POKEMON_EXEGGUTOR = 103;
	HOLO_POKEMON_ID_V0104_POKEMON_CUBONE = 104;
	HOLO_POKEMON_ID_V0105_POKEMON_MAROWAK = 105;
	HOLO_POKEMON_ID_V0106_POKEMON_HITMONLEE = 106;
	HOLO_POKEMON_ID_V0107_POKEMON_HITMONCHAN = 107;
	HOLO_POKEMON_ID_V0108_POKEMON_LICKITUNG = 108;
	HOLO_POKEMON_ID_V0109_POKEMON_KOFFING = 109;
	HOLO_POKEMON_ID_V0110_POKEMON_WEEZING = 110;
	HOLO_POKEMON_ID_V0111_POKEMON_RHYHORN = 111;
	HOLO_POKEMON_ID_V0112_POKEMON_RHYDON = 112;
	HOLO_POKEMON_ID_V0113_POKEMON_CHANSEY = 113;
	HOLO_POKEMON_ID_V0114_POKEMON_TANGELA = 114;
	HOLO_POKEMON_ID_V0115_POKEMON_KANGASKHAN = 115;
	HOLO_POKEMON_ID_V0116_POKEMON_HORSEA = 116;
	HOLO_POKEMON_ID_V0117_POKEMON_SEADRA = 117;
	HOLO_POKEMON_ID_V0118_POKEMON_GOLDEEN = 118;
	HOLO_POKEMON_ID_V0119_POKEMON_SEAKING = 119;
	HOLO_POKEMON_ID_V0120_POKEMON_STARYU = 120;
	HOLO_POKEMON_ID_V0121_POKEMON_STARMIE = 121;
	HOLO_POKEMON_ID_V0122_POKEMON_MR_MIME = 122;
	HOLO_POKEMON_ID_V0123_POKEMON_SCYTHER = 123;
	HOLO_POKEMON_ID_V0124_POKEMON_JYNX = 124;
	HOLO_POKEMON_ID_V0125_POKEMON_ELECTABUZZ = 125;
	HOLO_POKEMON_ID_V0126_POKEMON_MAGMAR = 126;
	HOLO_POKEMON_ID_V0127_POKEMON_PINSIR = 127;
	HOLO_POKEMON_ID_V0128_POKEMON_TAUROS = 128;
	HOLO_POKEMON_ID_V0129_POKEMON_MAGIKARP = 129;
	HOLO_POKEMON_ID_V0130_POKEMON_GYARADOS = 130;
	HOLO_POKEMON_ID_V0131_POKEMON_LAPRAS = 131;
	HOLO_POKEMON_ID_V0132_POKEMON_DITTO = 132;
	HOLO_POKEMON_ID_V0133_POKEMON_EEVEE = 133;
	HOLO_POKEMON_ID_V0134_POKEMON_VAPOREON = 134;
	HOLO_POKEMON_ID_V0135_POKEMON_JOLTEON = 135;
	HOLO_POKEMON_ID_V0136_POKEMON_FLAREON = 136;
	HOLO_POKEMON_ID_V0137_POKEMON_PORYGON = 137;
	HOLO_POKEMON_ID_V0138_POKEMON_OMANYTE = 138;
	HOLO_POKEMON_ID_V0139_POKEMON_OMASTAR = 139;
	HOLO_POKEMON_ID_V0140_POKEMON_KABUTO = 140;
	HOLO_POKEMON_ID_V0141_POKEMON_KABUTOPS = 141;
	HOLO_POKEMON_ID_V0142_POKEMON_AERODACTYL = 142;
	HOLO_POKEMON_ID_V0143_POKEMON_SNORLAX = 143;
	HOLO_POKEMON_ID_V0144_POKEMON_ARTICUNO = 144;
	HOLO_POKEMON_ID_V0145_POKEMON_ZAPDOS = 145;
	HOLO_POKEMON_ID_V0146_POKEMON_MOLTRES = 146;
	HOLO_POKEMON_ID_V0147_POKEMON_DRATINI = 147;
	HOLO_POKEMON_ID_V0148_POKEMON_DRAGONAIR = 148;
	HOLO_POKEMON_ID_V0149_POKEMON_DRAGONITE = 149;
	HOLO_POKEMON_ID_V0150_POKEMON_MEWTWO = 150;
	HOLO_POKEMON_ID_V0151_POKEMON_MEW = 151;
	HOLO_POKEMON_ID_V0152_POKEMON_CHIKORITA = 152;
	HOLO_POKEMON_ID_V0153_POKEMON_BAYLEEF = 153;
	HOLO_POKEMON_ID_V0154_POKEMON_MEGANIUM = 154;
	HOLO_POKEMON_ID_V0155_POKEMON_CYNDAQUIL = 155;
	HOLO_POKEMON_ID_V0156_POKEMON_QUILAVA = 156;
	HOLO_POKEMON_ID_V0157_POKEMON_TYPHLOSION = 157;
	HOLO_POKEMON_ID_V0158_POKEMON_TOTODILE = 158;
	HOLO_POKEMON_ID_V0159_POKEMON_CROCONAW = 159;
	HOLO_POKEMON_ID_V0160_POKEMON_FERALIGATR = 160;
	HOLO_POKEMON_ID_V0161_POKEMON_SENTRET = 161;
	HOLO_POKEMON_ID_V0162_POKEMON_FURRET = 162;
	HOLO_POKEMON_ID_V0163_POKEMON_HOOTHOOT = 163;
	HOLO_POKEMON_ID_V0164_POKEMON_NOCTOWL = 164;
	HOLO_POKEMON_ID_V0165_POKEMON_LEDYBA = 165;
	HOLO_POKEMON_ID_V0166_POKEMON_LEDIAN = 166;
	HOLO_POKEMON_ID_V0167_POKEMON_SPINARAK = 167;
	HOLO_POKEMON_ID_V0168_POKEMON_ARIADOS = 168;
	HOLO_POKEMON_ID_V0169_POKEMON_CROBAT = 169;
	HOLO_POKEMON_ID_V0170_POKEMON_CHINCHOU = 170;
	HOLO_POKEMON_ID_V0171_POKEMON_LANTURN = 171;
	HOLO_POKEMON_ID_V0172_POKEMON_PICHU = 172;
	HOLO_POKEMON_ID_V0173_POKEMON_CLEFFA = 173;
	HOLO_POKEMON_ID_V0174_POKEMON_IGGLYBUFF = 174;
	HOLO_POKEMON_ID_V0175_POKEMON_TOGEPI = 175;
	HOLO_POKEMON_ID_V0176_POKEMON_TOGETIC = 176;
	HOLO_POKEMON_ID_V0177_POKEMON_NATU = 177;
	HOLO_POKEMON_ID_V0178_POKEMON_XATU = 178;
	HOLO_POKEMON_ID_V0179_POKEMON_MAREEP = 179;
	HOLO_POKEMON_ID_V0180_POKEMON_FLAAFFY = 180;
	HOLO_POKEMON_ID_V0181_POKEMON_AMPHAROS = 181;
	HOLO_POKEMON_ID_V0182_POKEMON_BELLOSSOM = 182;
	HOLO_POKEMON_ID_V0183_POKEMON_MARILL = 183;
	HOLO_POKEMON_ID_V0184_POKEMON_AZUMARILL = 184;
	HOLO_POKEMON_ID_V0185_POKEMON_SUDOWOODO = 185;
	HOLO_POKEMON_ID_V0186_POKEMON_POLITOED = 186;
	HOLO_POKEMON_ID_V0187_POKEMON_HOPPIP = 187;
	HOLO_POKEMON_ID_V0188_POKEMON_SKIPLOOM = 188;
	HOLO_POKEMON_ID_V0189_POKEMON_JUMPLUFF = 189;
	HOLO_POKEMON_ID_V0190_POKEMON_AIPOM = 190;
	HOLO_POKEMON_ID_V0191_POKEMON_SUNKERN = 191;
	HOLO_POKEMON_ID_V0192_POKEMON_SUNFLORA = 192;
	HOLO_POKEMON_ID_V0193_POKEMON_YANMA = 193;
	HOLO_POKEMON_ID_V0194_POKEMON_WOOPER = 194;
	HOLO_POKEMON_ID_V0195_POKEMON_QUAGSIRE = 195;
	HOLO_POKEMON_ID_V0196_POKEMON_ESPEON = 196;
	HOLO_POKEMON_ID_V0197_POKEMON_UMBREON = 197;
	HOLO_POKEMON_ID_V0198_POKEMON_MURKROW = 198;
	HOLO_POKEMON_ID_V0199_POKEMON_SLOWKING = 199;
	HOLO_POKEMON_ID_V0200_POKEMON_MISDREAVUS = 200;
	HOLO_POKEMON_ID_V0201_POKEMON_UNOWN = 201;
	HOLO_POKEMON_ID_V0202_POKEMON_WOBBUFFET = 202;
	HOLO_POKEMON_ID_V0203_POKEMON_GIRAFARIG = 203;
	HOLO_POKEMON_ID_V0204_POKEMON_PINECO = 204;
	HOLO_POKEMON_ID_V0205_POKEMON_FORRETRESS = 205;
	HOLO_POKEMON_ID_V0206_POKEMON_DUNSPARCE = 206;
	HOLO_POKEMON_ID_V0207_POKEMON_GLIGAR = 207;
	HOLO_POKEMON_ID_V0208_POKEMON_STEELIX = 208;
	HOLO_POKEMON_ID_V0209_POKEMON_SNUBBULL = 209;
	HOLO_POKEMON_ID_V0210_POKEMON_GRANBULL = 210;
	HOLO_POKEMON_ID_V0211_POKEMON_QWILFISH = 211;
	HOLO_POKEMON_ID_V0212_POKEMON_SCIZOR = 212;
	HOLO_POKEMON_ID_V0213_POKEMON_SHUCKLE = 213;
	HOLO_POKEMON_ID_V0214_POKEMON_HERACROSS = 214;
	HOLO_POKEMON_ID_V0215_POKEMON_SNEASEL = 215;
	HOLO_POKEMON_ID_V0216_POKEMON_TEDDIURSA = 216;
	HOLO_POKEMON_ID_V0217_POKEMON_URSARING = 217;
	HOLO_POKEMON_ID_V0218_POKEMON_SLUGMA = 218;
	HOLO_POKEMON_ID_V0219_POKEMON_MAGCARGO = 219;
	HOLO_POKEMON_ID_V0220_POKEMON_SWINUB = 220;
	HOLO_POKEMON_ID_V0221_POKEMON_PILOSWINE = 221;
	HOLO_POKEMON_ID_V0222_POKEMON_CORSOLA = 222;
	HOLO_POKEMON_ID_V0223_POKEMON_REMORAID = 223;
	HOLO_POKEMON_ID_V0224_POKEMON_OCTILLERY = 224;
	HOLO_POKEMON_ID_V0225_POKEMON_DELIBIRD = 225;
	HOLO_POKEMON_ID_V0226_POKEMON_MANTINE = 226;
	HOLO_POKEMON_ID_V0227_POKEMON_SKARMORY = 227;
	HOLO_POKEMON_ID_V0228_POKEMON_HOUNDOUR = 228;
	HOLO_POKEMON_ID_V0229_POKEMON_HOUNDOOM = 229;
	HOLO_POKEMON_ID_V0230_POKEMON_KINGDRA = 230;
	HOLO_POKEMON_ID_V0231_POKEMON_PHANPY = 231;
	HOLO_POKEMON_ID_V0232_POKEMON_DONPHAN = 232;
	HOLO_POKEMON_ID_V0233_POKEMON_PORYGON2 = 233;
	HOLO_POKEMON_ID_V0234_POKEMON_STANTLER = 234;
	HOLO_POKEMON_ID_V0235_POKEMON_SMEARGLE = 235;
	HOLO_POKEMON_ID_V0236_POKEMON_TYROGUE = 236;
	HOLO_POKEMON_ID_V0237_POKEMON_HITMONTOP = 237;
	HOLO_POKEMON_ID_V0238_POKEMON_SMOOCHUM = 238;
	HOLO_POKEMON_ID_V0239_POKEMON_ELEKID = 239;
	HOLO_POKEMON_ID_V0240_POKEMON_MAGBY = 240;
	HOLO_POKEMON_ID_V0241_POKEMON_MILTANK = 241;
	HOLO_POKEMON_ID_V0242_POKEMON_BLISSEY = 242;
	HOLO_POKEMON_ID_V0243_POKEMON_RAIKOU = 243;
	HOLO_POKEMON_ID_V0244_POKEMON_ENTEI = 244;
	HOLO_POKEMON_ID_V0245_POKEMON_SUICUNE = 245;
	HOLO_POKEMON_ID_V0246_POKEMON_LARVITAR = 246;
	HOLO_POKEMON_ID_V0247_POKEMON_PUPITAR = 247;
	HOLO_POKEMON_ID_V0248_POKEMON_TYRANITAR = 248;
	HOLO_POKEMON_ID_V0249_POKEMON_LUGIA = 249;
	HOLO_POKEMON_ID_V0250_POKEMON_HO_OH = 250;
	HOLO_POKEMON_ID_V0251_POKEMON_CELEBI = 251;
	HOLO_POKEMON_ID_V0252_POKEMON_TREECKO = 252;
	HOLO_POKEMON_ID_V0253_POKEMON_GROVYLE = 253;
	HOLO_POKEMON_ID_V0254_POKEMON_SCEPTILE = 254;
	HOLO_POKEMON_ID_V0255_POKEMON_TORCHIC = 255;
	HOLO_POKEMON_ID_V0256_POKEMON_COMBUSKEN = 256;
	HOLO_POKEMON_ID_V0257_POKEMON_BLAZIKEN = 257;
	HOLO_POKEMON_ID_V0258_POKEMON_MUDKIP = 258;
	HOLO_POKEMON_ID_V0259_POKEMON_MARSHTOMP = 259;
	HOLO_POKEMON_ID_V0260_POKEMON_SWAMPERT = 260;
	HOLO_POKEMON_ID_V0261_POKEMON_POOCHYENA = 261;
	HOLO_POKEMON_ID_V0262_POKEMON_MIGHTYENA = 262;
	HOLO_POKEMON_ID_V0263_POKEMON_ZIGZAGOON = 263;
	HOLO_POKEMON_ID_V0264_POKEMON_LINOONE = 264;
	HOLO_POKEMON_ID_V0265_POKEMON_WURMPLE = 265;
	HOLO_POKEMON_ID_V0266_POKEMON_SILCOON = 266;
	HOLO_POKEMON_ID_V0267_POKEMON_BEAUTIFLY = 267;
	HOLO_POKEMON_ID_V0268_POKEMON_CASCOON = 268;
	HOLO_POKEMON_ID_V0269_POKEMON_DUSTOX = 269;
	HOLO_POKEMON_ID_V0270_POKEMON_LOTAD = 270;
	HOLO_POKEMON_ID_V0271_POKEMON_LOMBRE = 271;
	HOLO_POKEMON_ID_V0272_POKEMON_LUDICOLO = 272;
	HOLO_POKEMON_ID_V0273_POKEMON_SEEDOT = 273;
	HOLO_POKEMON_ID_V0274_POKEMON_NUZLEAF = 274;
	HOLO_POKEMON_ID_V0275_POKEMON_SHIFTRY = 275;
	HOLO_POKEMON_ID_V0276_POKEMON_TAILLOW = 276;
	HOLO_POKEMON_ID_V0277_POKEMON_SWELLOW = 277;
	HOLO_POKEMON_ID_V0278_POKEMON_WINGULL = 278;
	HOLO_POKEMON_ID_V0279_POKEMON_PELIPPER = 279;
	HOLO_POKEMON_ID_V0280_POKEMON_RALTS = 280;
	HOLO_POKEMON_ID_V0281_POKEMON_KIRLIA = 281;
	HOLO_POKEMON_ID_V0282_POKEMON_GARDEVOIR = 282;
	HOLO_POKEMON_ID_V0283_POKEMON_SURSKIT = 283;
	HOLO_POKEMON_ID_V0284_POKEMON_MASQUERAIN = 284;
	HOLO_POKEMON_ID_V0285_POKEMON_SHROOMISH = 285;
	HOLO_POKEMON_ID_V0286_POKEMON_BRELOOM = 286;
	HOLO_POKEMON_ID_V0287_POKEMON_SLAKOTH = 287;
	HOLO_POKEMON_ID_V0288_POKEMON_VIGOROTH = 288;
	HOLO_POKEMON_ID_V0289_POKEMON_SLAKING = 289;
	HOLO_POKEMON_ID_V0290_POKEMON_NINCADA = 290;
	HOLO_POKEMON_ID_V0291_POKEMON_NINJASK = 291;
	HOLO_POKEMON_ID_V0292_POKEMON_SHEDINJA = 292;
	HOLO_POKEMON_ID_V0293_POKEMON_WHISMUR = 293;
	HOLO_POKEMON_ID_V0294_POKEMON_LOUDRED = 294;
	HOLO_POKEMON_ID_V0295_POKEMON_EXPLOUD = 295;
	HOLO_POKEMON_ID_V0296_POKEMON_MAKUHITA = 296;
	HOLO_POKEMON_ID_V0297_POKEMON_HARIYAMA = 297;
	HOLO_POKEMON_ID_V0298_POKEMON_AZURILL = 298;
	HOLO_POKEMON_ID_V0299_POKEMON_NOSEPASS = 299;
	HOLO_POKEMON_ID_V0300_POKEMON_SKITTY = 300;
	HOLO_POKEMON_ID_V0301_POKEMON_DELCATTY = 301;
	HOLO_POKEMON_ID_V0302_POKEMON_SABLEYE = 302;
	HOLO_POKEMON_ID_V0303_POKEMON_MAWILE = 303;
	HOLO_POKEMON_ID_V0304_POKEMON_ARON = 304;
	HOLO_POKEMON_ID_V0305_POKEMON_LAIRON = 305;
	HOLO_POKEMON_ID_V0306_POKEMON_AGGRON = 306;
	HOLO_POKEMON_ID_V0307_POKEMON_MEDITITE = 307;
	HOLO_POKEMON_ID_V0308_POKEMON_MEDICHAM = 308;
	HOLO_POKEMON_ID_V0309_POKEMON_ELECTRIKE = 309;
	HOLO_POKEMON_ID_V0310_POKEMON_MANECTRIC = 310;
	HOLO_POKEMON_ID_V0311_POKEMON_PLUSLE = 311;
	HOLO_POKEMON_ID_V0312_POKEMON_MINUN = 312;
	HOLO_POKEMON_ID_V0313_POKEMON_VOLBEAT = 313;
	HOLO_POKEMON_ID_V0314_POKEMON_ILLUMISE = 314;
	HOLO_POKEMON_ID_V0315_POKEMON_ROSELIA = 315;
	HOLO_POKEMON_ID_V0316_POKEMON_GULPIN = 316;
	HOLO_POKEMON_ID_V0317_POKEMON_SWALOT = 317;
	HOLO_POKEMON_ID_V0318_POKEMON_CARVANHA = 318;
	HOLO_POKEMON_ID_V0319_POKEMON_SHARPEDO = 319;
	HOLO_POKEMON_ID_V0320_POKEMON_WAILMER = 320;
	HOLO_POKEMON_ID_V0321_POKEMON_WAILORD = 321;
	HOLO_POKEMON_ID_V0322_POKEMON_NUMEL = 322;
	HOLO_POKEMON_ID_V0323_POKEMON_CAMERUPT = 323;
	HOLO_POKEMON_ID_V0324_POKEMON_TORKOAL = 324;
	HOLO_POKEMON_ID_V0325_POKEMON_SPOINK = 325;
	HOLO_POKEMON_ID_V0326_POKEMON_GRUMPIG = 326;
	HOLO_POKEMON_ID_V0327_POKEMON_SPINDA = 327;
	HOLO_POKEMON_ID_V0328_POKEMON_TRAPINCH = 328;
	HOLO_POKEMON_ID_V0329_POKEMON_VIBRAVA = 329;
	HOLO_POKEMON_ID_V0330_POKEMON_FLYGON = 330;
	HOLO_POKEMON_ID_V0331_POKEMON_CACNEA = 331;
	HOLO_POKEMON_ID_V0332_POKEMON_CACTURNE = 332;
	HOLO_POKEMON_ID_V0333_POKEMON_SWABLU = 333;
	HOLO_POKEMON_ID_V0334_POKEMON_ALTARIA = 334;
	HOLO_POKEMON_ID_V0335_POKEMON_ZANGOOSE = 335;
	HOLO_POKEMON_ID_V0336_POKEMON_SEVIPER = 336;
	HOLO_POKEMON_ID_V0337_POKEMON_LUNATONE = 337;
	HOLO_POKEMON_ID_V0338_POKEMON_SOLROCK = 338;
	HOLO_POKEMON_ID_V0339_POKEMON_BARBOACH = 339;
	HOLO_POKEMON_ID_V0340_POKEMON_WHISCASH = 340;
	HOLO_POKEMON_ID_V0341_POKEMON_CORPHISH = 341;
	HOLO_POKEMON_ID_V0342_POKEMON_CRAWDAUNT = 342;
	HOLO_POKEMON_ID_V0343_POKEMON_BALTOY = 343;
	HOLO_POKEMON_ID_V0344_POKEMON_CLAYDOL = 344;
	HOLO_POKEMON_ID_V0345_POKEMON_LILEEP = 345;
	HOLO_POKEMON_ID_V0346_POKEMON_CRADILY = 346;
	HOLO_POKEMON_ID_V0347_POKEMON_ANORITH = 347;
	HOLO_POKEMON_ID_V0348_POKEMON_ARMALDO = 348;
	HOLO_POKEMON_ID_V0349_POKEMON_FEEBAS = 349;
	HOLO_POKEMON_ID_V0350_POKEMON_MILOTIC = 350;
	HOLO_POKEMON_ID_V0351_POKEMON_CASTFORM = 351;
	HOLO_POKEMON_ID_V0352_POKEMON_KECLEON = 352;
	HOLO_POKEMON_ID_V0353_POKEMON_SHUPPET = 353;
	HOLO_POKEMON_ID_V0354_POKEMON_BANETTE = 354;
	HOLO_POKEMON_ID_V0355_POKEMON_DUSKULL = 355;
	HOLO_POKEMON_ID_V0356_POKEMON_DUSCLOPS = 356;
	HOLO_POKEMON_ID_V0357_POKEMON_TROPIUS = 357;
	HOLO_POKEMON_ID_V0358_POKEMON_CHIMECHO = 358;
	HOLO_POKEMON_ID_V0359_POKEMON_ABSOL = 359;
	HOLO_POKEMON_ID_V0360_POKEMON_WYNAUT = 360;
	HOLO_POKEMON_ID_V0361_POKEMON_SNORUNT = 361;
	HOLO_POKEMON_ID_V0362_POKEMON_GLALIE = 362;
	HOLO_POKEMON_ID_V0363_POKEMON_SPHEAL = 363;
	HOLO_POKEMON_ID_V0364_POKEMON_SEALEO = 364;
	HOLO_POKEMON_ID_V0365_POKEMON_WALREIN = 365;
	HOLO_POKEMON_ID_V0366_POKEMON_CLAMPERL = 366;
	HOLO_POKEMON_ID_V0367_POKEMON_HUNTAIL = 367;
	HOLO_POKEMON_ID_V0368_POKEMON_GOREBYSS = 368;
	HOLO_POKEMON_ID_V0369_POKEMON_RELICANTH = 369;
	HOLO_POKEMON_ID_V0370_POKEMON_LUVDISC = 370;
	HOLO_POKEMON_ID_V0371_POKEMON_BAGON = 371;
	HOLO_POKEMON_ID_V0372_POKEMON_SHELGON = 372;
	HOLO_POKEMON_ID_V0373_POKEMON_SALAMENCE = 373;
	HOLO_POKEMON_ID_V0374_POKEMON_BELDUM = 374;
	HOLO_POKEMON_ID_V0375_POKEMON_METANG = 375;
	HOLO_POKEMON_ID_V0376_POKEMON_METAGROSS = 376;
	HOLO_POKEMON_ID_V0377_POKEMON_REGIROCK = 377;
	HOLO_POKEMON_ID_V0378_POKEMON_REGICE = 378;
	HOLO_POKEMON_ID_V0379_POKEMON_REGISTEEL = 379;
	HOLO_POKEMON_ID_V0380_POKEMON_LATIAS = 380;
	HOLO_POKEMON_ID_V0381_POKEMON_LATIOS = 381;
	HOLO_POKEMON_ID_V0382_POKEMON_KYOGRE = 382;
	HOLO_POKEMON_ID_V0383_POKEMON_GROUDON = 383;
	HOLO_POKEMON_ID_V0384_POKEMON_RAYQUAZA = 384;
	HOLO_POKEMON_ID_V0385_POKEMON_JIRACHI = 385;
	HOLO_POKEMON_ID_V0386_POKEMON_DEOXYS = 386;
	HOLO_POKEMON_ID_V0387_POKEMON_TURTWIG = 387;
	HOLO_POKEMON_ID_V0388_POKEMON_GROTLE = 388;
	HOLO_POKEMON_ID_V0389_POKEMON_TORTERRA = 389;
	HOLO_POKEMON_ID_V0390_POKEMON_CHIMCHAR = 390;
	HOLO_POKEMON_ID_V0391_POKEMON_MONFERNO = 391;
	HOLO_POKEMON_ID_V0392_POKEMON_INFERNAPE = 392;
	HOLO_POKEMON_ID_V0393_POKEMON_PIPLUP = 393;
	HOLO_POKEMON_ID_V0394_POKEMON_PRINPLUP = 394;
	HOLO_POKEMON_ID_V0395_POKEMON_EMPOLEON = 395;
	HOLO_POKEMON_ID_V0396_POKEMON_STARLY = 396;
	HOLO_POKEMON_ID_V0397_POKEMON_STARAVIA = 397;
	HOLO_POKEMON_ID_V0398_POKEMON_STARAPTOR = 398;
	HOLO_POKEMON_ID_V0399_POKEMON_BIDOOF = 399;
	HOLO_POKEMON_ID_V0400_POKEMON_BIBAREL = 400;
	HOLO_POKEMON_ID_V0401_POKEMON_KRICKETOT = 401;
	HOLO_POKEMON_ID_V0402_POKEMON_KRICKETUNE = 402;
	HOLO_POKEMON_ID_V0403_POKEMON_SHINX = 403;
	HOLO_POKEMON_ID_V0404_POKEMON_LUXIO = 404;
	HOLO_POKEMON_ID_V0405_POKEMON_LUXRAY = 405;
	HOLO_POKEMON_ID_V0406_POKEMON_BUDEW = 406;
	HOLO_POKEMON_ID_V0407_POKEMON_ROSERADE = 407;
	HOLO_POKEMON_ID_V0408_POKEMON_CRANIDOS = 408;
	HOLO_POKEMON_ID_V0409_POKEMON_RAMPARDOS = 409;
	HOLO_POKEMON_ID_V0410_POKEMON_SHIELDON = 410;
	HOLO_POKEMON_ID_V0411_POKEMON_BASTIODON = 411;
	HOLO_POKEMON_ID_V0412_POKEMON_BURMY = 412;
	HOLO_POKEMON_ID_V0413_POKEMON_WORMADAM = 413;
	HOLO_POKEMON_ID_V0414_POKEMON_MOTHIM = 414;
	HOLO_POKEMON_ID_V0415_POKEMON_COMBEE = 415;
	HOLO_POKEMON_ID_V0416_POKEMON_VESPIQUEN = 416;
	HOLO_POKEMON_ID_V0417_POKEMON_PACHIRISU = 417;
	HOLO_POKEMON_ID_V0418_POKEMON_BUIZEL = 418;
	HOLO_POKEMON_ID_V0419_POKEMON_FLOATZEL = 419;
	HOLO_POKEMON_ID_V0420_POKEMON_CHERUBI = 420;
	HOLO_POKEMON_ID_V0421_POKEMON_CHERRIM = 421;
	HOLO_POKEMON_ID_V0422_POKEMON_SHELLOS = 422;
	HOLO_POKEMON_ID_V0423_POKEMON_GASTRODON = 423;
	HOLO_POKEMON_ID_V0424_POKEMON_AMBIPOM = 424;
	HOLO_POKEMON_ID_V0425_POKEMON_DRIFLOON = 425;
	HOLO_POKEMON_ID_V0426_POKEMON_DRIFBLIM = 426;
	HOLO_POKEMON_ID_V0427_POKEMON_BUNEARY = 427;
	HOLO_POKEMON_ID_V0428_POKEMON_LOPUNNY = 428;
	HOLO_POKEMON_ID_V0429_POKEMON_MISMAGIUS = 429;
	HOLO_POKEMON_ID_V0430_POKEMON_HONCHKROW = 430;
	HOLO_POKEMON_ID_V0431_POKEMON_GLAMEOW = 431;
	HOLO_POKEMON_ID_V0432_POKEMON_PURUGLY = 432;
	HOLO_POKEMON_ID_V0433_POKEMON_CHINGLING = 433;
	HOLO_POKEMON_ID_V0434_POKEMON_STUNKY = 434;
	HOLO_POKEMON_ID_V0435_POKEMON_SKUNTANK = 435;
	HOLO_POKEMON_ID_V0436_POKEMON_BRONZOR = 436;
	HOLO_POKEMON_ID_V0437_POKEMON_BRONZONG = 437;
	HOLO_POKEMON_ID_V0438_POKEMON_BONSLY = 438;
	HOLO_POKEMON_ID_V0439_POKEMON_MIME_JR = 439;
	HOLO_POKEMON_ID_V0440_POKEMON_HAPPINY = 440;
	HOLO_POKEMON_ID_V0441_POKEMON_CHATOT = 441;
	HOLO_POKEMON_ID_V0442_POKEMON_SPIRITOMB = 442;
	HOLO_POKEMON_ID_V0443_POKEMON_GIBLE = 443;
	HOLO_POKEMON_ID_V0444_POKEMON_GABITE = 444;
	HOLO_POKEMON_ID_V0445_POKEMON_GARCHOMP = 445;
	HOLO_POKEMON_ID_V0446_POKEMON_MUNCHLAX = 446;
	HOLO_POKEMON_ID_V0447_POKEMON_RIOLU = 447;
	HOLO_POKEMON_ID_V0448_POKEMON_LUCARIO = 448;
	HOLO_POKEMON_ID_V0449_POKEMON_HIPPOPOTAS = 449;
	HOLO_POKEMON_ID_V0450_POKEMON_HIPPOWDON = 450;
	HOLO_POKEMON_ID_V0451_POKEMON_SKORUPI = 451;
	HOLO_POKEMON_ID_V0452_POKEMON_DRAPION = 452;
	HOLO_POKEMON_ID_V0453_POKEMON_CROAGUNK = 453;
	HOLO_POKEMON_ID_V0454_POKEMON_TOXICROAK = 454;
	HOLO_POKEMON_ID_V0455_POKEMON_CARNIVINE = 455;
	HOLO_POKEMON_ID_V0456_POKEMON_FINNEON = 456;
	HOLO_POKEMON_ID_V0457_POKEMON_LUMINEON = 457;
	HOLO_POKEMON_ID_V0458_POKEMON_MANTYKE = 458;
	HOLO_POKEMON_ID_V0459_POKEMON_SNOVER = 459;
	HOLO_POKEMON_ID_V0460_POKEMON_ABOMASNOW = 460;
	HOLO_POKEMON_ID_V0461_POKEMON_WEAVILE = 461;
	HOLO_POKEMON_ID_V0462_POKEMON_MAGNEZONE = 462;
	HOLO_POKEMON_ID_V0463_POKEMON_LICKILICKY = 463;
	HOLO_POKEMON_ID_V0464_POKEMON_RHYPERIOR = 464;
	HOLO_POKEMON_ID_V0465_POKEMON_TANGROWTH = 465;
	HOLO_POKEMON_ID_V0466_POKEMON_ELECTIVIRE = 466;
	HOLO_POKEMON_ID_V0467_POKEMON_MAGMORTAR = 467;
	HOLO_POKEMON_ID_V0468_POKEMON_TOGEKISS = 468;
	HOLO_POKEMON_ID_V0469_POKEMON_YANMEGA = 469;
	HOLO_POKEMON_ID_V0470_POKEMON_LEAFEON = 470;
	HOLO_POKEMON_ID_V0471_POKEMON_GLACEON = 471;
	HOLO_POKEMON_ID_V0472_POKEMON_GLISCOR = 472;
	HOLO_POKEMON_ID_V0473_POKEMON_MAMOSWINE = 473;
	HOLO_POKEMON_ID_V0474_POKEMON_PORYGON_Z = 474;
	HOLO_POKEMON_ID_V0475_POKEMON_GALLADE = 475;
	HOLO_POKEMON_ID_V0476_POKEMON_PROBOPASS = 476;
	HOLO_POKEMON_ID_V0477_POKEMON_DUSKNOIR = 477;
	HOLO_POKEMON_ID_V0478_POKEMON_FROSLASS = 478;
	HOLO_POKEMON_ID_V0479_POKEMON_ROTOM = 479;
	HOLO_POKEMON_ID_V0480_POKEMON_UXIE = 480;
	HOLO_POKEMON_ID_V0481_POKEMON_MESPRIT = 481;
	HOLO_POKEMON_ID_V0482_POKEMON_AZELF = 482;
	HOLO_POKEMON_ID_V0483_POKEMON_DIALGA = 483;
	HOLO_POKEMON_ID_V0484_POKEMON_PALKIA = 484;
	HOLO_POKEMON_ID_V0485_POKEMON_HEATRAN = 485;
	HOLO_POKEMON_ID_V0486_POKEMON_REGIGIGAS = 486;
	HOLO_POKEMON_ID_V0487_POKEMON_GIRATINA = 487;
	HOLO_POKEMON_ID_V0488_POKEMON_CRESSELIA = 488;
	HOLO_POKEMON_ID_V0489_POKEMON_PHIONE = 489;
	HOLO_POKEMON_ID_V0490_POKEMON_MANAPHY = 490;
	HOLO_POKEMON_ID_V0491_POKEMON_DARKRAI = 491;
	HOLO_POKEMON_ID_V0492_POKEMON_SHAYMIN = 492;
	HOLO_POKEMON_ID_V0493_POKEMON_ARCEUS = 493;
	HOLO_POKEMON_ID_V0494_POKEMON_VICTINI = 494;
	HOLO_POKEMON_ID_V0495_POKEMON_SNIVY = 495;
	HOLO_POKEMON_ID_V0496_POKEMON_SERVINE = 496;
	HOLO_POKEMON_ID_V0497_POKEMON_SERPERIOR = 497;
	HOLO_POKEMON_ID_V0498_POKEMON_TEPIG = 498;
	HOLO_POKEMON_ID_V0499_POKEMON_PIGNITE = 499;
	HOLO_POKEMON_ID_V0500_POKEMON_EMBOAR = 500;
	HOLO_POKEMON_ID_V0501_POKEMON_OSHAWOTT = 501;
	HOLO_POKEMON_ID_V0502_POKEMON_DEWOTT = 502;
	HOLO_POKEMON_ID_V0503_POKEMON_SAMUROTT = 503;
	HOLO_POKEMON_ID_V0504_POKEMON_PATRAT = 504;
	HOLO_POKEMON_ID_V0505_POKEMON_WATCHOG = 505;
	HOLO_POKEMON_ID_V0506_POKEMON_LILLIPUP = 506;
	HOLO_POKEMON_ID_V0507_POKEMON_HERDIER = 507;
	HOLO_POKEMON_ID_V0508_POKEMON_STOUTLAND = 508;
	HOLO_POKEMON_ID_V0509_POKEMON_PURRLOIN = 509;
	HOLO_POKEMON_ID_V0510_POKEMON_LIEPARD = 510;
	HOLO_POKEMON_ID_V0511_POKEMON_PANSAGE = 511;
	HOLO_POKEMON_ID_V0512_POKEMON_SIMISAGE = 512;
	HOLO_POKEMON_ID_V0513_POKEMON_PANSEAR = 513;
	HOLO_POKEMON_ID_V0514_POKEMON_SIMISEAR = 514;
	HOLO_POKEMON_ID_V0515_POKEMON_PANPOUR = 515;
	HOLO_POKEMON_ID_V0516_POKEMON_SIMIPOUR = 516;
	HOLO_POKEMON_ID_V0517_POKEMON_MUNNA = 517;
	HOLO_POKEMON_ID_V0518_POKEMON_MUSHARNA = 518;
	HOLO_POKEMON_ID_V0519_POKEMON_PIDOVE = 519;
	HOLO_POKEMON_ID_V0520_POKEMON_TRANQUILL = 520;
	HOLO_POKEMON_ID_V0521_POKEMON_UNFEZANT = 521;
	HOLO_POKEMON_ID_V0522_POKEMON_BLITZLE = 522;
	HOLO_POKEMON_ID_V0523_POKEMON_ZEBSTRIKA = 523;
	HOLO_POKEMON_ID_V0524_POKEMON_ROGGENROLA = 524;
	HOLO_POKEMON_ID_V0525_POKEMON_BOLDORE = 525;
	HOLO_POKEMON_ID_V0526_POKEMON_GIGALITH = 526;
	HOLO_POKEMON_ID_V0527_POKEMON_WOOBAT = 527;
	HOLO_POKEMON_ID_V0528_POKEMON_SWOOBAT = 528;
	HOLO_POKEMON_ID_V0529_POKEMON_DRILBUR = 529;
	HOLO_POKEMON_ID_V0530_POKEMON_EXCADRILL = 530;
	HOLO_POKEMON_ID_V0531_POKEMON_AUDINO = 531;
	HOLO_POKEMON_ID_V0532_POKEMON_TIMBURR = 532;
	HOLO_POKEMON_ID_V0533_POKEMON_GURDURR = 533;
	HOLO_POKEMON_ID_V0534_POKEMON_CONKELDURR = 534;
	HOLO_POKEMON_ID_V0535_POKEMON_TYMPOLE = 535;
	HOLO_POKEMON_ID_V0536_POKEMON_PALPITOAD = 536;
	HOLO_POKEMON_ID_V0537_POKEMON_SEISMITOAD = 537;
	HOLO_POKEMON_ID_V0538_POKEMON_THROH = 538;
	HOLO_POKEMON_ID_V0539_POKEMON_SAWK = 539;
	HOLO_POKEMON_ID_V0540_POKEMON_SEWADDLE = 540;
	HOLO_POKEMON_ID_V0541_POKEMON_SWADLOON = 541;
	HOLO_POKEMON_ID_V0542_POKEMON_LEAVANNY = 542;
	HOLO_POKEMON_ID_V0543_POKEMON_VENIPEDE = 543;
	HOLO_POKEMON_ID_V0544_POKEMON_WHIRLIPEDE = 544;
	HOLO_POKEMON_ID_V0545_POKEMON_SCOLIPEDE = 545;
	HOLO_POKEMON_ID_V0546_POKEMON_COTTONEE = 546;
	HOLO_POKEMON_ID_V0547_POKEMON_WHIMSICOTT = 547;
	HOLO_POKEMON_ID_V0548_POKEMON_PETILIL = 548;
	HOLO_POKEMON_ID_V0549_POKEMON_LILLIGANT = 549;
	HOLO_POKEMON_ID_V0550_POKEMON_BASCULIN = 550;
	HOLO_POKEMON_ID_V0551_POKEMON_SANDILE = 551;
	HOLO_POKEMON_ID_V0552_POKEMON_KROKOROK = 552;
	HOLO_POKEMON_ID_V0553_POKEMON_KROOKODILE = 553;
	HOLO_POKEMON_ID_V0554_POKEMON_DARUMAKA = 554;
	HOLO_POKEMON_ID_V0555_POKEMON_DARMANITAN = 555;
	HOLO_POKEMON_ID_V0556_POKEMON_MARACTUS = 556;
	HOLO_POKEMON_ID_V0557_POKEMON_DWEBBLE = 557;
	HOLO_POKEMON_ID_V0558_POKEMON_CRUSTLE = 558;
	HOLO_POKEMON_ID_V0559_POKEMON_SCRAGGY = 559;
	HOLO_POKEMON_ID_V0560_POKEMON_SCRAFTY = 560;
	HOLO_POKEMON_ID_V0561_POKEMON_SIGILYPH = 561;
	HOLO_POKEMON_ID_V0562_POKEMON_YAMASK = 562;
	HOLO_POKEMON_ID_V0563_POKEMON_COFAGRIGUS = 563;
	HOLO_POKEMON_ID_V0564_POKEMON_TIRTOUGA = 564;
	HOLO_POKEMON_ID_V0565_POKEMON_CARRACOSTA = 565;
	HOLO_POKEMON_ID_V0566_POKEMON_ARCHEN = 566;
	HOLO_POKEMON_ID_V0567_POKEMON_ARCHEOPS = 567;
	HOLO_POKEMON_ID_V0568_POKEMON_TRUBBISH = 568;
	HOLO_POKEMON_ID_V0569_POKEMON_GARBODOR = 569;
	HOLO_POKEMON_ID_V0570_POKEMON_ZORUA = 570;
	HOLO_POKEMON_ID_V0571_POKEMON_ZOROARK = 571;
	HOLO_POKEMON_ID_V0572_POKEMON_MINCCINO = 572;
	HOLO_POKEMON_ID_V0573_POKEMON_CINCCINO = 573;
	HOLO_POKEMON_ID_V0574_POKEMON_GOTHITA = 574;
	HOLO_POKEMON_ID_V0575_POKEMON_GOTHORITA = 575;
	HOLO_POKEMON_ID_V0576_POKEMON_GOTHITELLE = 576;
	HOLO_POKEMON_ID_V0577_POKEMON_SOLOSIS = 577;
	HOLO_POKEMON_ID_V0578_POKEMON_DUOSION = 578;
	HOLO_POKEMON_ID_V0579_POKEMON_REUNICLUS = 579;
	HOLO_POKEMON_ID_V0580_POKEMON_DUCKLETT = 580;
	HOLO_POKEMON_ID_V0581_POKEMON_SWANNA = 581;
	HOLO_POKEMON_ID_V0582_POKEMON_VANILLITE = 582;
	HOLO_POKEMON_ID_V0583_POKEMON_VANILLISH = 583;
	HOLO_POKEMON_ID_V0584_POKEMON_VANILLUXE = 584;
	HOLO_POKEMON_ID_V0585_POKEMON_DEERLING = 585;
	HOLO_POKEMON_ID_V0586_POKEMON_SAWSBUCK = 586;
	HOLO_POKEMON_ID_V0587_POKEMON_EMOLGA = 587;
	HOLO_POKEMON_ID_V0588_POKEMON_KARRABLAST = 588;
	HOLO_POKEMON_ID_V0589_POKEMON_ESCAVALIER = 589;
	HOLO_POKEMON_ID_V0590_POKEMON_FOONGUS = 590;
	HOLO_POKEMON_ID_V0591_POKEMON_AMOONGUSS = 591;
	HOLO_POKEMON_ID_V0592_POKEMON_FRILLISH = 592;
	HOLO_POKEMON_ID_V0593_POKEMON_JELLICENT = 593;
	HOLO_POKEMON_ID_V0594_POKEMON_ALOMOMOLA = 594;
	HOLO_POKEMON_ID_V0595_POKEMON_JOLTIK = 595;
	HOLO_POKEMON_ID_V0596_POKEMON_GALVANTULA = 596;
	HOLO_POKEMON_ID_V0597_POKEMON_FERROSEED = 597;
	HOLO_POKEMON_ID_V0598_POKEMON_FERROTHORN = 598;
	HOLO_POKEMON_ID_V0599_POKEMON_KLINK = 599;
	HOLO_POKEMON_ID_V0600_POKEMON_KLANG = 600;
	HOLO_POKEMON_ID_V0601_POKEMON_KLINKLANG = 601;
	HOLO_POKEMON_ID_V0602_POKEMON_TYNAMO = 602;
	HOLO_POKEMON_ID_V0603_POKEMON_EELEKTRIK = 603;
	HOLO_POKEMON_ID_V0604_POKEMON_EELEKTROSS = 604;
	HOLO_POKEMON_ID_V0605_POKEMON_ELGYEM = 605;
	HOLO_POKEMON_ID_V0606_POKEMON_BEHEEYEM = 606;
	HOLO_POKEMON_ID_V0607_POKEMON_LITWICK = 607;
	HOLO_POKEMON_ID_V0608_POKEMON_LAMPENT = 608;
	HOLO_POKEMON_ID_V0609_POKEMON_CHANDELURE = 609;
	HOLO_POKEMON_ID_V0610_POKEMON_AXEW = 610;
	HOLO_POKEMON_ID_V0611_POKEMON_FRAXURE = 611;
	HOLO_POKEMON_ID_V0612_POKEMON_HAXORUS = 612;
	HOLO_POKEMON_ID_V0613_POKEMON_CUBCHOO = 613;
	HOLO_POKEMON_ID_V0614_POKEMON_BEARTIC = 614;
	HOLO_POKEMON_ID_V0615_POKEMON_CRYOGONAL = 615;
	HOLO_POKEMON_ID_V0616_POKEMON_SHELMET = 616;
	HOLO_POKEMON_ID_V0617_POKEMON_ACCELGOR = 617;
	HOLO_POKEMON_ID_V0618_POKEMON_STUNFISK = 618;
	HOLO_POKEMON_ID_V0619_POKEMON_MIENFOO = 619;
	HOLO_POKEMON_ID_V0620_POKEMON_MIENSHAO = 620;
	HOLO_POKEMON_ID_V0621_POKEMON_DRUDDIGON = 621;
	HOLO_POKEMON_ID_V0622_POKEMON_GOLETT = 622;
	HOLO_POKEMON_ID_V0623_POKEMON_GOLURK = 623;
	HOLO_POKEMON_ID_V0624_POKEMON_PAWNIARD = 624;
	HOLO_POKEMON_ID_V0625_POKEMON_BISHARP = 625;
	HOLO_POKEMON_ID_V0626_POKEMON_BOUFFALANT = 626;
	HOLO_POKEMON_ID_V0627_POKEMON_RUFFLET = 627;
	HOLO_POKEMON_ID_V0628_POKEMON_BRAVIARY = 628;
	HOLO_POKEMON_ID_V0629_POKEMON_VULLABY = 629;
	HOLO_POKEMON_ID_V0630_POKEMON_MANDIBUZZ = 630;
	HOLO_POKEMON_ID_V0631_POKEMON_HEATMOR = 631;
	HOLO_POKEMON_ID_V0632_POKEMON_DURANT = 632;
	HOLO_POKEMON_ID_V0633_POKEMON_DEINO = 633;
	HOLO_POKEMON_ID_V0634_POKEMON_ZWEILOUS = 634;
	HOLO_POKEMON_ID_V0635_POKEMON_HYDREIGON = 635;
	HOLO_POKEMON_ID_V0636_POKEMON_LARVESTA = 636;
	HOLO_POKEMON_ID_V0637_POKEMON_VOLCARONA = 637;
	HOLO_POKEMON_ID_V0638_POKEMON_COBALION = 638;
	HOLO_POKEMON_ID_V0639_POKEMON_TERRAKION = 639;
	HOLO_POKEMON_ID_V0640_POKEMON_VIRIZION = 640;
	HOLO_POKEMON_ID_V0641_POKEMON_TORNADUS = 641;
	HOLO_POKEMON_ID_V0642_POKEMON_THUNDURUS = 642;
	HOLO_POKEMON_ID_V0643_POKEMON_RESHIRAM = 643;
	HOLO_POKEMON_ID_V0644_POKEMON_ZEKROM = 644;
	HOLO_POKEMON_ID_V0645_POKEMON_LANDORUS = 645;
	HOLO_POKEMON_ID_V0646_POKEMON_KYUREM = 646;
	HOLO_POKEMON_ID_V0647_POKEMON_KELDEO = 647;
	HOLO_POKEMON_ID_V0648_POKEMON_MELOETTA = 648;
	HOLO_POKEMON_ID_V0649_POKEMON_GENESECT = 649;
	HOLO_POKEMON_ID_V0808_POKEMON_MELTAN = 808;
	HOLO_POKEMON_ID_V0809_POKEMON_MELMETAL = 809;
	HOLO_POKEMON_ID_V0862_POKEMON_OBSTAGOON = 862;
	HOLO_POKEMON_ID_V0863_POKEMON_PERRSERKER = 863;
	HOLO_POKEMON_ID_V0865_POKEMON_SIRFETCHD = 865;
}

enum HoloPokemonMove {
	HOLO_POKEMON_MOVE_MOVE_UNSET = 0;
	HOLO_POKEMON_MOVE_V0001_MOVE_THUNDER_SHOCK = 1;
	HOLO_POKEMON_MOVE_V0002_MOVE_QUICK_ATTACK = 2;
	HOLO_POKEMON_MOVE_V0003_MOVE_SCRATCH = 3;
	HOLO_POKEMON_MOVE_V0004_MOVE_EMBER = 4;
	HOLO_POKEMON_MOVE_V0005_MOVE_VINE_WHIP = 5;
	HOLO_POKEMON_MOVE_V0006_MOVE_TACKLE = 6;
	HOLO_POKEMON_MOVE_V0007_MOVE_RAZOR_LEAF = 7;
	HOLO_POKEMON_MOVE_V0008_MOVE_TAKE_DOWN = 8;
	HOLO_POKEMON_MOVE_V0009_MOVE_WATER_GUN = 9;
	HOLO_POKEMON_MOVE_V0010_MOVE_BITE = 10;
	HOLO_POKEMON_MOVE_V0011_MOVE_POUND = 11;
	HOLO_POKEMON_MOVE_V0012_MOVE_DOUBLE_SLAP = 12;
	HOLO_POKEMON_MOVE_V0013_MOVE_WRAP = 13;
	HOLO_POKEMON_MOVE_V0014_MOVE_HYPER_BEAM = 14;
	HOLO_POKEMON_MOVE_V0015_MOVE_LICK = 15;
	HOLO_POKEMON_MOVE_V0016_MOVE_DARK_PULSE = 16;
	HOLO_POKEMON_MOVE_V0017_MOVE_SMOG = 17;
	HOLO_POKEMON_MOVE_V0018_MOVE_SLUDGE = 18;
	HOLO_POKEMON_MOVE_V0019_MOVE_METAL_CLAW = 19;
	HOLO_POKEMON_MOVE_V0020_MOVE_VICE_GRIP = 20;
	HOLO_POKEMON_MOVE_V0021_MOVE_FLAME_WHEEL = 21;
	HOLO_POKEMON_MOVE_V0022_MOVE_MEGAHORN = 22;
	HOLO_POKEMON_MOVE_V0023_MOVE_WING_ATTACK = 23;
	HOLO_POKEMON_MOVE_V0024_MOVE_FLAMETHROWER = 24;
	HOLO_POKEMON_MOVE_V0025_MOVE_SUCKER_PUNCH = 25;
	HOLO_POKEMON_MOVE_V0026_MOVE_DIG = 26;
	HOLO_POKEMON_MOVE_V0027_MOVE_LOW_KICK = 27;
	HOLO_POKEMON_MOVE_V0028_MOVE_CROSS_CHOP = 28;
	HOLO_POKEMON_MOVE_V0029_MOVE_PSYCHO_CUT = 29;
	HOLO_POKEMON_MOVE_V0030_MOVE_PSYBEAM = 30;
	HOLO_POKEMON_MOVE_V0031_MOVE_EARTHQUAKE = 31;
	HOLO_POKEMON_MOVE_V0032_MOVE_STONE_EDGE = 32;
	HOLO_POKEMON_MOVE_V0033_MOVE_ICE_PUNCH = 33;
	HOLO_POKEMON_MOVE_V0034_MOVE_HEART_STAMP = 34;
	HOLO_POKEMON_MOVE_V0035_MOVE_DISCHARGE = 35;
	HOLO_POKEMON_MOVE_V0036_MOVE_FLASH_CANNON = 36;
	HOLO_POKEMON_MOVE_V0037_MOVE_PECK = 37;
	HOLO_POKEMON_MOVE_V0038_MOVE_DRILL_PECK = 38;
	HOLO_POKEMON_MOVE_V0039_MOVE_ICE_BEAM = 39;
	HOLO_POKEMON_MOVE_V0040_MOVE_BLIZZARD = 40;
	HOLO_POKEMON_MOVE_V0041_MOVE_AIR_SLASH = 41;
	HOLO_POKEMON_MOVE_V0042_MOVE_HEAT_WAVE = 42;
	HOLO_POKEMON_MOVE_V0043_MOVE_TWINEEDLE = 43;
	HOLO_POKEMON_MOVE_V0044_MOVE_POISON_JAB = 44;
	HOLO_POKEMON_MOVE_V0045_MOVE_AERIAL_ACE = 45;
	HOLO_POKEMON_MOVE_V0046_MOVE_DRILL_RUN = 46;
	HOLO_POKEMON_MOVE_V0047_MOVE_PETAL_BLIZZARD = 47;
	HOLO_POKEMON_MOVE_V0048_MOVE_MEGA_DRAIN = 48;
	HOLO_POKEMON_MOVE_V0049_MOVE_BUG_BUZZ = 49;
	HOLO_POKEMON_MOVE_V0050_MOVE_POISON_FANG = 50;
	HOLO_POKEMON_MOVE_V0051_MOVE_NIGHT_SLASH = 51;
	HOLO_POKEMON_MOVE_V0052_MOVE_SLASH = 52;
	HOLO_POKEMON_MOVE_V0053_MOVE_BUBBLE_BEAM = 53;
	HOLO_POKEMON_MOVE_V0054_MOVE_SUBMISSION = 54;
	HOLO_POKEMON_MOVE_V0055_MOVE_KARATE_CHOP = 55;
	HOLO_POKEMON_MOVE_V0056_MOVE_LOW_SWEEP = 56;
	HOLO_POKEMON_MOVE_V0057_MOVE_AQUA_JET = 57;
	HOLO_POKEMON_MOVE_V0058_MOVE_AQUA_TAIL = 58;
	HOLO_POKEMON_MOVE_V0059_MOVE_SEED_BOMB = 59;
	HOLO_POKEMON_MOVE_V0060_MOVE_PSYSHOCK = 60;
	HOLO_POKEMON_MOVE_V0061_MOVE_ROCK_THROW = 61;
	HOLO_POKEMON_MOVE_V0062_MOVE_ANCIENT_POWER = 62;
	HOLO_POKEMON_MOVE_V0063_MOVE_ROCK_TOMB = 63;
	HOLO_POKEMON_MOVE_V0064_MOVE_ROCK_SLIDE = 64;
	HOLO_POKEMON_MOVE_V0065_MOVE_POWER_GEM = 65;
	HOLO_POKEMON_MOVE_V0066_MOVE_SHADOW_SNEAK = 66;
	HOLO_POKEMON_MOVE_V0067_MOVE_SHADOW_PUNCH = 67;
	HOLO_POKEMON_MOVE_V0068_MOVE_SHADOW_CLAW = 68;
	HOLO_POKEMON_MOVE_V0069_MOVE_OMINOUS_WIND = 69;
	HOLO_POKEMON_MOVE_V0070_MOVE_SHADOW_BALL = 70;
	HOLO_POKEMON_MOVE_V0071_MOVE_BULLET_PUNCH = 71;
	HOLO_POKEMON_MOVE_V0072_MOVE_MAGNET_BOMB = 72;
	HOLO_POKEMON_MOVE_V0073_MOVE_STEEL_WING = 73;
	HOLO_POKEMON_MOVE_V0074_MOVE_IRON_HEAD = 74;
	HOLO_POKEMON_MOVE_V0075_MOVE_PARABOLIC_CHARGE = 75;
	HOLO_POKEMON_MOVE_V0076_MOVE_SPARK = 76;
	HOLO_POKEMON_MOVE_V0077_MOVE_THUNDER_PUNCH = 77;
	HOLO_POKEMON_MOVE_V0078_MOVE_THUNDER = 78;
	HOLO_POKEMON_MOVE_V0079_MOVE_THUNDERBOLT = 79;
	HOLO_POKEMON_MOVE_V0080_MOVE_TWISTER = 80;
	HOLO_POKEMON_MOVE_V0081_MOVE_DRAGON_BREATH = 81;
	HOLO_POKEMON_MOVE_V0082_MOVE_DRAGON_PULSE = 82;
	HOLO_POKEMON_MOVE_V0083_MOVE_DRAGON_CLAW = 83;
	HOLO_POKEMON_MOVE_V0084_MOVE_DISARMING_VOICE = 84;
	HOLO_POKEMON_MOVE_V0085_MOVE_DRAINING_KISS = 85;
	HOLO_POKEMON_MOVE_V0086_MOVE_DAZZLING_GLEAM = 86;
	HOLO_POKEMON_MOVE_V0087_MOVE_MOONBLAST = 87;
	HOLO_POKEMON_MOVE_V0088_MOVE_PLAY_ROUGH = 88;
	HOLO_POKEMON_MOVE_V0089_MOVE_CROSS_POISON = 89;
	HOLO_POKEMON_MOVE_V0090_MOVE_SLUDGE_BOMB = 90;
	HOLO_POKEMON_MOVE_V0091_MOVE_SLUDGE_WAVE = 91;
	HOLO_POKEMON_MOVE_V0092_MOVE_GUNK_SHOT = 92;
	HOLO_POKEMON_MOVE_V0093_MOVE_MUD_SHOT = 93;
	HOLO_POKEMON_MOVE_V0094_MOVE_BONE_CLUB = 94;
	HOLO_POKEMON_MOVE_V0095_MOVE_BULLDOZE = 95;
	HOLO_POKEMON_MOVE_V0096_MOVE_MUD_BOMB = 96;
	HOLO_POKEMON_MOVE_V0097_MOVE_FURY_CUTTER = 97;
	HOLO_POKEMON_MOVE_V0098_MOVE_BUG_BITE = 98;
	HOLO_POKEMON_MOVE_V0099_MOVE_SIGNAL_BEAM = 99;
	HOLO_POKEMON_MOVE_V0100_MOVE_X_SCISSOR = 100;
	HOLO_POKEMON_MOVE_V0101_MOVE_FLAME_CHARGE = 101;
	HOLO_POKEMON_MOVE_V0102_MOVE_FLAME_BURST = 102;
	HOLO_POKEMON_MOVE_V0103_MOVE_FIRE_BLAST = 103;
	HOLO_POKEMON_MOVE_V0104_MOVE_BRINE = 104;
	HOLO_POKEMON_MOVE_V0105_MOVE_WATER_PULSE = 105;
	HOLO_POKEMON_MOVE_V0106_MOVE_SCALD = 106;
	HOLO_POKEMON_MOVE_V0107_MOVE_HYDRO_PUMP = 107;
	HOLO_POKEMON_MOVE_V0108_MOVE_PSYCHIC = 108;
	HOLO_POKEMON_MOVE_V0109_MOVE_PSYSTRIKE = 109;
	HOLO_POKEMON_MOVE_V0110_MOVE_ICE_SHARD = 110;
	HOLO_POKEMON_MOVE_V0111_MOVE_ICY_WIND = 111;
	HOLO_POKEMON_MOVE_V0112_MOVE_FROST_BREATH = 112;
	HOLO_POKEMON_MOVE_V0113_MOVE_ABSORB = 113;
	HOLO_POKEMON_MOVE_V0114_MOVE_GIGA_DRAIN = 114;
	HOLO_POKEMON_MOVE_V0115_MOVE_FIRE_PUNCH = 115;
	HOLO_POKEMON_MOVE_V0116_MOVE_SOLAR_BEAM = 116;
	HOLO_POKEMON_MOVE_V0117_MOVE_LEAF_BLADE = 117;
	HOLO_POKEMON_MOVE_V0118_MOVE_POWER_WHIP = 118;
	HOLO_POKEMON_MOVE_V0119_MOVE_SPLASH = 119;
	HOLO_POKEMON_MOVE_V0120_MOVE_ACID = 120;
	HOLO_POKEMON_MOVE_V0121_MOVE_AIR_CUTTER = 121;
	HOLO_POKEMON_MOVE_V0122_MOVE_HURRICANE = 122;
	HOLO_POKEMON_MOVE_V0123_MOVE_BRICK_BREAK = 123;
	HOLO_POKEMON_MOVE_V0124_MOVE_CUT = 124;
	HOLO_POKEMON_MOVE_V0125_MOVE_SWIFT = 125;
	HOLO_POKEMON_MOVE_V0126_MOVE_HORN_ATTACK = 126;
	HOLO_POKEMON_MOVE_V0127_MOVE_STOMP = 127;
	HOLO_POKEMON_MOVE_V0128_MOVE_HEADBUTT = 128;
	HOLO_POKEMON_MOVE_V0129_MOVE_HYPER_FANG = 129;
	HOLO_POKEMON_MOVE_V0130_MOVE_SLAM = 130;
	HOLO_POKEMON_MOVE_V0131_MOVE_BODY_SLAM = 131;
	HOLO_POKEMON_MOVE_V0132_MOVE_REST = 132;
	HOLO_POKEMON_MOVE_V0133_MOVE_STRUGGLE = 133;
	HOLO_POKEMON_MOVE_V0134_MOVE_SCALD_BLASTOISE = 134;
	HOLO_POKEMON_MOVE_V0135_MOVE_HYDRO_PUMP_BLASTOISE = 135;
	HOLO_POKEMON_MOVE_V0136_MOVE_WRAP_GREEN = 136;
	HOLO_POKEMON_MOVE_V0137_MOVE_WRAP_PINK = 137;
	HOLO_POKEMON_MOVE_V0200_MOVE_FURY_CUTTER_FAST = 200;
	HOLO_POKEMON_MOVE_V0201_MOVE_BUG_BITE_FAST = 201;
	HOLO_POKEMON_MOVE_V0202_MOVE_BITE_FAST = 202;
	HOLO_POKEMON_MOVE_V0203_MOVE_SUCKER_PUNCH_FAST = 203;
	HOLO_POKEMON_MOVE_V0204_MOVE_DRAGON_BREATH_FAST = 204;
	HOLO_POKEMON_MOVE_V0205_MOVE_THUNDER_SHOCK_FAST = 205;
	HOLO_POKEMON_MOVE_V0206_MOVE_SPARK_FAST = 206;
	HOLO_POKEMON_MOVE_V0207_MOVE_LOW_KICK_FAST = 207;
	HOLO_POKEMON_MOVE_V0208_MOVE_KARATE_CHOP_FAST = 208;
	HOLO_POKEMON_MOVE_V0209_MOVE_EMBER_FAST = 209;
	HOLO_POKEMON_MOVE_V0210_MOVE_WING_ATTACK_FAST = 210;
	HOLO_POKEMON_MOVE_V0211_MOVE_PECK_FAST = 211;
	HOLO_POKEMON_MOVE_V0212_MOVE_LICK_FAST = 212;
	HOLO_POKEMON_MOVE_V0213_MOVE_SHADOW_CLAW_FAST = 213;
	HOLO_POKEMON_MOVE_V0214_MOVE_VINE_WHIP_FAST = 214;
	HOLO_POKEMON_MOVE_V0215_MOVE_RAZOR_LEAF_FAST = 215;
	HOLO_POKEMON_MOVE_V0216_MOVE_MUD_SHOT_FAST = 216;
	HOLO_POKEMON_MOVE_V0217_MOVE_ICE_SHARD_FAST = 217;
	HOLO_POKEMON_MOVE_V0218_MOVE_FROST_BREATH_FAST = 218;
	HOLO_POKEMON_MOVE_V0219_MOVE_QUICK_ATTACK_FAST = 219;
	HOLO_POKEMON_MOVE_V0220_MOVE_SCRATCH_FAST = 220;
	HOLO_POKEMON_MOVE_V0221_MOVE_TACKLE_FAST = 221;
	HOLO_POKEMON_MOVE_V0222_MOVE_POUND_FAST = 222;
	HOLO_POKEMON_MOVE_V0223_MOVE_CUT_FAST = 223;
	HOLO_POKEMON_MOVE_V0224_MOVE_POISON_JAB_FAST = 224;
	HOLO_POKEMON_MOVE_V0225_MOVE_ACID_FAST = 225;
	HOLO_POKEMON_MOVE_V0226_MOVE_PSYCHO_CUT_FAST = 226;
	HOLO_POKEMON_MOVE_V0227_MOVE_ROCK_THROW_FAST = 227;
	HOLO_POKEMON_MOVE_V0228_MOVE_METAL_CLAW_FAST = 228;
	HOLO_POKEMON_MOVE_V0229_MOVE_BULLET_PUNCH_FAST = 229;
	HOLO_POKEMON_MOVE_V0230_MOVE_WATER_GUN_FAST = 230;
	HOLO_POKEMON_MOVE_V0231_MOVE_SPLASH_FAST = 231;
	HOLO_POKEMON_MOVE_V0232_MOVE_WATER_GUN_FAST_BLASTOISE = 232;
	HOLO_POKEMON_MOVE_V0233_MOVE_MUD_SLAP_FAST = 233;
	HOLO_POKEMON_MOVE_V0234_MOVE_ZEN_HEADBUTT_FAST = 234;
	HOLO_POKEMON_MOVE_V0235_MOVE_CONFUSION_FAST = 235;
	HOLO_POKEMON_MOVE_V0236_MOVE_POISON_STING_FAST = 236;
	HOLO_POKEMON_MOVE_V0237_MOVE_BUBBLE_FAST = 237;
	HOLO_POKEMON_MOVE_V0238_MOVE_FEINT_ATTACK_FAST = 238;
	HOLO_POKEMON_MOVE_V0239_MOVE_STEEL_WING_FAST = 239;
	HOLO_POKEMON_MOVE_V0240_MOVE_FIRE_FANG_FAST = 240;
	HOLO_POKEMON_MOVE_V0241_MOVE_ROCK_SMASH_FAST = 241;
	HOLO_POKEMON_MOVE_V0242_MOVE_TRANSFORM_FAST = 242;
	HOLO_POKEMON_MOVE_V0243_MOVE_COUNTER_FAST = 243;
	HOLO_POKEMON_MOVE_V0244_MOVE_POWDER_SNOW_FAST = 244;
	HOLO_POKEMON_MOVE_V0245_MOVE_CLOSE_COMBAT = 245;
	HOLO_POKEMON_MOVE_V0246_MOVE_DYNAMIC_PUNCH = 246;
	HOLO_POKEMON_MOVE_V0247_MOVE_FOCUS_BLAST = 247;
	HOLO_POKEMON_MOVE_V0248_MOVE_AURORA_BEAM = 248;
	HOLO_POKEMON_MOVE_V0249_MOVE_CHARGE_BEAM_FAST = 249;
	HOLO_POKEMON_MOVE_V0250_MOVE_VOLT_SWITCH_FAST = 250;
	HOLO_POKEMON_MOVE_V0251_MOVE_WILD_CHARGE = 251;
	HOLO_POKEMON_MOVE_V0252_MOVE_ZAP_CANNON = 252;
	HOLO_POKEMON_MOVE_V0253_MOVE_DRAGON_TAIL_FAST = 253;
	HOLO_POKEMON_MOVE_V0254_MOVE_AVALANCHE = 254;
	HOLO_POKEMON_MOVE_V0255_MOVE_AIR_SLASH_FAST = 255;
	HOLO_POKEMON_MOVE_V0256_MOVE_BRAVE_BIRD = 256;
	HOLO_POKEMON_MOVE_V0257_MOVE_SKY_ATTACK = 257;
	HOLO_POKEMON_MOVE_V0258_MOVE_SAND_TOMB = 258;
	HOLO_POKEMON_MOVE_V0259_MOVE_ROCK_BLAST = 259;
	HOLO_POKEMON_MOVE_V0260_MOVE_INFESTATION_FAST = 260;
	HOLO_POKEMON_MOVE_V0261_MOVE_STRUGGLE_BUG_FAST = 261;
	HOLO_POKEMON_MOVE_V0262_MOVE_SILVER_WIND = 262;
	HOLO_POKEMON_MOVE_V0263_MOVE_ASTONISH_FAST = 263;
	HOLO_POKEMON_MOVE_V0264_MOVE_HEX_FAST = 264;
	HOLO_POKEMON_MOVE_V0265_MOVE_NIGHT_SHADE = 265;
	HOLO_POKEMON_MOVE_V0266_MOVE_IRON_TAIL_FAST = 266;
	HOLO_POKEMON_MOVE_V0267_MOVE_GYRO_BALL = 267;
	HOLO_POKEMON_MOVE_V0268_MOVE_HEAVY_SLAM = 268;
	HOLO_POKEMON_MOVE_V0269_MOVE_FIRE_SPIN_FAST = 269;
	HOLO_POKEMON_MOVE_V0270_MOVE_OVERHEAT = 270;
	HOLO_POKEMON_MOVE_V0271_MOVE_BULLET_SEED_FAST = 271;
	HOLO_POKEMON_MOVE_V0272_MOVE_GRASS_KNOT = 272;
	HOLO_POKEMON_MOVE_V0273_MOVE_ENERGY_BALL = 273;
	HOLO_POKEMON_MOVE_V0274_MOVE_EXTRASENSORY_FAST = 274;
	HOLO_POKEMON_MOVE_V0275_MOVE_FUTURESIGHT = 275;
	HOLO_POKEMON_MOVE_V0276_MOVE_MIRROR_COAT = 276;
	HOLO_POKEMON_MOVE_V0277_MOVE_OUTRAGE = 277;
	HOLO_POKEMON_MOVE_V0278_MOVE_SNARL_FAST = 278;
	HOLO_POKEMON_MOVE_V0279_MOVE_CRUNCH = 279;
	HOLO_POKEMON_MOVE_V0280_MOVE_FOUL_PLAY = 280;
	HOLO_POKEMON_MOVE_V0281_MOVE_HIDDEN_POWER_FAST = 281;
	HOLO_POKEMON_MOVE_V0282_MOVE_TAKE_DOWN_FAST = 282;
	HOLO_POKEMON_MOVE_V0283_MOVE_WATERFALL_FAST = 283;
	HOLO_POKEMON_MOVE_V0284_MOVE_SURF = 284;
	HOLO_POKEMON_MOVE_V0285_MOVE_DRACO_METEOR = 285;
	HOLO_POKEMON_MOVE_V0286_MOVE_DOOM_DESIRE = 286;
	HOLO_POKEMON_MOVE_V0287_MOVE_YAWN_FAST = 287;
	HOLO_POKEMON_MOVE_V0288_MOVE_PSYCHO_BOOST = 288;
	HOLO_POKEMON_MOVE_V0289_MOVE_ORIGIN_PULSE = 289;
	HOLO_POKEMON_MOVE_V0290_MOVE_PRECIPICE_BLADES = 290;
	HOLO_POKEMON_MOVE_V0291_MOVE_PRESENT_FAST = 291;
	HOLO_POKEMON_MOVE_V0292_MOVE_WEATHER_BALL_FIRE = 292;
	HOLO_POKEMON_MOVE_V0293_MOVE_WEATHER_BALL_ICE = 293;
	HOLO_POKEMON_MOVE_V0294_MOVE_WEATHER_BALL_ROCK = 294;
	HOLO_POKEMON_MOVE_V0295_MOVE_WEATHER_BALL_WATER = 295;
	HOLO_POKEMON_MOVE_V0296_MOVE_FRENZY_PLANT = 296;
	HOLO_POKEMON_MOVE_V0297_MOVE_SMACK_DOWN_FAST = 297;
	HOLO_POKEMON_MOVE_V0298_MOVE_BLAST_BURN = 298;
	HOLO_POKEMON_MOVE_V0299_MOVE_HYDRO_CANNON = 299;
	HOLO_POKEMON_MOVE_V0300_MOVE_LAST_RESORT = 300;
	HOLO_POKEMON_MOVE_V0301_MOVE_METEOR_MASH = 301;
	HOLO_POKEMON_MOVE_V0302_MOVE_SKULL_BASH = 302;
	HOLO_POKEMON_MOVE_V0303_MOVE_ACID_SPRAY = 303;
	HOLO_POKEMON_MOVE_V0304_MOVE_EARTH_POWER = 304;
	HOLO_POKEMON_MOVE_V0305_MOVE_CRABHAMMER = 305;
	HOLO_POKEMON_MOVE_V0306_MOVE_LUNGE = 306;
	HOLO_POKEMON_MOVE_V0307_MOVE_CRUSH_CLAW = 307;
	HOLO_POKEMON_MOVE_V0308_MOVE_OCTAZOOKA = 308;
	HOLO_POKEMON_MOVE_V0309_MOVE_MIRROR_SHOT = 309;
	HOLO_POKEMON_MOVE_V0310_MOVE_SUPER_POWER = 310;
	HOLO_POKEMON_MOVE_V0311_MOVE_FELL_STINGER = 311;
	HOLO_POKEMON_MOVE_V0312_MOVE_LEAF_TORNADO = 312;
	HOLO_POKEMON_MOVE_V0313_MOVE_LEECH_LIFE = 313;
	HOLO_POKEMON_MOVE_V0314_MOVE_DRAIN_PUNCH = 314;
	HOLO_POKEMON_MOVE_V0315_MOVE_SHADOW_BONE = 315;
	HOLO_POKEMON_MOVE_V0316_MOVE_MUDDY_WATER = 316;
	HOLO_POKEMON_MOVE_V0317_MOVE_BLAZE_KICK = 317;
	HOLO_POKEMON_MOVE_V0318_MOVE_RAZOR_SHELL = 318;
	HOLO_POKEMON_MOVE_V0319_MOVE_POWER_UP_PUNCH = 319;
	HOLO_POKEMON_MOVE_V0320_MOVE_CHARM_FAST = 320;
	HOLO_POKEMON_MOVE_V0321_MOVE_GIGA_IMPACT = 321;
	HOLO_POKEMON_MOVE_V0322_MOVE_FRUSTRATION = 322;
	HOLO_POKEMON_MOVE_V0323_MOVE_RETURN = 323;
	HOLO_POKEMON_MOVE_V0324_MOVE_SYNCHRONOISE = 324;
	HOLO_POKEMON_MOVE_V0325_MOVE_LOCK_ON_FAST = 325;
	HOLO_POKEMON_MOVE_V0326_MOVE_THUNDER_FANG_FAST = 326;
	HOLO_POKEMON_MOVE_V0327_MOVE_ICE_FANG_FAST = 327;
	HOLO_POKEMON_MOVE_V0328_MOVE_HORN_DRILL = 328;
	HOLO_POKEMON_MOVE_V0329_MOVE_FISSURE = 329;
	HOLO_POKEMON_MOVE_V0330_MOVE_SACRED_SWORD = 330;
	HOLO_POKEMON_MOVE_V0331_MOVE_FLYING_PRESS = 331;
	HOLO_POKEMON_MOVE_V0332_MOVE_AURA_SPHERE = 332;
	HOLO_POKEMON_MOVE_V0333_MOVE_PAYBACK = 333;
	HOLO_POKEMON_MOVE_V0334_MOVE_ROCK_WRECKER = 334;
	HOLO_POKEMON_MOVE_V0335_MOVE_AEROBLAST = 335;
	HOLO_POKEMON_MOVE_V0336_MOVE_TECHNO_BLAST_NORMAL = 336;
	HOLO_POKEMON_MOVE_V0337_MOVE_TECHNO_BLAST_BURN = 337;
	HOLO_POKEMON_MOVE_V0338_MOVE_TECHNO_BLAST_CHILL = 338;
	HOLO_POKEMON_MOVE_V0339_MOVE_TECHNO_BLAST_WATER = 339;
	HOLO_POKEMON_MOVE_V0340_MOVE_TECHNO_BLAST_SHOCK = 340;
}

enum HoloPokemonMovementType {
	HOLO_POKEMON_MOVEMENT_TYPE_POKEMON_ENC_MOVEMENT_STATIC = 0;
	HOLO_POKEMON_MOVEMENT_TYPE_POKEMON_ENC_MOVEMENT_JUMP = 1;
	HOLO_POKEMON_MOVEMENT_TYPE_POKEMON_ENC_MOVEMENT_VERTICAL = 2;
	HOLO_POKEMON_MOVEMENT_TYPE_POKEMON_ENC_MOVEMENT_PSYCHIC = 3;
	HOLO_POKEMON_MOVEMENT_TYPE_POKEMON_ENC_MOVEMENT_ELECTRIC = 4;
	HOLO_POKEMON_MOVEMENT_TYPE_POKEMON_ENC_MOVEMENT_FLYING = 5;
	HOLO_POKEMON_MOVEMENT_TYPE_POKEMON_ENC_MOVEMENT_HOVERING = 6;
}

enum HoloPokemonNature {
	HOLO_POKEMON_NATURE_NATURE_UNKNOWN = 0;
	HOLO_POKEMON_NATURE_V0001_POKEMON_NATURE_STOIC = 1;
	HOLO_POKEMON_NATURE_V0002_POKEMON_NATURE_ASSASSIN = 2;
	HOLO_POKEMON_NATURE_V0003_POKEMON_NATURE_GUARDIAN = 3;
	HOLO_POKEMON_NATURE_V0004_POKEMON_NATURE_RAIDER = 4;
	HOLO_POKEMON_NATURE_V0005_POKEMON_NATURE_PROTECTOR = 5;
	HOLO_POKEMON_NATURE_V0006_POKEMON_NATURE_SENTRY = 6;
	HOLO_POKEMON_NATURE_V0007_POKEMON_NATURE_CHAMPION = 7;
}

enum HoloPokemonType {
	HOLO_POKEMON_TYPE_POKEMON_TYPE_NONE = 0;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_NORMAL = 1;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_FIGHTING = 2;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_FLYING = 3;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_POISON = 4;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_GROUND = 5;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_ROCK = 6;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_BUG = 7;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_GHOST = 8;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_STEEL = 9;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_FIRE = 10;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_WATER = 11;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_GRASS = 12;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_ELECTRIC = 13;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_PSYCHIC = 14;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_ICE = 15;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_DRAGON = 16;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_DARK = 17;
	HOLO_POKEMON_TYPE_POKEMON_TYPE_FAIRY = 18;
}

enum IncidentDisplayType {
	INCIDENT_DISPLAY_TYPE_NONE = 0;
	INCIDENT_DISPLAY_TYPE_INVASION_GRUNT = 1;
	INCIDENT_DISPLAY_TYPE_INVASION_LEADER = 2;
	INCIDENT_DISPLAY_TYPE_INVASION_GIOVANNI = 3;
}

enum InvasionTelemetryIds {
	INVASION_TELEMETRY_IDS_UNDEFINED_INVASION_EVENT = 0;
	INVASION_TELEMETRY_IDS_INVASION_NPC_TAP = 1;
	INVASION_TELEMETRY_IDS_INVASION_BATTLE_STARTED = 2;
	INVASION_TELEMETRY_IDS_INVASION_BATTLE_FINISHED = 3;
	INVASION_TELEMETRY_IDS_INVASION_ENCOUNTER_STARTED = 4;
	INVASION_TELEMETRY_IDS_INVASION_ENCOUNTER_FINISHED = 5;
	INVASION_TELEMETRY_IDS_INVASION_POKEMON_PURIFIED = 6;
	INVASION_TELEMETRY_IDS_INVASION_AFTER_POI_EXITED = 7;
	INVASION_TELEMETRY_IDS_INVASION_RADAR_VIEW_OPENED = 8;
	INVASION_TELEMETRY_IDS_INVASION_RADAR_VIEW_CLOSED = 9;
	INVASION_TELEMETRY_IDS_INVASION_RADAR_VIEW_EMPTY = 10;
	INVASION_TELEMETRY_IDS_INVASION_DECOY_FOUND = 11;
	INVASION_TELEMETRY_IDS_INVASION_GIOVANNI_FOUND = 12;
}

enum InventoryUpgradeType {
	INVENTORY_UPGRADE_TYPE_UPGRADE_UNSET = 0;
	INVENTORY_UPGRADE_TYPE_INCREASE_ITEM_STORAGE = 1;
	INVENTORY_UPGRADE_TYPE_INCREASE_POKEMON_STORAGE = 2;
}

enum Item {
	ITEM_ITEM_UNKNOWN = 0;
	ITEM_ITEM_POKE_BALL = 1;
	ITEM_ITEM_GREAT_BALL = 2;
	ITEM_ITEM_ULTRA_BALL = 3;
	ITEM_ITEM_MASTER_BALL = 4;
	ITEM_ITEM_PREMIER_BALL = 5;
	ITEM_ITEM_POTION = 101;
	ITEM_ITEM_SUPER_POTION = 102;
	ITEM_ITEM_HYPER_POTION = 103;
	ITEM_ITEM_MAX_POTION = 104;
	ITEM_ITEM_REVIVE = 201;
	ITEM_ITEM_MAX_REVIVE = 202;
	ITEM_ITEM_LUCKY_EGG = 301;
	ITEM_ITEM_INCENSE_ORDINARY = 401;
	ITEM_ITEM_INCENSE_SPICY = 402;
	ITEM_ITEM_INCENSE_COOL = 403;
	ITEM_ITEM_INCENSE_FLORAL = 404;
	ITEM_ITEM_INCENSE_BELUGA_BOX = 405;
	ITEM_ITEM_TROY_DISK = 501;
	ITEM_ITEM_TROY_DISK_GLACIAL = 502;
	ITEM_ITEM_TROY_DISK_MOSSY = 503;
	ITEM_ITEM_TROY_DISK_MAGNETIC = 504;
	ITEM_ITEM_X_ATTACK = 602;
	ITEM_ITEM_X_DEFENSE = 603;
	ITEM_ITEM_X_MIRACLE = 604;
	ITEM_ITEM_RAZZ_BERRY = 701;
	ITEM_ITEM_BLUK_BERRY = 702;
	ITEM_ITEM_NANAB_BERRY = 703;
	ITEM_ITEM_WEPAR_BERRY = 704;
	ITEM_ITEM_PINAP_BERRY = 705;
	ITEM_ITEM_GOLDEN_RAZZ_BERRY = 706;
	ITEM_ITEM_GOLDEN_NANAB_BERRY = 707;
	ITEM_ITEM_GOLDEN_PINAP_BERRY = 708;
	ITEM_ITEM_POFFIN = 709;
	ITEM_ITEM_SPECIAL_CAMERA = 801;
	ITEM_ITEM_INCUBATOR_BASIC_UNLIMITED = 901;
	ITEM_ITEM_INCUBATOR_BASIC = 902;
	ITEM_ITEM_INCUBATOR_SUPER = 903;
	ITEM_ITEM_POKEMON_STORAGE_UPGRADE = 1001;
	ITEM_ITEM_ITEM_STORAGE_UPGRADE = 1002;
	ITEM_ITEM_SUN_STONE = 1101;
	ITEM_ITEM_KINGS_ROCK = 1102;
	ITEM_ITEM_METAL_COAT = 1103;
	ITEM_ITEM_DRAGON_SCALE = 1104;
	ITEM_ITEM_UP_GRADE = 1105;
	ITEM_ITEM_GEN4_EVOLUTION_STONE = 1106;
	ITEM_ITEM_GEN5_EVOLUTION_STONE = 1107;
	ITEM_ITEM_MOVE_REROLL_FAST_ATTACK = 1201;
	ITEM_ITEM_MOVE_REROLL_SPECIAL_ATTACK = 1202;
	ITEM_ITEM_MOVE_REROLL_ELITE_FAST_ATTACK = 1203;
	ITEM_ITEM_MOVE_REROLL_ELITE_SPECIAL_ATTACK = 1204;
	ITEM_ITEM_RARE_CANDY = 1301;
	ITEM_ITEM_FREE_RAID_TICKET = 1401;
	ITEM_ITEM_PAID_RAID_TICKET = 1402;
	ITEM_ITEM_LEGENDARY_RAID_TICKET = 1403;
	ITEM_ITEM_STAR_PIECE = 1404;
	ITEM_ITEM_FRIEND_GIFT_BOX = 1405;
	ITEM_ITEM_TEAM_CHANGE = 1406;
	ITEM_ITEM_REMOTE_RAID_TICKET = 1408;
	ITEM_ITEM_LEADER_MAP_FRAGMENT = 1501;
	ITEM_ITEM_LEADER_MAP = 1502;
	ITEM_ITEM_GIOVANNI_MAP = 1503;
	ITEM_ITEM_GLOBAL_EVENT_TICKET = 1600;
}

enum ItemUseTelemetryIds {
	ITEM_USE_TELEMETRY_IDS_UNDEFINED_ITEM_EVENT = 0;
	ITEM_USE_TELEMETRY_IDS_USE_ITEM = 1;
	ITEM_USE_TELEMETRY_IDS_RECYCLE_ITEM = 2;
	ITEM_USE_TELEMETRY_IDS_UPDATE_ITEM_EQUIPPED = 3;
}

enum LoginActionTelemetryIds {
	LOGIN_ACTION_TELEMETRY_IDS_UNDEFINED_LOGIN_ACTION = 0;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_AGE_GATE = 1;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_NEW_PLAYER = 2;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_EXISTING_PLAYER = 3;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_GOOGLE = 4;
	LOGIN_ACTION_TELEMETRY_IDS_COMPLETE_GOOGLE = 5;
	LOGIN_ACTION_TELEMETRY_IDS_CANCEL_GOOGLE = 6;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_FACEBOOK = 7;
	LOGIN_ACTION_TELEMETRY_IDS_COMPLETE_FACEBOOK = 8;
	LOGIN_ACTION_TELEMETRY_IDS_CANCEL_FACEBOOK = 9;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_PTC = 10;
	LOGIN_ACTION_TELEMETRY_IDS_EXIT_PTC = 11;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_PTC_REGISTER = 12;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_PTC_SIGN_IN = 13;
	LOGIN_ACTION_TELEMETRY_IDS_CANCEL_PTC_SIGN_IN = 14;
	LOGIN_ACTION_TELEMETRY_IDS_COMPLETE_PTC_SIGN_IN = 15;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_SUPERAWESOME = 16;
	LOGIN_ACTION_TELEMETRY_IDS_EXIT_SUPERAWESOME = 17;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_SUPERAWESOME_REGISTER = 18;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_SUPERAWESOME_FORGOT_PASSWORD = 19;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_SUPERAWESOME_SIGN_IN = 20;
	LOGIN_ACTION_TELEMETRY_IDS_CANCEL_SUPERAWESOME_SIGN_IN = 21;
	LOGIN_ACTION_TELEMETRY_IDS_COMPLETE_SUPERAWESOME_SIGN_IN = 22;
	LOGIN_ACTION_TELEMETRY_IDS_EXIT_NEW_PLAYER = 23;
	LOGIN_ACTION_TELEMETRY_IDS_EXIT_EXISTING_PLAYER = 24;
	LOGIN_ACTION_TELEMETRY_IDS_LOGIN_STARTED = 25;
	LOGIN_ACTION_TELEMETRY_IDS_CLICK_APPLE = 26;
	LOGIN_ACTION_TELEMETRY_IDS_COMPLETE_APPLE = 27;
	LOGIN_ACTION_TELEMETRY_IDS_CANCEL_APPLE = 28;
}

enum MapEventsTelemetryIds {
	MAP_EVENTS_TELEMETRY_IDS_UNDEFINED_MAP_EVENT = 0;
	MAP_EVENTS_TELEMETRY_IDS_ITEM_BAG = 1;
	MAP_EVENTS_TELEMETRY_IDS_MAIN_MENU = 2;
	MAP_EVENTS_TELEMETRY_IDS_POKEDEX = 3;
	MAP_EVENTS_TELEMETRY_IDS_PROFILE = 4;
	MAP_EVENTS_TELEMETRY_IDS_SETTINGS = 5;
	MAP_EVENTS_TELEMETRY_IDS_SHOP_FROM_MAP = 6;
	MAP_EVENTS_TELEMETRY_IDS_GYM = 7;
	MAP_EVENTS_TELEMETRY_IDS_POKESTOP = 8;
	MAP_EVENTS_TELEMETRY_IDS_RESEARCH = 9;
	MAP_EVENTS_TELEMETRY_IDS_COMPASS = 10;
	MAP_EVENTS_TELEMETRY_IDS_NEARBY = 11;
}

enum Method {
	METHOD_METHOD_UNSET = 0;
	METHOD_GET_PLAYER = 2;
	METHOD_GET_HOLOHOLO_INVENTORY = 4;
	METHOD_DOWNLOAD_SETTINGS = 5;
	METHOD_DOWNLOAD_ITEM_TEMPLATES = 6;
	METHOD_DOWNLOAD_REMOTE_CONFIG_VERSION = 7;
	METHOD_REGISTER_BACKGROUND_DEVICE = 8;
	METHOD_GET_PLAYER_DAY = 9;
	METHOD_ACKNOWLEDGE_PUNISHMENT = 10;
	METHOD_GET_SERVER_TIME = 11;
	METHOD_GET_LOCAL_TIME = 12;
	METHOD_FORT_SEARCH = 101;
	METHOD_ENCOUNTER = 102;
	METHOD_CATCH_POKEMON = 103;
	METHOD_FORT_DETAILS = 104;
	METHOD_GET_MAP_OBJECTS = 106;
	METHOD_FORT_DEPLOY_POKEMON = 110;
	METHOD_FORT_RECALL_POKEMON = 111;
	METHOD_RELEASE_POKEMON = 112;
	METHOD_USE_ITEM_POTION = 113;
	METHOD_USE_ITEM_CAPTURE = 114;
	METHOD_USE_ITEM_FLEE = 115;
	METHOD_USE_ITEM_REVIVE = 116;
	METHOD_GET_PLAYER_PROFILE = 121;
	METHOD_EVOLVE_POKEMON = 125;
	METHOD_GET_HATCHED_EGGS = 126;
	METHOD_ENCOUNTER_TUTORIAL_COMPLETE = 127;
	METHOD_LEVEL_UP_REWARDS = 128;
	METHOD_CHECK_AWARDED_BADGES = 129;
	METHOD_RECYCLE_INVENTORY_ITEM = 137;
	METHOD_COLLECT_DAILY_BONUS = 138;
	METHOD_USE_ITEM_XP_BOOST = 139;
	METHOD_USE_ITEM_EGG_INCUBATOR = 140;
	METHOD_USE_INCENSE = 141;
	METHOD_GET_INCENSE_POKEMON = 142;
	METHOD_INCENSE_ENCOUNTER = 143;
	METHOD_ADD_FORT_MODIFIER = 144;
	METHOD_DISK_ENCOUNTER = 145;
	METHOD_UPGRADE_POKEMON = 147;
	METHOD_SET_FAVORITE_POKEMON = 148;
	METHOD_NICKNAME_POKEMON = 149;
	METHOD_EQUIP_BADGE = 150;
	METHOD_SET_CONTACT_SETTINGS = 151;
	METHOD_SET_BUDDY_POKEMON = 152;
	METHOD_GET_BUDDY_WALKED = 153;
	METHOD_USE_ITEM_ENCOUNTER = 154;
	METHOD_GYM_DEPLOY = 155;
	METHOD_GYM_GET_INFO = 156;
	METHOD_GYM_START_SESSION = 157;
	METHOD_GYM_BATTLE_ATTACK = 158;
	METHOD_JOIN_LOBBY = 159;
	METHOD_LEAVE_LOBBY = 160;
	METHOD_SET_LOBBY_VISIBILITY = 161;
	METHOD_SET_LOBBY_POKEMON = 162;
	METHOD_GET_RAID_DETAILS = 163;
	METHOD_GYM_FEED_POKEMON = 164;
	METHOD_START_RAID_BATTLE = 165;
	METHOD_ATTACK_RAID = 166;
	METHOD_AWARD_POKECOIN = 167;
	METHOD_USE_ITEM_STARDUST_BOOST = 168;
	METHOD_REASSIGN_PLAYER = 169;
	METHOD_REDEEM_POI_PASSCODE = 170;
	METHOD_GET_ASSET_DIGEST = 300;
	METHOD_GET_DOWNLOAD_URLS = 301;
	METHOD_GET_ASSET_VERSION = 302;
	METHOD_CLAIM_CODENAME = 403;
	METHOD_SET_AVATAR = 404;
	METHOD_SET_PLAYER_TEAM = 405;
	METHOD_MARK_TUTORIAL_COMPLETE = 406;
	METHOD_UPDATE_PERFORMANCE_METRICS = 407;
	METHOD_CHECK_CHALLENGE = 600;
	METHOD_VERIFY_CHALLENGE = 601;
	METHOD_ECHO = 666;
	METHOD_SFIDA_REGISTRATION = 800;
	METHOD_SFIDA_ACTION_LOG = 801;
	METHOD_SFIDA_CERTIFICATION = 802;
	METHOD_SFIDA_UPDATE = 803;
	METHOD_SFIDA_ACTION = 804;
	METHOD_SFIDA_DOWSER = 805;
	METHOD_SFIDA_CAPTURE = 806;
	METHOD_LIST_AVATAR_CUSTOMIZATIONS = 807;
	METHOD_SET_AVATAR_ITEM_AS_VIEWED = 808;
	METHOD_GET_INBOX = 809;
	METHOD_LIST_GYM_BADGES = 811;
	METHOD_GET_GYM_BADGE_DETAILS = 812;
	METHOD_USE_ITEM_MOVE_REROLL = 813;
	METHOD_USE_ITEM_RARE_CANDY = 814;
	METHOD_AWARD_FREE_RAID_TICKET = 815;
	METHOD_FETCH_ALL_NEWS = 816;
	METHOD_MARK_READ_NEWS_ARTICLE = 817;
	METHOD_GET_PLAYER_DISPLAY_INFO = 818;
	METHOD_BELUGA_TRANSACTION_START = 819;
	METHOD_BELUGA_TRANSACTION_COMPLETE = 820;
	METHOD_GET_NEW_QUESTS = 900;
	METHOD_GET_QUEST_DETAILS = 901;
	METHOD_COMPLETE_QUEST = 902;
	METHOD_REMOVE_QUEST = 903;
	METHOD_QUEST_ENCOUNTER = 904;
	METHOD_COMPLETE_QUEST_STAMP_CARD = 905;
	METHOD_SEND_GIFT = 950;
	METHOD_OPEN_GIFT = 951;
	METHOD_GIFT_DETAILS = 952;
	METHOD_DELETE_GIFT = 953;
	METHOD_SAVE_PLAYER_SNAPSHOT = 954;
	METHOD_GET_FRIENDSHIP_MILESTONE_REWARDS = 955;
	METHOD_CHECK_SEND_GIFT = 956;
	METHOD_SET_FRIEND_NICKNAME = 957;
	METHOD_DELETE_GIFT_FROM_INVENTORY = 958;
	METHOD_SAVE_SOCIAL_PLAYER_SETTINGS = 959;
	METHOD_SHARE_EX_RAID_PASS = 960;
	METHOD_CHECK_SHARE_EX_RAID_PASS = 961;
	METHOD_DECLINE_SHARED_EX_RAID_PASS = 962;
	METHOD_OPEN_TRADING = 970;
	METHOD_UPDATE_TRADING = 971;
	METHOD_CONFIRM_TRADING = 972;
	METHOD_CANCEL_TRADING = 973;
	METHOD_GET_TRADING = 974;
	METHOD_GET_FITNESS_REWARDS = 980;
	METHOD_GET_COMBAT_PLAYER_PROFILE = 990;
	METHOD_GENERATE_COMBAT_CHALLENGE_ID = 991;
	METHOD_CREATE_COMBAT_CHALLENGE = 992;
	METHOD_OPEN_COMBAT_CHALLENGE = 993;
	METHOD_GET_COMBAT_CHALLENGE = 994;
	METHOD_ACCEPT_COMBAT_CHALLENGE = 995;
	METHOD_DECLINE_COMBAT_CHALLENGE = 996;
	METHOD_CANCEL_COMBAT_CHALLENGE = 997;
	METHOD_SUBMIT_COMBAT_CHALLENGE_POKEMONS = 998;
	METHOD_SAVE_COMBAT_PLAYER_PREFERENCES = 999;
	METHOD_OPEN_COMBAT_SESSION = 1000;
	METHOD_UPDATE_COMBAT = 1001;
	METHOD_QUIT_COMBAT = 1002;
	METHOD_GET_COMBAT_RESULTS = 1003;
	METHOD_UNLOCK_SPECIAL_MOVE = 1004;
	METHOD_GET_NPC_COMBAT_REWARDS = 1005;
	METHOD_COMBAT_FRIEND_REQUEST = 1006;
	METHOD_OPEN_NPC_COMBAT_SESSION = 1007;
	METHOD_START_TUTORIAL_ACTION = 1008;
	METHOD_GET_TUTORIAL_EGG_ACTION = 1009;
	METHOD_SEND_PROBE = 1020;
	METHOD_PROBE_DATA = 1021;
	METHOD_COMBAT_DATA = 1022;
	METHOD_COMBAT_CHALLENGE_DATA = 1023;
	METHOD_CHECK_PHOTOBOMB = 1101;
	METHOD_CONFIRM_PHOTOBOMB = 1102;
	METHOD_GET_PHOTOBOMB = 1103;
	METHOD_ENCOUNTER_PHOTOBOMB = 1104;
	METHOD_GET_SIGNED_GMAP_URL_DEPRECATED = 1105;
	METHOD_CHANGE_TEAM = 1106;
	METHOD_GET_WEB_TOKEN = 1107;
	METHOD_COMPLETE_SNAPSHOT_SESSION = 1110;
	METHOD_START_INCIDENT = 1200;
	METHOD_INVASION_COMPLETE_DIALOGUE = 1201;
	METHOD_INVASION_OPEN_COMBAT_SESSION = 1202;
	METHOD_INVASION_BATTLE_UPDATE = 1203;
	METHOD_INVASION_ENCOUNTER = 1204;
	METHOD_PURIFY_POKEMON = 1205;
	METHOD_VS_SEEKER_START_MATCHMAKING = 1300;
	METHOD_CANCEL_MATCHMAKING = 1301;
	METHOD_GET_MATCHMAKING_STATUS = 1302;
	METHOD_COMPLETE_VS_SEEKER_AND_RESTART_CHARGING = 1303;
	METHOD_GET_VS_SEEKER_STATUS = 1304;
	METHOD_COMPLETE_COMBAT_COMPETITIVE_SEASON_ACTION = 1305;
	METHOD_CLAIM_VS_SEEKER_REWARDS = 1306;
	METHOD_VS_SEEKER_REWARD_ENCOUNTER = 1307;
	METHOD_ACTIVATE_VS_SEEKER = 1308;
	METHOD_GET_BUDDY_MAP = 1350;
	METHOD_GET_BUDDY_STATS = 1351;
	METHOD_FEED_BUDDY = 1352;
	METHOD_OPEN_BUDDY_GIFT = 1353;
	METHOD_PET_BUDDY = 1354;
	METHOD_GET_BUDDY_HISTORY = 1355;
	METHOD_CREATE_BUDDY_MUTLIPLAYER_SESSION = 1456;
	METHOD_JOIN_BUDDY_MULTIPLAYER_SESSION = 1457;
	METHOD_LEAVE_BUDDY_MULTIPLAYER_SESSION = 1458;
	METHOD_GET_TODAY_VIEW = 1501;
	METHOD_REMOTE_GIFT_PING = 1503;
	METHOD_SEND_RAID_INVITATION = 1504;
	METHOD_GET_DAILY_ENCOUNTER = 1601;
	METHOD_DAILY_ENCOUNTER = 1602;
}

enum NewsPageTelemetryIds {
	NEWS_PAGE_TELEMETRY_IDS_UNDEFINED_NEWS_EVENT = 0;
	NEWS_PAGE_TELEMETRY_IDS_NEWS_VIEWED = 1;
	NEWS_PAGE_TELEMETRY_IDS_NEWS_DISMISSED = 2;
	NEWS_PAGE_TELEMETRY_IDS_NEWS_LINK_CLICKED = 3;
	NEWS_PAGE_TELEMETRY_IDS_NEWS_UPDATED_APP = 4;
}

enum NotificationCategory {
	NOTIFICATION_CATEGORY_unset__notification_category = 0;
	NOTIFICATION_CATEGORY_GYM_REMOVAL = 1;
	NOTIFICATION_CATEGORY_POKEMON_HUNGRY = 2;
	NOTIFICATION_CATEGORY_POKEMON_WON = 3;
	NOTIFICATION_CATEGORY_EXCLUSIVE_RAID_INVITE = 4;
	NOTIFICATION_CATEGORY_EXCLUSIVE_RAID_CANCELLATION = 5;
	NOTIFICATION_CATEGORY_GIFTBOX_INCOMING = 6;
	NOTIFICATION_CATEGORY_GIFTBOX_DELIVERED = 7;
	NOTIFICATION_CATEGORY_FRIENDSHIP_MILESTONE_REWARD = 8;
	NOTIFICATION_CATEGORY_GYM_BATTLE_FRIENDSHIP_INCREMENT = 9;
	NOTIFICATION_CATEGORY_SHARED_EXCLUSIVE_RAID_INVITE = 10;
	NOTIFICATION_CATEGORY_BGMODE_EGG_HATCH = 11;
	NOTIFICATION_CATEGORY_BGMODE_BUDDY_CANDY = 12;
	NOTIFICATION_CATEGORY_BGMODE_WEEKLY_FITNESS_REPORT = 13;
	NOTIFICATION_CATEGORY_COMBAT_CHALLENGE_OPENED = 14;
	NOTIFICATION_CATEGORY_BGMODE_OFF_SESSION_DISTANCE = 15;
	NOTIFICATION_CATEGORY_BGMODE_POI_PROXIMITY = 16;
	NOTIFICATION_CATEGORY_LUCKY_FRIEND = 17;
	NOTIFICATION_CATEGORY_BGMODE_NAMED_BUDDY_CANDY = 18;
	NOTIFICATION_CATEGORY_APP_BADGE_ONLY = 19;
	NOTIFICATION_CATEGORY_COMBAT_VS_SEEKER_CHARGED = 20;
	NOTIFICATION_CATEGORY_COMBAT_COMPETITIVE_SEASON_END = 21;
	NOTIFICATION_CATEGORY_BUDDY_HUNGRY = 22;
	NOTIFICATION_CATEGORY_BUDDY_FOUND_GIFT = 24;
	NOTIFICATION_CATEGORY_BUDDY_AFFECTION_LEVEL_MILESTONE = 25;
	NOTIFICATION_CATEGORY_BUDDY_AFFECTION_WALKING = 26;
	NOTIFICATION_CATEGORY_BUDDY_AFFECTION_CARE = 27;
	NOTIFICATION_CATEGORY_BUDDY_AFFECTION_BATTLE = 28;
	NOTIFICATION_CATEGORY_BUDDY_AFFECTION_PHOTO = 29;
	NOTIFICATION_CATEGORY_BUDDY_AFFECTION_POI = 30;
	NOTIFICATION_CATEGORY_BGMODE_BUDDY_FOUND_GIFT = 31;
	NOTIFICATION_CATEGORY_BUDDY_ATTRACTIVE_POI = 32;
	NOTIFICATION_CATEGORY_BGMODE_BUDDY_ATTRACTIVE_POI = 33;
	NOTIFICATION_CATEGORY_BUDDY_AFFECTION_ATTRACTIVE_POI = 36;
	NOTIFICATION_CATEGORY_POI_PASSCODE_REDEEMED = 37;
	NOTIFICATION_CATEGORY_NO_EGGS_INCUBATING = 38;
	NOTIFICATION_CATEGORY_RETENTION_UNOPENED_GIFTS = 39;
	NOTIFICATION_CATEGORY_RETENTION_STARPIECE = 40;
	NOTIFICATION_CATEGORY_RETENTION_INCENSE = 41;
	NOTIFICATION_CATEGORY_RETENTION_LUCKY_EGG = 42;
	NOTIFICATION_CATEGORY_RETENTION_ADVSYNC_REWARDS = 43;
	NOTIFICATION_CATEGORY_RETENTION_EGGS_NOT_INCUBATING = 44;
	NOTIFICATION_CATEGORY_RETENTION_POWER_WALK = 45;
	NOTIFICATION_CATEGORY_RETENTION_FUN_WITH_FRIENDS = 46;
	NOTIFICATION_CATEGORY_BUDDY_REMOTE_GIFT = 47;
	NOTIFICATION_CATEGORY_BGMODE_BUDDY_REMOTE_GIFT = 48;
	NOTIFICATION_CATEGORY_REMOTE_RAID_INVITATION = 49;
}

enum OnboardingArStatus {
	ONBOARDING_AR_STATUS_UNSET = 0;
	ONBOARDING_AR_STATUS_OFF = 1;
	ONBOARDING_AR_STATUS_AR_STANDARD = 2;
	ONBOARDING_AR_STATUS_AR_PLUS = 3;
}

enum OnboardingEventIds {
	ONBOARDING_EVENT_IDS_TOS_ACCEPTED = 0;
	ONBOARDING_EVENT_IDS_PRIVACY_ACCEPTED = 1;
	ONBOARDING_EVENT_IDS_CONVERSATION = 2;
	ONBOARDING_EVENT_IDS_ENCOUNTER_ENTER = 3;
	ONBOARDING_EVENT_IDS_ENCOUNTER_LEAVE = 4;
	ONBOARDING_EVENT_IDS_AVATAR_SELECTION = 5;
	ONBOARDING_EVENT_IDS_AVATAR_GENDER = 6;
	ONBOARDING_EVENT_IDS_AVATAR_GENDER_CHOSEN = 7;
	ONBOARDING_EVENT_IDS_AVATAR_HEAD_CHOSEN = 8;
	ONBOARDING_EVENT_IDS_AVATAR_BODY_CHOSEN = 9;
	ONBOARDING_EVENT_IDS_AVATAR_TRY_AGAIN = 10;
	ONBOARDING_EVENT_IDS_AVATAR_ACCEPTED = 11;
	ONBOARDING_EVENT_IDS_NAME_ENTRY = 12;
	ONBOARDING_EVENT_IDS_NAME_UNAVAILABLE = 13;
	ONBOARDING_EVENT_IDS_NAME_ACCEPTED = 14;
	ONBOARDING_EVENT_IDS_POKEDEX_TUTORIAL_STARTED = 15;
	ONBOARDING_EVENT_IDS_POKEDEX_TUTORIAL_INFO_PANEL_EXIT_PRESSED = 16;
	ONBOARDING_EVENT_IDS_POKEDEX_EXIT_PRESSED = 17;
	ONBOARDING_EVENT_IDS_EGG_TUTORIAL_STARTED = 18;
	ONBOARDING_EVENT_IDS_EGG_TUTORIAL_PRESS = 19;
	ONBOARDING_EVENT_IDS_EGG_TUTORIAL_FINISHED = 20;
	ONBOARDING_EVENT_IDS_POKESTOP_LETSGO = 21;
	ONBOARDING_EVENT_IDS_WILD_POKEMON_ENCOUNTER_ENTERED = 22;
	ONBOARDING_EVENT_IDS_WILD_POKEMON_CAUGHT = 23;
	ONBOARDING_EVENT_IDS_AR_STANDARD_ENABLED = 24;
	ONBOARDING_EVENT_IDS_AR_STANDARD_REJECTED = 25;
	ONBOARDING_EVENT_IDS_AR_PLUS_ENABLED = 26;
	ONBOARDING_EVENT_IDS_AR_PLUS_REJECTED = 27;
}

enum OnboardingPathIds {
	ONBOARDING_PATH_IDS_V1 = 0;
	ONBOARDING_PATH_IDS_V2 = 1;
}

enum PermissionContextTelemetryIds {
	PERMISSION_CONTEXT_TELEMETRY_IDS_UNDEFINED_PERMISSION_CONTEXT = 0;
	PERMISSION_CONTEXT_TELEMETRY_IDS_EGG_HATCH = 1;
	PERMISSION_CONTEXT_TELEMETRY_IDS_BUDDY_CANDY_FOUND = 2;
	PERMISSION_CONTEXT_TELEMETRY_IDS_PLAYER_PROFILE_CLICKED = 3;
	PERMISSION_CONTEXT_TELEMETRY_IDS_SMART_WATCH_INSTALLED = 4;
	PERMISSION_CONTEXT_TELEMETRY_IDS_SFIDA_SESSION_STARTED = 5;
	PERMISSION_CONTEXT_TELEMETRY_IDS_SETTINGS_TOGGLE = 6;
	PERMISSION_CONTEXT_TELEMETRY_IDS_NEARBY_PANEL_OPENED = 7;
}

enum PermissionFlowStepTelemetryIds {
	PERMISSION_FLOW_STEP_TELEMETRY_IDS_UNDEFINED_PERMISSION_FLOW_STEP = 0;
	PERMISSION_FLOW_STEP_TELEMETRY_IDS_INITIAL_PROMPT = 1;
	PERMISSION_FLOW_STEP_TELEMETRY_IDS_FITNESS_PERMISSION = 2;
	PERMISSION_FLOW_STEP_TELEMETRY_IDS_LOCATION_PERMISSION = 3;
	PERMISSION_FLOW_STEP_TELEMETRY_IDS_ACTIVITY_PERMISSIONS = 4;
}

enum Platform {
	PLATFORM_PLATFORM_UNSET = 0;
	PLATFORM_PLATFORM_IOS = 1;
	PLATFORM_PLATFORM_ANDROID = 2;
	PLATFORM_PLATFORM_OSX = 3;
	PLATFORM_PLATFORM_WINDOWS = 4;
	PLATFORM_PLATFORM_APPLE_WATCH = 5;
}

enum PlayerAvatarType {
	PLAYER_AVATAR_TYPE_PLAYER_AVATAR_MALE = 0;
	PLAYER_AVATAR_TYPE_PLAYER_AVATAR_FEMALE = 1;
}

enum PokemonBadge {
	POKEMON_BADGE_POKEMON_BADGE_UNSET = 0;
	POKEMON_BADGE_POKEMON_BADGE_BEST_BUDDY = 1;
}

enum PokemonCreateContext {
	POKEMON_CREATE_CONTEXT_CREATE_CONTEXT_WILD = 0;
	POKEMON_CREATE_CONTEXT_CREATE_CONTEXT_EGG = 1;
	POKEMON_CREATE_CONTEXT_CREATE_CONTEXT_EVOLVE = 2;
}

enum PokemonGoPlusIds {
	POKEMON_GO_PLUS_IDS_UNDEFINED_POKEMON_GO_PLUS_EVENT = 0;
	POKEMON_GO_PLUS_IDS_CANNOT_CONNECT_TO_PGP = 1;
	POKEMON_GO_PLUS_IDS_REGISTERING_PGP_FAILED = 2;
	POKEMON_GO_PLUS_IDS_REGISTERING_RETRY = 3;
	POKEMON_GO_PLUS_IDS_CONNECTION_SUCCESS = 4;
	POKEMON_GO_PLUS_IDS_PGP_DISCONNECTED_BY_USER = 5;
	POKEMON_GO_PLUS_IDS_PGP_DISCONNECTED_BY_TIMEOUT = 6;
	POKEMON_GO_PLUS_IDS_PGP_DISCONNECTED_BY_ERROR = 7;
	POKEMON_GO_PLUS_IDS_PGP_LOW_BATTERY = 8;
	POKEMON_GO_PLUS_IDS_BLUETOOTH_SENT_ERROR = 9;
	POKEMON_GO_PLUS_IDS_PGP_SEEN_BY_DEVICE = 10;
	POKEMON_GO_PLUS_IDS_POKEMON_CAUGHT = 11;
	POKEMON_GO_PLUS_IDS_POKEMON_NOT_CAUGHT = 12;
	POKEMON_GO_PLUS_IDS_POKEMON_NOT_CAUGHT_DUE_ERROR = 13;
	POKEMON_GO_PLUS_IDS_POKESTOP_SPUN = 14;
	POKEMON_GO_PLUS_IDS_POKESTOP_NOT_SPUN_DUE_ERROR = 15;
}

enum PokemonInventoryTelemetryIds {
	POKEMON_INVENTORY_TELEMETRY_IDS_UNDEFINED_POKEMON_INVENTORY_EVENT = 0;
	POKEMON_INVENTORY_TELEMETRY_IDS_OPEN = 1;
	POKEMON_INVENTORY_TELEMETRY_IDS_SORTING_CHANGE = 2;
	POKEMON_INVENTORY_TELEMETRY_IDS_FILTER = 3;
}

enum ProfilePageTelemetryIds {
	PROFILE_PAGE_TELEMETRY_IDS_UNDEFINED_PROFILE_PAGE = 0;
	PROFILE_PAGE_TELEMETRY_IDS_SHOP_FROM_PROFILE = 1;
	PROFILE_PAGE_TELEMETRY_IDS_LOG = 2;
	PROFILE_PAGE_TELEMETRY_IDS_SET_BUDDY = 3;
	PROFILE_PAGE_TELEMETRY_IDS_CUSTOMIZE_AVATAR = 4;
}

enum PushNotificationTelemetryIds {
	PUSH_NOTIFICATION_TELEMETRY_IDS_UNDEFINED_PUSH_NOTIFICATION_EVENT = 0;
	PUSH_NOTIFICATION_TELEMETRY_IDS_OPEN_APP = 1;
}

enum QuestType {
	QUEST_TYPE_QUEST_UNSET = 0;
	QUEST_TYPE_QUEST_FIRST_CATCH_OF_THE_DAY = 1;
	QUEST_TYPE_QUEST_FIRST_POKESTOP_OF_THE_DAY = 2;
	QUEST_TYPE_QUEST_MULTI_PART = 3;
	QUEST_TYPE_QUEST_CATCH_POKEMON = 4;
	QUEST_TYPE_QUEST_SPIN_POKESTOP = 5;
	QUEST_TYPE_QUEST_HATCH_EGG = 6;
	QUEST_TYPE_QUEST_COMPLETE_GYM_BATTLE = 7;
	QUEST_TYPE_QUEST_COMPLETE_RAID_BATTLE = 8;
	QUEST_TYPE_QUEST_COMPLETE_QUEST = 9;
	QUEST_TYPE_QUEST_TRANSFER_POKEMON = 10;
	QUEST_TYPE_QUEST_FAVORITE_POKEMON = 11;
	QUEST_TYPE_QUEST_AUTOCOMPLETE = 12;
	QUEST_TYPE_QUEST_USE_BERRY_IN_ENCOUNTER = 13;
	QUEST_TYPE_QUEST_UPGRADE_POKEMON = 14;
	QUEST_TYPE_QUEST_EVOLVE_POKEMON = 15;
	QUEST_TYPE_QUEST_LAND_THROW = 16;
	QUEST_TYPE_QUEST_GET_BUDDY_CANDY = 17;
	QUEST_TYPE_QUEST_BADGE_RANK = 18;
	QUEST_TYPE_QUEST_PLAYER_LEVEL = 19;
	QUEST_TYPE_QUEST_JOIN_RAID = 20;
	QUEST_TYPE_QUEST_COMPLETE_BATTLE = 21;
	QUEST_TYPE_QUEST_ADD_FRIEND = 22;
	QUEST_TYPE_QUEST_TRADE_POKEMON = 23;
	QUEST_TYPE_QUEST_SEND_GIFT = 24;
	QUEST_TYPE_QUEST_EVOLVE_INTO_POKEMON = 25;
	QUEST_TYPE_QUEST_COMPLETE_COMBAT = 27;
	QUEST_TYPE_QUEST_TAKE_SNAPSHOT = 28;
	QUEST_TYPE_QUEST_BATTLE_TEAM_ROCKET = 29;
	QUEST_TYPE_QUEST_PURIFY_POKEMON = 30;
	QUEST_TYPE_QUEST_FIND_TEAM_ROCKET = 31;
	QUEST_TYPE_QUEST_FIRST_GRUNT_OF_THE_DAY = 32;
	QUEST_TYPE_QUEST_BUDDY_FEED = 33;
	QUEST_TYPE_QUEST_BUDDY_EARN_AFFECTION_POINTS = 34;
	QUEST_TYPE_QUEST_BUDDY_PET = 35;
	QUEST_TYPE_QUEST_BUDDY_LEVEL = 36;
	QUEST_TYPE_QUEST_BUDDY_WALK = 37;
	QUEST_TYPE_QUEST_BUDDY_YATTA = 38;
	QUEST_TYPE_QUEST_USE_INCENSE = 39;
}

enum RaidLevel {
	RAID_LEVEL_RAID_LEVEL_UNSET = 0;
	RAID_LEVEL_RAID_LEVEL_1 = 1;
	RAID_LEVEL_RAID_LEVEL_2 = 2;
	RAID_LEVEL_RAID_LEVEL_3 = 3;
	RAID_LEVEL_RAID_LEVEL_4 = 4;
	RAID_LEVEL_RAID_LEVEL_5 = 5;
}

enum RaidTelemetryIds {
	RAID_TELEMETRY_IDS_UNDEFINED_RAID_EVENT = 0;
	RAID_TELEMETRY_IDS_APPROACH_ENTER = 1;
	RAID_TELEMETRY_IDS_APPROACH_CLICK_SPINNER = 2;
	RAID_TELEMETRY_IDS_APPROACH_JOIN = 3;
	RAID_TELEMETRY_IDS_APPROACH_TICKET_CONFIRMATION = 4;
	RAID_TELEMETRY_IDS_APPROACH_CLICK_TUTORIAL = 5;
	RAID_TELEMETRY_IDS_APPROACH_CLICK_SHOP = 6;
	RAID_TELEMETRY_IDS_APPROACH_CLICK_INSPECT = 7;
	RAID_TELEMETRY_IDS_LOBBY_ENTER = 8;
	RAID_TELEMETRY_IDS_LOBBY_CLICK_INVENTORY = 9;
	RAID_TELEMETRY_IDS_LOBBY_CLICK_EXIT = 10;
	RAID_TELEMETRY_IDS_LOBBY_TAP_AVATAR = 11;
	RAID_TELEMETRY_IDS_LOBBY_CLICK_REJOIN_BATTLE = 12;
	RAID_TELEMETRY_IDS_LOBBY_CLICK_LOBBY_PUBLIC = 13;
}

enum RemoteRaidInviteAcceptSource {
	REMOTE_RAID_INVITE_ACCEPT_SOURCE_UNDEFINED_REMOTE_RAID_INVITE_ACCEPT_SOURCE = 0;
	REMOTE_RAID_INVITE_ACCEPT_SOURCE_REMOTE_RAID_IN_APP = 1;
	REMOTE_RAID_INVITE_ACCEPT_SOURCE_REMOTE_RAID_PUSH_NOTIFICATION = 2;
}

enum RemoteRaidJoinSource {
	REMOTE_RAID_JOIN_SOURCE_UNDEFINED_REMOTE_RAID_JOIN_SOURCE = 0;
	REMOTE_RAID_JOIN_SOURCE_REMOTE_RAID_USED_MAP = 1;
	REMOTE_RAID_JOIN_SOURCE_REMOTE_RAID_NEARBY_GUI = 2;
	REMOTE_RAID_JOIN_SOURCE_REMOTE_RAID_INVITED_BY_FRIEND = 3;
}

enum RemoteRaidTelemetryIds {
	REMOTE_RAID_TELEMETRY_IDS_UNDEFINED_REMOTE_RAID_EVENT = 0;
	REMOTE_RAID_TELEMETRY_IDS_REMOTE_RAID_LOBBY_ENTER = 1;
	REMOTE_RAID_TELEMETRY_IDS_REMOTE_RAID_INVITE_SENT = 2;
	REMOTE_RAID_TELEMETRY_IDS_REMOTE_RAID_INVITE_ACCEPTED = 3;
	REMOTE_RAID_TELEMETRY_IDS_REMOTE_RAID_INVITE_REJECTED = 4;
}

enum ShareExRaidPassResult {
	SHARE_EX_RAID_PASS_RESULT_SHARE_EX_RAID_PASS_UNSET = 0;
	SHARE_EX_RAID_PASS_RESULT_SHARE_EX_RAID_PASS_SUCCESS = 1;
	SHARE_EX_RAID_PASS_RESULT_ERROR_FRIEND_ALREADY_INVITED_TO_SAME_RAID = 2;
	SHARE_EX_RAID_PASS_RESULT_ERROR_EX_RAID_PASS_ALREADY_SHARED = 3;
	SHARE_EX_RAID_PASS_RESULT_ERROR_FRIEND_ALREADY_HAS_SHARED_EX_PASS_IN_INVENTORY = 4;
	SHARE_EX_RAID_PASS_RESULT_ERROR_TOO_LOW_FRIENDSHIP_LEVEL = 5;
	SHARE_EX_RAID_PASS_RESULT_ERROR_FRIEND_NOT_FOUND = 6;
	SHARE_EX_RAID_PASS_RESULT_ERROR_EX_RAID_ALREADY_STARTED = 7;
	SHARE_EX_RAID_PASS_RESULT_ERROR_EX_RAID_INVALID = 8;
	SHARE_EX_RAID_PASS_RESULT_ERROR_EX_RAID_PASS_NOT_FOUND = 9;
	SHARE_EX_RAID_PASS_RESULT_ERROR_UNKNOWN = 10;
	SHARE_EX_RAID_PASS_RESULT_ERROR_FRIEND_NOT_ELIGIBLE = 11;
}

enum ShoppingPageScrollIds {
	SHOPPING_PAGE_SCROLL_IDS_UNDEFINED_SHOPPING_PAGE_SCROLL_TYPE = 0;
	SHOPPING_PAGE_SCROLL_IDS_LAST_SCROLL = 1;
	SHOPPING_PAGE_SCROLL_IDS_MAX_SCROLL = 2;
}

enum ShoppingPageTelemetryIds {
	SHOPPING_PAGE_TELEMETRY_IDS_UNDEFINED_SHOPPING_PAGE_EVENT = 0;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_CUSTOMIZE_AVATAR = 1;
	SHOPPING_PAGE_TELEMETRY_IDS_QUICK_SHOP_MORE = 2;
	SHOPPING_PAGE_TELEMETRY_IDS_QUICK_SHOP_EXCHANGE = 3;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_SHOP = 4;
	SHOPPING_PAGE_TELEMETRY_IDS_QUIT_SHOP = 5;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_SKU = 6;
	SHOPPING_PAGE_TELEMETRY_IDS_QUIT_SKU = 7;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_SKU_EXCHANGE = 8;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_SHOP_AVATAR = 9;
	SHOPPING_PAGE_TELEMETRY_IDS_QUIT_SHOP_AVATAR = 10;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_AVATAR_TYPE = 11;
	SHOPPING_PAGE_TELEMETRY_IDS_QUIT_AVATAR_TYPE = 12;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_AVATAR_ITEM = 13;
	SHOPPING_PAGE_TELEMETRY_IDS_QUIT_AVATAR_ITEM = 14;
	SHOPPING_PAGE_TELEMETRY_IDS_CONFIRM_AVATAR_ITEM = 15;
	SHOPPING_PAGE_TELEMETRY_IDS_CLICK_AVATAR_ITEM_COLOR = 16;
	SHOPPING_PAGE_TELEMETRY_IDS_QUIT_AVATAR_ITEM_COLOR = 17;
	SHOPPING_PAGE_TELEMETRY_IDS_CONFIRM_AVATAR_ITEM_COLOR = 18;
}

enum ShoppingPageTelemetrySource {
	SHOPPING_PAGE_TELEMETRY_SOURCE_UNDEFINED_SHOPPING_PAGE_SOURCE = 0;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_MAIN_MENU = 1;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_POKEMON_BAG_FULL = 2;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_INCUBATOR_SELECTOR = 3;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_POKESTOP_DISK_INTERACTION = 4;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_OPEN_GIFT_BAG_FULL = 5;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_QUICK_SHOP_BAG_FULL_ENCOUNTER = 6;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_QUICK_SHOP_BAG_FULL_RAID = 7;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_QUICK_SHOP_MORE = 8;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_AVATAR_ITEM = 9;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_POKEMON_ENCOUNTER = 10;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_PLAYER_PROFILE_PAGE = 11;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_STORE_FRONT = 12;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_AVATAR_CUSTOMIZATION_AWARD = 13;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_FIRST_TIME_USER_FLOW = 14;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_BADGE_DETAIL_AVATAR_REWARD = 15;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_QUICK_SHOP_BUDDY_INTERACTION_POFFIN = 100;
	SHOPPING_PAGE_TELEMETRY_SOURCE_SOURCE_QUICK_SHOP_BUDDY_QUICK_FEED_POFFIN = 101;
}

enum SocialTelemetryIds {
	SOCIAL_TELEMETRY_IDS_UNDEFINED_SOCIAL = 0;
	SOCIAL_TELEMETRY_IDS_FRIEND_TAB = 1;
	SOCIAL_TELEMETRY_IDS_NOTIFICATION_TAB = 2;
	SOCIAL_TELEMETRY_IDS_FRIEND_PROFILE = 3;
	SOCIAL_TELEMETRY_IDS_OPEN_FRIEND_SHIP_LEVEL_DETAIL = 4;
	SOCIAL_TELEMETRY_IDS_CLOSE_OPEN_GIFT_CONFIRMATION = 5;
	SOCIAL_TELEMETRY_IDS_FRIEND_LIST_SORT_CHANGED = 6;
	SOCIAL_TELEMETRY_IDS_FRIEND_LIST_CLOSED = 7;
}

enum SouvenirTypeId {
	SOUVENIR_TYPE_ID_SOUVENIR_UNSET = 0;
	SOUVENIR_TYPE_ID_SOUVENIR_LONE_EARRING = 1;
	SOUVENIR_TYPE_ID_SOUVENIR_SMALL_BOUQUET = 2;
	SOUVENIR_TYPE_ID_SOUVENIR_SKIPPING_STONE = 3;
	SOUVENIR_TYPE_ID_SOUVENIR_BEACH_GLASS = 4;
	SOUVENIR_TYPE_ID_SOUVENIR_TROPICAL_SHELL = 5;
	SOUVENIR_TYPE_ID_SOUVENIR_MUSHROOM = 6;
	SOUVENIR_TYPE_ID_SOUVENIR_CHALKY_STONE = 7;
	SOUVENIR_TYPE_ID_SOUVENIR_PINECONE = 8;
	SOUVENIR_TYPE_ID_SOUVENIR_TROPICAL_FLOWER = 9;
	SOUVENIR_TYPE_ID_SOUVENIR_FLOWER_FRUITS = 10;
	SOUVENIR_TYPE_ID_SOUVENIR_CACTUS_FLOWER = 11;
	SOUVENIR_TYPE_ID_SOUVENIR_STRETCHY_SPRING = 12;
	SOUVENIR_TYPE_ID_SOUVENIR_MARBLE = 13;
	SOUVENIR_TYPE_ID_SOUVENIR_TORN_TICKET = 14;
	SOUVENIR_TYPE_ID_SOUVENIR_PRETTY_LEAF = 15;
}

enum Store {
	STORE_STORE_UNSET = 0;
	STORE_STORE_APPLE = 1;
	STORE_STORE_GOOGLE = 2;
	STORE_STORE_SAMSUNG = 3;
}

enum Team {
	TEAM_UNSET = 0;
	TEAM_TEAM_BLUE = 1;
	TEAM_TEAM_RED = 2;
	TEAM_TEAM_YELLOW = 3;
}

enum TutorialCompletion {
	TUTORIAL_COMPLETION_LEGAL_SCREEN = 0;
	TUTORIAL_COMPLETION_AVATAR_SELECTION = 1;
	TUTORIAL_COMPLETION_ACCOUNT_CREATION = 2;
	TUTORIAL_COMPLETION_POKEMON_CAPTURE = 3;
	TUTORIAL_COMPLETION_NAME_SELECTION = 4;
	TUTORIAL_COMPLETION_POKEMON_BERRY = 5;
	TUTORIAL_COMPLETION_USE_ITEM = 6;
	TUTORIAL_COMPLETION_FIRST_TIME_EXPERIENCE_COMPLETE = 7;
	TUTORIAL_COMPLETION_POKESTOP_TUTORIAL = 8;
	TUTORIAL_COMPLETION_GYM_TUTORIAL = 9;
	TUTORIAL_COMPLETION_CHALLENGE_QUEST_TUTORIAL = 10;
	TUTORIAL_COMPLETION_PRIVACY_POLICY_CONFIRMATION = 11;
	TUTORIAL_COMPLETION_TRADING_TUTORIAL = 12;
	TUTORIAL_COMPLETION_POI_SUBMISSION_TUTORIAL = 13;
	TUTORIAL_COMPLETION_V1_START_TUTORIAL = 14;
	TUTORIAL_COMPLETION_V2_START_TUTORIAL = 15;
	TUTORIAL_COMPLETION_V2_CUSTOMIZED_AVATAR = 16;
	TUTORIAL_COMPLETION_V2_CAUGHT_FIRST_WILD = 17;
	TUTORIAL_COMPLETION_V2_FINISHED_TUTORIAL_CATCHES = 18;
	TUTORIAL_COMPLETION_V2_NAME_SELECTION = 19;
	TUTORIAL_COMPLETION_V2_EGG_GIVEN = 20;
	TUTORIAL_COMPLETION_V2_START_EGG_TUTORIAL = 21;
	TUTORIAL_COMPLETION_V2_COMPLETED_EGG_TUTORIAL = 22;
	TUTORIAL_COMPLETION_AR_PHOTO_TUTORIAL = 23;
	TUTORIAL_COMPLETION_STARTER_POKEMON_CAPTURED = 24;
	TUTORIAL_COMPLETION_AR_PHOTO_FIRST_TIME_DIALOG = 25;
	TUTORIAL_COMPLETION_AR_CLASSIC_PHOTO_TUTORIAL = 26;
	TUTORIAL_COMPLETION_AR_PLUS_PHOTO_TUTORIAL = 27;
	TUTORIAL_COMPLETION_INVASION_INTRODUCTION_DIALOG = 29;
	TUTORIAL_COMPLETION_INVASION_ENCOUNTER_DIALOG = 30;
	TUTORIAL_COMPLETION_INVASION_SHADOW_POKEMON_DIALOG = 31;
	TUTORIAL_COMPLETION_INVASION_MAP_FRAGMENT_DIALOG = 33;
	TUTORIAL_COMPLETION_INVASION_MAP_RECEIVED_DIALOG = 34;
	TUTORIAL_COMPLETION_INVASION_MAP_2_RECEIVED_DIALOG = 35;
	TUTORIAL_COMPLETION_BUDDY_WELCOME_PROMPT = 36;
	TUTORIAL_COMPLETION_BUDDY_AR_PLUS_TUTORIAL = 37;
	TUTORIAL_COMPLETION_BUDDY_FEED_TUTORIAL = 38;
	TUTORIAL_COMPLETION_BUDDY_ON_MAP_PROMPT = 39;
	TUTORIAL_COMPLETION_BATTLE_LEAGUE_HELP_TUTORIAL = 40;
	TUTORIAL_COMPLETION_ARMP_TOS_CONFIRMATION = 41;
	TUTORIAL_COMPLETION_BUDDY_REMOTE_GIFT_TUTORIAL = 42;
	TUTORIAL_COMPLETION_DAILY_BONUS_ENCOUNTER_TUTORIAL = 45;
}

enum VariableName {
	VARIABLE_NAME_unset__variable_name = 0;
	VARIABLE_NAME_CODE_NAME = 1;
	VARIABLE_NAME_TEAM = 2;
	VARIABLE_NAME_LEVEL = 3;
	VARIABLE_NAME_EXPERIENCE = 4;
	VARIABLE_NAME_POKECOIN_BALANCE = 5;
	VARIABLE_NAME_STARDUST_BALANCE = 6;
	VARIABLE_NAME_EMAIL = 7;
	VARIABLE_NAME_LOGIN_METHOD = 8;
	VARIABLE_NAME_GYM_ID = 1000;
	VARIABLE_NAME_GYM_NAME = 1001;
	VARIABLE_NAME_POKEMON_DISPLAY = 1002;
	VARIABLE_NAME_POKEDEX_ENTRY_NUMBER = 1003;
	VARIABLE_NAME_POKEMON_ID = 1004;
	VARIABLE_NAME_POKEMON_NICKNAME = 1005;
	VARIABLE_NAME_GYM_BADGE_EARNED_POINTS = 1006;
	VARIABLE_NAME_GYM_BADGE_PROGRESS = 1007;
	VARIABLE_NAME_GYM_BADGE_RANK = 1008;
	VARIABLE_NAME_GYM_BADGE_IMAGE_URL = 1009;
	VARIABLE_NAME_GYM_BADGE_LEVEL_UP = 1010;
	VARIABLE_NAME_POKECOIN_AWARDED = 1011;
	VARIABLE_NAME_POKECOIN_AWARDED_TODAY = 1012;
	VARIABLE_NAME_MAX_DAILY_POKECOIN = 1013;
	VARIABLE_NAME_BATTLES_WON = 1014;
	VARIABLE_NAME_BATTLES_LOST = 1015;
	VARIABLE_NAME_DEPLOYED_MILLIS = 1016;
	VARIABLE_NAME_RAID_SEED = 1017;
	VARIABLE_NAME_EXCLUSIVE_RAID_CANCELLATION_INFO = 1018;
	VARIABLE_NAME_GIFTBOX_DETAILS = 1019;
	VARIABLE_NAME_FRIEND_AVATAR = 1020;
	VARIABLE_NAME_FRIEND_TEAM = 1021;
	VARIABLE_NAME_FRIEND_CODENAME = 1022;
	VARIABLE_NAME_GIFT_LOOT_ITEMS = 1023;
	VARIABLE_NAME_GIFT_EGG = 1024;
	VARIABLE_NAME_FRIENDSHIP_MILESTONE_REWARD_DETAILS = 1025;
	VARIABLE_NAME_FRIENDSHIP_LEVEL_DISPLAY = 1026;
	VARIABLE_NAME_BGMODE_BUDDY_POKEMON_NICKNAME = 1027;
	VARIABLE_NAME_COMBAT_CHALLENGE = 1028;
	VARIABLE_NAME_COMBAT_CHALLENGER_CODENAME = 1029;
	VARIABLE_NAME_BGMODE_OFF_SESSION_DISTANCE_KM = 1030;
	VARIABLE_NAME_POI_NAME = 1031;
	VARIABLE_NAME_FRIEND_ID = 1032;
	VARIABLE_NAME_BUDDY_SHOWN_HEART_TYPE = 1033;
	VARIABLE_NAME_POI_ID = 1034;
	VARIABLE_NAME_POI_EXPIRATION = 1035;
	VARIABLE_NAME_BUDDY_LEVEL = 1036;
	VARIABLE_NAME_NUM_VS_SEEKER_CHARGES = 1037;
	VARIABLE_NAME_SEASON_NUMBER = 1038;
	VARIABLE_NAME_POI_PASSCODE_REDEMPTION_RESPONSE = 1039;
	VARIABLE_NAME_GIFTBOX_COUNT = 1040;
	VARIABLE_NAME_RAID_INVITATION_DETAILS = 1041;
}

enum VsSeekerRewardTrack {
	VS_SEEKER_REWARD_TRACK_FREE = 0;
	VS_SEEKER_REWARD_TRACK_PREMIUM = 1;
}

enum WebTelemetryIds {
	WEB_TELEMETRY_IDS_UNDEFINED_WEB_EVENT = 0;
	WEB_TELEMETRY_IDS_POINT_OF_INTEREST_DESCRIPTION_WEB_CLICK = 1;
}

message AcceptCombatChallengeOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_CHALLENGE_STATE = 2;
		ERROR_CHALLENGE_NOT_FOUND = 3;
		ERROR_POKEMON_NOT_IN_INVENTORY = 4;
		ERROR_NOT_ELIGIBLE_LEAGUE = 5;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 6;
		ERROR_OPPONENT_NOT_IN_RANGE = 7;
		ERROR_ALREADY_TIMEDOUT = 8;
		ERROR_ALREADY_CANCELLED = 9;
		ERROR_ACCESS_DENIED = 10;
	}

	Result result = 1;
	CombatChallengeProto challenge = 2;
}

message AcceptCombatChallengeProto {
	string challenge_id = 1;
	repeated fixed64 attacking_pokemon_id = 6;
}

message AcknowledgePunishmentOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
}

message AcknowledgePunishmentProto {
	bool is_warn = 1;
	bool is_suspended = 2;
}

message ActionLogEntry {
	int64 timestamp_ms = 1;
	bool sfida = 2;
	CatchPokemonLogEntry catch_pokemon = 3;
	FortSearchLogEntry fort_search = 4;
	BuddyPokemonLogEntry buddy_pokemon = 5;
	RaidRewardsLogEntry raid_rewards = 6;
	PasscodeRewardsLogEntry passcode_rewards = 7;
	CompleteQuestLogEntry complete_quest = 8;
	CompleteQuestStampCardLogEntry complete_quest_stamp_card = 9;
	CompleteQuestPokemonEncounterLogEntry complete_quest_pokemon_encounter = 10;
	BelugaDailyTransferLogEntry beluga_transfer = 11;
	OpenGiftLogEntry open_gift = 12;
	SendGiftLogEntry send_gift = 13;
	TradingLogEntry trading = 14;
	ShareExRaidPassLogEntry share_ex_raid_pass = 15;
	DeclineExRaidPassLogEntry decline_ex_raid_pass = 16;
	FitnessRewardsLogEntry fitness_rewards = 17;
	CombatLogEntry combat = 18;
	PurifyPokemonLogEntry purify_pokemon = 19;
	InvasionVictoryLogEntry invasion_victory = 20;
	VsSeekerSetLogEntry vs_seeker_set = 21;
	VsSeekerCompleteSeasonLogEntry vs_seeker_complete_season = 22;
	VsSeekerWinRewardsLogEntry vs_seeker_win_rewards = 23;
}

message ActivateVsSeekerOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS_ACTIVATED = 1;
		ERROR_NO_PREMIUM_BATTLE_PASS = 2;
		ERROR_VS_SEEKER_NOT_CHARGED = 3;
		ERROR_VS_SEEKER_ALREADY_ACTIVATED = 4;
		ERROR_EXCEEDED_LIMIT = 5;
		ERROR_TEMPORARILY_UNAVAILABLE = 6;
	}

	Result result = 1;
	VsSeekerAttributesProto vs_seeker = 2;
}

message ActivateVsSeekerProto {
	VsSeekerRewardTrack reward_track = 1;
}

message AddFortModifierOutProto {
	enum Result {
		NO_RESULT_SET = 0;
		SUCCESS = 1;
		FORT_ALREADY_HAS_MODIFIER = 2;
		TOO_FAR_AWAY = 3;
		NO_ITEM_IN_INVENTORY = 4;
		POI_INACCESSIBLE = 5;
	}

	Result result = 1;
	FortDetailsOutProto fort_details_out_proto = 2;
}

message AddFortModifierProto {
	Item modifier_type = 1;
	string fort_id = 2;
	double player_lat_degrees = 3;
	double player_lng_degrees = 4;
}

message AddFriendQuestProto {
	repeated string added_friend_ids = 1;
}

message AdventureSyncV2GmtProto {
	bool feature_enabled = 1;
}

message AnimationOverrideProto {
	enum PokemonAnim {
		NONE = 0;
		IDLE_01 = 1;
		IDLE_02 = 2;
		LAND = 3;
		ATTACK_01 = 4;
		ATTACK_02 = 5;
		DAMAGED = 6;
		STUNNED = 7;
		LOOP = 8;
	}

	PokemonAnim animation = 1;
	bool blacklist = 2;
	float anim_min = 3;
	float anim_max = 4;
}

message AppliedItemProto {
	Item item = 1;
	HoloItemType item_type = 2;
	int64 expiration_ms = 3;
	int64 applied_ms = 4;
}

message AppliedItemsProto {
	repeated AppliedItemProto item = 4;
}

message ARBuddyMultiplayerSessionTelemetry {
	bool camera_permission_granted = 1;
	int64 host_time_to_publish_first_map = 2;
	int32 host_number_of_maps_published = 3;
	bool host_mapping_successful = 4;
	bool lobby_connection_successful = 5;
	int64 time_from_start_of_session_to_sync = 6;
	bool sync_successful = 7;
	int64 session_length = 8;
	int32 crash_count = 9;
	int64 duration_spent_in_lobby = 10;
	int64 time_from_invite_to_lobby = 11;
	int64 time_from_lobby_to_session = 12;
	int64 length_of_ar_session = 13;
	int32 players_connected = 14;
	int32 players_dropped = 15;
	int32 num_photos_taken = 16;
	bool is_host = 17;
}

message ArdkConfigSettingsProto {
	enum ArContext {
		UNSET = 0;
		AR_ENCOUNTER = 1;
		AR_SNAPSHOT = 2;
		SINGLEPLAYER_BUDDY = 3;
		MULTIPLAYER_BUDDY = 4;
	}

	string orb_vocab_url = 1;
	string monodpeth_model_url = 2;
	repeated string monodepth_devices = 3;
	repeated ArContext monodepth_contexts = 4;
	string ios_monodepth_model_url = 5;
	string android_monodepth_model_url = 6;
}

message ArMappingSettingsProto {
	int32 min_hours_between_prompt = 1;
	int32 max_video_time_seconds = 2;
	int32 preview_video_bitrate_kbps = 3;
	int32 preview_video_deadline_ms = 4;
	int32 research_video_bitrate_kbps = 5;
	int32 research_video_deadline_ms = 6;
	int32 min_video_time_seconds = 7;
	int32 preview_frame_rate_fps = 8;
	int32 preview_frames_to_jump = 9;
	int32 max_upload_chunk_rejected_count = 10;
	int32 ardk_desired_accuracy_mm = 11;
	int32 ardk_update_distance_mm = 12;
	int32 max_pending_upload_kilobytes = 13;
}

message ArMappingTelemetryProto {
	enum ArMappingEntryPoint {
		UNKNOWN_ENTRY = 0;
		POI_EDIT_MENU = 1;
		POI_EDIT_TITLE = 2;
		POI_EDIT_DESCRIPTION = 3;
		POI_ADD_PHOTO = 4;
		POI_EDIT_LOCATION = 5;
		POI_NOMINATION = 6;
	}

	enum ArMappingEventId {
		UNKNOWN = 0;
		ENTER_STATE = 1;
		OPT_IN_ACCEPT = 2;
		OPT_IN_DENY = 3;
		OPT_IN_SETTINGS = 4;
		OPT_OUT_SETTINGS = 5;
		EXIT_FROM_RECORDING = 6;
		START_RECORDING = 7;
		STOP_RECORDING = 8;
		CANCEL_ENCODING = 9;
		UPLOAD_NOW = 10;
		UPLOAD_LATER = 11;
		CANCEL_UPLOAD = 12;
		START_UPLOAD_SETTINGS = 13;
		UPLOAD_SUCCESS = 14;
		OPT_IN_LEARN_MORE = 15;
	}

	ArMappingEventId ar_mapping_telemetry_id = 1;
	ArMappingEntryPoint source = 2;
	float recording_length_seconds = 3;
	float time_elapsed_seconds = 4;
	float percent_encoded = 5;
	int64 data_size_bytes = 6;
}

message ArPhotoGlobalSettings {
	int32 min_player_level = 1;
}

message ArPhotoSessionProto {
	enum ArContext {
		NONE = 0;
		AR_ENCOUNTER = 1;
		AR_SNAPSHOT = 2;
		SINGLEPLAYER_BUDDY = 3;
		MULTIPLAYER_BUDDY = 4;
	}

	enum ArType {
		UNSET = 0;
		PLUS = 1;
		CLASSIC = 2;
	}

	enum Step {
		UNKNOWN = 0;
		CAMERA_PERMISSION_GRANTED = 1;
		ARPLUS_PLANE_FOUND = 2;
		ARPLUS_POKEMON_PLACED = 3;
		PHOTO_TAKEN = 4;
		PHOTO_SHARED = 5;
	}

	ArType ar_type = 1;
	Step furthest_step_completed = 2;
	int32 num_photos_taken = 3;
	int32 num_photos_shared = 4;
	int32 num_photos_taken_occlusions = 5;
	int32 num_occlusions_enabled = 6;
	int32 num_occlusions_disabled = 7;
	ArContext ar_context = 8;
	int64 session_length = 9;
	int64 session_length_occlusions = 10;
	int32 num_photos_shared_occlusions = 11;
	string model_url = 12;
}

message ARPlusEncounterValuesProto {
	float proximity = 1;
	float awareness = 2;
	bool pokemon_frightened = 3;
}

message AssetBundleDownloadTelemetry {
	AssetTelemetryIds asset_event_id = 1;
	string bundle_name = 2;
	uint32 size = 3;
}

message AssetDigestEntryProto {
	string asset_id = 1;
	string bundle_name = 2;
	int64 version = 3;
	fixed32 checksum = 4;
	int32 size = 5;
	bytes key = 6;
}

message AssetDigestOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		PAGE = 2;
		RETRY = 3;
	}

	repeated AssetDigestEntryProto digest = 1;
	uint64 timestamp = 2;
	Result result = 3;
	int32 page_offset = 4;
}

message AssetDigestRequestProto {
	Platform platform = 1;
	string device_manufacturer = 2;
	string device_model = 3;
	string locale = 4;
	uint32 app_version = 5;
	bool paginate = 6;
	int32 page_offset = 7;
	uint64 page_timestamp = 8;
}

message AssetPoiDownloadTelemetry {
	AssetTelemetryIds asset_event_id = 1;
	string fort_id = 2;
	uint32 size = 3;
}

message AssetStreamCacheCulledTelemetry {
	AssetTelemetryIds asset_event_id = 1;
	uint32 space_released = 2;
}

message AssetStreamDownloadTelemetry {
	AssetTelemetryIds asset_event_id = 1;
	string url = 2;
	uint32 size = 3;
}

message AssetVersionOutProto {
	enum Result {
		UNSET = 0;
		ERROR = 1;
		VALID = 2;
		EXPIRED = 3;
	}

	message AssetVersionResponseProto {
		Result result = 1;
		AssetDigestEntryProto digest = 2;
		string url = 3;
	}

	repeated AssetVersionResponseProto response = 1;
}

message AssetVersionProto {
	message AssetVersionRequestProto {
		string asset_id = 1;
		fixed32 checksum = 2;
	}

	uint32 app_version = 1;
	repeated AssetVersionRequestProto request = 2;
}

message AttackGymOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_ATTACK_ACTIONS = 2;
		ERROR_NOT_IN_RANGE = 3;
	}

	Result result = 1;
	BattleLogProto battle_log = 2;
	string battle_id = 3;
	PokemonInfo active_defender = 4;
	PokemonInfo active_attacker = 5;
	BattleUpdateProto battle_update = 6;
}

message AttackGymProto {
	string gym_id = 1;
	string battle_id = 2;
	repeated BattleActionProto attacker_actions = 3;
	BattleActionProto last_retrieved_action = 4;
	double player_lat_degrees = 5;
	double player_lng_degrees = 6;
}

message AttackRaidBattleOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_GYM_NOT_FOUND = 2;
		ERROR_BATTLE_NOT_FOUND = 3;
		ERROR_INVALID_ATTACK_ACTIONS = 4;
		ERROR_NOT_PART_OF_BATTLE = 5;
		ERROR_BATTLE_ID_NOT_RAID = 6;
	}

	Result result = 1;
	BattleUpdateProto battle_update = 2;
}

message AttackRaidBattleProto {
	string gym_id = 1;
	string battle_id = 2;
	repeated BattleActionProto attacker_actions = 3;
	BattleActionProto last_retrieved_action = 4;
	int64 timestamp_ms = 5;
}

message AvatarCustomizationProto {
	enum AvatarCustomizationPromoType {
		UNSET_PROMO_TYPE = 0;
		SALE = 1;
		FEATURED = 2;
	}

	enum AvatarCustomizationUnlockType {
		UNSET_UNLOCK_TYPE = 0;
		DEFAULT = 1;
		MEDAL_REWARD = 2;
		IAP_CLOTHING = 3;
		LEVEL_REWARD = 4;
		COMBAT_RANK_REWARD = 5;
	}

	enum Slot {
		UNSET_SLOT = 0;
		HAIR = 1;
		SHIRT = 2;
		PANTS = 3;
		HAT = 4;
		SHOES = 5;
		EYES = 6;
		BACKPACK = 7;
		GLOVES = 8;
		SOCKS = 9;
		BELT = 10;
		GLASSES = 11;
		NECKLACE = 12;
		SKIN = 13;
		POSE = 14;
	}

	bool enabled = 1;
	PlayerAvatarType avatar_type = 2;
	repeated Slot slot = 3;
	string bundle_name = 4;
	string asset_name = 5;
	string group_name = 6;
	int32 sort_order = 7;
	AvatarCustomizationUnlockType unlock_type = 8;
	repeated AvatarCustomizationPromoType promo_type = 9;
	HoloBadgeType unlock_badge_type = 10;
	string iap_sku = 11;
	int32 unlock_badge_level = 12;
	string icon_name = 13;
	int32 unlock_player_level = 14;
	string set_name = 15;
	bool set_prime_item = 16;
	repeated string incompatible_bundle_names = 17;
}

message AvatarCustomizationTelemetry {
	AvatarCustomizationTelemetryIds avatar_customization_click_id = 1;
	string asset_name = 2;
	string sku = 3;
	bool has_enough_coins = 4;
	string group_name = 5;
	string color_choice_id = 6;
}

message AvatarGlobalSettingsProto {
	bool enable_pose = 1;
}

message AvatarGroupOrderSettingsProto {
	message AvatarGroupOrderProto {
		string name = 1;
		int32 order = 2;
	}

	repeated AvatarGroupOrderProto group = 1;
}

message AvatarItemProto {
	string avatar_template_id = 1;
	int64 new_timestamp_ms = 2;
	bool viewed = 3;
}

message AwardedGymBadge {
	string fort_id = 1;
	GymBadgeType gym_badge_type = 2;
	uint32 score = 3;
	GymBadgeStats gym_badge_stats = 4;
	uint64 last_update_timestamp_ms = 5;
	string name = 6;
	string image_url = 7;
	string description = 8;
	double latitude = 9;
	double longitude = 10;
	uint64 last_check_timestamp_ms = 11;
	uint32 earned_points = 12;
	float progress = 13;
	bool level_up = 14;
	PlayerRaidInfoProto raids = 15;
}

message AwardFreeRaidTicketOutProto {
	enum Result {
		NO_RESULT_SET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_DOES_NOT_MEET_MIN_LEVEL = 2;
		ERROR_DAILY_TICKET_ALREADY_AWARDED = 3;
		ERROR_PLAYER_OUT_OF_RANGE = 4;
	}

	Result result = 1;
}

message AwardFreeRaidTicketProto {
	string gym_id = 1;
	double player_lat_degrees = 2;
	double player_lng_degrees = 3;
}

message AwardItemProto {
	Item item = 1;
	int32 item_count = 2;
	int32 bonus_count = 3;
}

message BackgroundModeGlobalSettingsProto {
	uint32 min_player_level_fitness = 1;
	int64 service_prompt_timestamp_ms = 2;
}

message BackgroundModeSettingsProto {
	double weekly_fitness_goal_level1_distance_km = 1;
	double weekly_fitness_goal_level2_distance_km = 2;
	double weekly_fitness_goal_level3_distance_km = 3;
	double weekly_fitness_goal_level4_distance_km = 4;
}

message BackgroundToken {
	bytes token = 1;
	int64 expiration_time = 2;
	bytes iv = 3;
}

message BadgeCaptureReward {
	float capture_reward_multiplier = 1;
	repeated string avatar_template_ids = 2;
}

message BadgeSettingsProto {
	HoloBadgeType badge_type = 1;
	int32 badge_ranks = 2;
	repeated int32 targets = 3;
	repeated BadgeCaptureReward capture_reward = 4;
	bool event_badge = 5;
	EventBadgeSettingsProto event_badge_settings = 6;
	string combat_league_template_id = 7;
}

message BattleActionProto {
	enum ActionType {
		UNSET = 0;
		ATTACK = 1;
		DODGE = 2;
		SPECIAL_ATTACK = 3;
		SWAP_POKEMON = 4;
		FAINT = 5;
		PLAYER_JOIN = 6;
		PLAYER_QUIT = 7;
		VICTORY = 8;
		DEFEAT = 9;
		TIMED_OUT = 10;
		SPECIAL_ATTACK_2 = 11;
	}

	ActionType type = 1;
	int64 action_start_ms = 2;
	int32 duration_ms = 3;
	int32 energy_delta = 5;
	int32 attacker_index = 6;
	int32 target_index = 7;
	fixed64 active_pokemon_id = 8;
	BattleParticipantProto joined_player = 9;
	BattleResultsProto battle_results = 10;
	int64 damage_window_start_ms = 11;
	int64 damage_window_end_ms = 12;
	BattleParticipantProto quit_player = 13;
	fixed64 target_pokemon_id = 14;
	LeveledUpFriendsProto leveled_up_friends = 15;
}

message BattleAttributesProto {
	float sta_percent = 1;
	float atk_percent = 2;
	float def_percent = 3;
	float duration_s = 4;
}

message BattleHubBadgeSettings {
	repeated HoloBadgeType combat_hub_displayed_badges = 1;
}

message BattleHubOrderSettings {
	message SectionGroup {
		repeated BattleHubSection section = 1;
	}

	message SectionSettings {
		BattleHubSection main_section = 1;
		repeated BattleHubSubsection subsection = 2;
	}

	repeated SectionSettings section = 1;
	repeated SectionGroup section_group = 2;
}

message BattleLogProto {
	enum BattleType {
		BATTLE_TYPE_UNSET = 0;
		NORMAL = 1;
		TRAINING = 2;
		RAID = 3;
	}

	enum State {
		STATE_UNSET = 0;
		ACTIVE = 1;
		VICTORY = 2;
		DEFEATED = 3;
		TIMED_OUT = 4;
	}

	State state = 1;
	BattleType battle_type = 2;
	int64 server_ms = 3;
	repeated BattleActionProto battle_actions = 4;
	int64 battle_start_ms = 5;
	int64 battle_end_ms = 6;
}

message BattleParticipantProto {
	PokemonInfo active_pokemon = 1;
	PlayerPublicProfileProto trainer_public_profile = 2;
	repeated PokemonInfo reserve_pokemon = 3;
	repeated PokemonInfo defeated_pokemon = 4;
	repeated LobbyPokemonProto lobby_pokemon = 5;
	int32 damage_dealt = 6;
	bool super_effective_charge_move = 7;
	bool weather_boosted = 8;
	FriendshipLevelMilestone highest_friendship_milestone = 9;
	repeated string friend_codename = 10;
	bool is_remote = 11;
	bool is_social_invite = 12;
}

message BattlePartyTelemetry {
	BattlePartyTelemetryIds battle_party_click_id = 1;
	int32 battle_party_count = 2;
	int32 battle_party_number = 3;
}

message BattleProto {
	int64 battle_start_ms = 1;
	int64 battle_end_ms = 2;
	string battle_id = 3;
	BattleParticipantProto defender = 4;
	BattleLogProto battle_log = 5;
	BattleParticipantProto attacker = 6;
	GameplayWeatherProto.WeatherCondition weather_condition = 7;
	FriendshipLevelMilestone highest_friendship_milestone = 8;
}

message BattleResultsProto {
	GymStateProto gym_state = 1;
	repeated BattleParticipantProto attackers = 2;
	repeated int32 player_xp_awarded = 3;
	int64 next_defender_pokemon_id = 4;
	int32 gym_points_delta = 5;
	GymStatusAndDefendersProto gym_status = 6;
	repeated ParticipationProto participation = 7;
	repeated LootProto raid_item_rewards = 8;
	repeated RaidEncounterProto post_raid_encounter = 9;
	repeated AwardedGymBadge gym_badge = 10;
	repeated LootProto default_raid_item_rewards = 11;
}

message BattleUpdateProto {
	BattleLogProto battle_log = 1;
	string battle_id = 2;
	PokemonInfo active_defender = 3;
	PokemonInfo active_attacker = 4;
	FriendshipLevelMilestone highest_friendship_milestone = 5;
}

message BelugaBleCompleteTransferRequestProto {
	int64 transaction_id = 1;
	int32 beluga_requested_item_id = 2;
	string nonce = 3;
}

message BelugaBleFinalizeTransfer {
	BelugaBleTransferCompleteProto beluga_transfer_complete = 1;
	bytes server_signature = 2;
}

message BelugaBleTransferCompleteProto {
	string nonce = 1;
	string beluga_id = 2;
}

message BelugaBleTransferPrepProto {
	repeated BelugaPokemonProto pokemon_list = 1;
	bool eligble_for_item = 2;
	int64 transaction_id = 3;
	string beluga_id = 4;
	string nonce = 5;
}

message BelugaBleTransferProto {
	BelugaBleTransferPrepProto server_response = 1;
	bytes server_signature = 2;
	repeated string localized_origins = 3;
	string language = 4;
}

message BelugaDailyTransferLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	bool includes_weekly_bonus = 2;
	LootProto items_awarded = 3;
}

message BelugaGlobalSettingsProto {
	bool enable_beluga_transfer = 1;
	int32 max_num_pokemon_per_transfer = 2;
}

message BelugaIncenseBoxProto {
	bool is_usable = 1;
	int64 cool_down_finished_timestamp_ms = 2;
}

message BelugaPokemonProto {
	enum PokemonCostume {
		UNSET = 0;
		HOLIDAY_2016 = 1;
		ANNIVERSARY = 2;
		ONE_YEAR_ANNIVERSARY = 3;
		HALLOWEEN_2017 = 4;
	}

	enum PokemonForm {
		FORM_UNSET = 0;
		ALOLA = 1;
	}

	enum PokemonGender {
		GENDER_UNSET = 0;
		MALE = 1;
		FEMALE = 2;
		GENDERLESS = 3;
	}

	enum Team {
		NONE = 0;
		TEAM_BLUE = 1;
		TEAM_RED = 2;
		TEAM_YELLOW = 3;
	}

	enum TrainerGender {
		TRAINER_MALE = 0;
		TRAINER_FEMALE = 1;
	}

	string trainer_name = 1;
	TrainerGender trainer_gender = 2;
	Team trainer_team = 3;
	int32 trainer_level = 4;
	int32 pokedex_id = 5;
	int32 cp = 6;
	float pokemon_level = 7;
	int32 max_hp = 8;
	double origin_lat = 9;
	double origin_lng = 10;
	float height = 11;
	float weight = 12;
	int32 individual_attack = 13;
	int32 individual_defense = 14;
	int32 individual_stamina = 15;
	int32 creation_day = 16;
	int32 creation_month = 17;
	int32 creation_year = 18;
	string nickname = 19;
	PokemonGender gender = 20;
	PokemonCostume costume = 21;
	PokemonForm form = 22;
	bool shiny = 23;
	int32 move1 = 24;
	int32 move2 = 25;
}

message BelugaPokemonWhitelist {
	int32 max_allowed_pokemon_pokedex_number = 1;
	repeated HoloPokemonId additional_pokemon_allowed = 2;
	repeated PokemonDisplayProto.Form forms_allowed = 3;
	repeated PokemonDisplayProto.Costume costumes_allowed = 4;
}

message BelugaTransactionCompleteOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILED = 2;
		ERROR_INVALID_POKEMON_ID = 3;
		ERROR_POKEMON_DEPLOYED = 4;
		ERROR_POKEMON_NOT_ALLOWED = 5;
		ERROR_POKEMON_IS_BUDDY = 6;
		ERROR_INVALID_TRANSACTION_ID = 7;
		ERROR_MISSING_TRANSACTION_ID = 8;
	}

	Status status = 1;
	int32 candy_awarded = 2;
	LootProto loot_awarded = 3;
	BelugaBleFinalizeTransfer beluga_finalize_response = 4;
	int32 buckets_until_weekly_award = 5;
}

message BelugaTransactionCompleteProto {
	BelugaBleCompleteTransferRequestProto beluga_transfer = 1;
	bytes app_signature = 2;
	bytes firmware_signature = 3;
}

message BelugaTransactionStartOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILED = 2;
		ERROR_INVALID_POKEMON_ID = 3;
		ERROR_POKEMON_DEPLOYED = 4;
		ERROR_POKEMON_IS_EGG = 5;
		ERROR_POKEMON_IS_BUDDY = 6;
		ERROR_POKEMON_NOT_ALLOWED = 7;
		ERROR_INVALID_NONCE = 8;
		ERROR_TOO_MANY_POKEMON = 9;
		ERROR_NO_POKEMON_SPECIFIED = 10;
	}

	Status status = 1;
	BelugaBleTransferPrepProto beluga_transfer_prep = 2;
	bytes server_signature = 3;
}

message BelugaTransactionStartProto {
	repeated int64 pokemon_id = 1;
	string nonce = 2;
	string beluga_id = 3;
}

message BootTelemetry {
	float nearest_poi_distance = 1;
	int32 poi_within_one_km_count = 2;
}

message BootTime {
	enum BootPhase {
		UNDEFINED = 0;
		TIME_TO_MAP = 1;
		LOGO_SCREEN_TIME = 2;
		MAIN_SCENE_LOAD_TIME = 3;
		WAIT_FOR_AUTH = 4;
		INIT_REMOTE_CONFIG_VERSIONS = 5;
		INIT_BUNDLE_DIGEST = 6;
		INIT_GMT = 7;
		DOWNLOAD_I18N = 8;
		DOWNLOAD_GLOBAL_ASSETS = 9;
		REGISTER_PUSH_NOTIFICATION = 10;
		INITIALIZE_UPSIGHT = 11;
		INITIALIZE_CRITTERCISM = 12;
		LOGIN_VERSION_CHECK = 13;
		LOGIN_GET_PLAYER = 14;
		LOGIN_AUTHENTICATION = 15;
		MODAL_TIME = 16;
		INITIALIZE_ADJUST = 17;
	}

	PlatformMetricData duration = 1;
	BootPhase boot_phase = 2;
}

message BuddyActivityCategorySettings {
	BuddyActivityCategory activity_category = 1;
	int32 max_points_per_day = 2;
}

message BuddyActivitySettings {
	BuddyActivity activity = 1;
	BuddyActivityCategory activity_category = 2;
	int32 max_times_per_day = 3;
	int32 num_points_per_action = 4;
	int32 num_emotion_points_per_action = 5;
	int64 emotion_cooldown_duration_ms = 6;
}

message BuddyDataProto {
	message BuddyStoredStats {
		int64 window = 1;
		map<int32, float> buddy_stats = 2;
	}

	fixed64 buddy_pokemon_id = 1;
	int32 current_points_earned = 2;
	int32 highest_points_earned = 3;
	int64 last_reached_full_ms = 4;
	int64 last_groomed_ms = 5;
	int64 map_expiration_ms = 7;
	float km_candy_pending = 12;
	BuddyGiftProto buddy_gift_picked_up = 15;
	int32 current_emotion_points = 18;
	map<int32, DailyCounterProto> daily_activity_counters = 19;
	map<int32, DailyCounterProto> daily_category_counters = 20;
	BuddyStoredStats stats_today = 21;
	BuddyStoredStats stats_total = 22;
	map<int32, SouvenirProto> souvenirs_collected = 23;
	int32 current_hunger_points = 24;
	int64 interaction_expiration_ms = 25;
	int64 poffin_feeding_expiration_ms = 26;
	float last_affection_or_emotion_awarded_km = 27;
	int64 last_set_timestamp_ms = 28;
	int64 last_unset_timestamp_ms = 29;
	bool ditched = 30;
	PokemonDisplayProto pokemon_display = 31;
	bool hatched_from_egg = 32;
	string nickname = 33;
	int64 captured_s2_cell_id = 34;
	HoloPokemonId pokedex_entry_number = 35;
	int64 creation_timestamp_ms = 36;
	Item pokeball = 37;
	int32 num_days_spent_with_buddy = 38;
	string original_owner_nickname = 39;
	int64 traded_time_ms = 40;
	string attractive_poi_id = 41;
	int64 attractive_poi_time_generated = 42;
	int64 attractive_poi_cooldown_ms = 43;
	bool attractive_poi_visited = 44;
	int64 berry_cooldown_ms = 45;
	map<int32, int64> activity_emotion_last_increment_ms = 46;
	int64 window = 47;
	int64 last_fed_ms = 48;
	int32 last_window_buddy_on_map = 49;
	int32 last_window_fed_poffin = 50;
	int64 yatta_expiration_ms = 51;
	float hunger_points = 52;
}

message BuddyEmotionLevelSettings {
	BuddyEmotionLevel emotion_level = 1;
	int32 min_emotion_points_required = 2;
	BuddyAnimation emotion_animation = 3;
	int64 decay_prevention_duration_ms = 4;
}

message BuddyEncounterCameoSettings {
	float buddy_wild_encounter_cameo_chance_percent = 1;
	float buddy_quest_encounter_cameo_chance_percent = 2;
	float buddy_raid_encounter_cameo_chance_percent = 3;
	float buddy_invasion_encounter_cameo_chance_percent = 4;
	bool buddy_on_map_required = 5;
}

message BuddyEncounterHelpTelemetry {
	int32 pokemon_id = 1;
	int32 cp = 2;
	string encounter_type = 3;
	bool ar_classic_enabled = 4;
	bool ar_plus_enabled = 5;
	EncounterType encounter = 6;
}

message BuddyFeedingOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_BUDDY_NOT_VALID = 2;
		FAILED_INSUFFICIENT_RESOURCES = 3;
		FAILED_INVALID_ITEM_REQUIREMENT = 4;
		FAILED_BUDDY_STILL_FULL_FROM_POFFIN = 5;
	}

	Result result = 1;
	BuddyObservedData observed_data = 3;
	BuddyStatsShownHearts.BuddyShownHeartType shown_hearts = 4;
}

message BuddyFeedingProto {
	Item item = 1;
	int32 count = 2;
}

message BuddyGiftProto {
	SouvenirProto souvenir = 1;
	LootProto loot_proto = 2;
}

message BuddyGlobalSettingsProto {
	int32 buddy_v2_min_player_level = 1;
	int32 buddy_multiplayer_min_player_level = 2;
	bool enable_monodepth = 3;
	repeated string monodepth_devices = 4;
	int32 lobby_status_message_duration_ms = 5;
	int32 mapping_instruction_duration_ms = 6;
	int32 group_photo_leader_tracking_interval_ms = 7;
	int32 group_photo_countdown_ms = 8;
	int32 lobby_timeout_ms = 9;
	bool enable_wallaby_telemetry = 10;
	int32 mapping_hint_timeout_ms = 11;
	int32 group_photo_simultaneous_shots = 12;
	bool plfe_auth_tokens_enabled = 13;
	int32 group_photo_shot_interval_ms = 14;
	string arbe_endpoint_url = 15;
	bool buddy_on_map_required_to_open_gifts = 16;
}

message BuddyHistoryData {
	fixed64 pokemon_id = 1;
	HoloPokemonId pokedex_id = 2;
	PokemonDisplayProto pokemon_display = 3;
	bool hatched_from_egg = 4;
	string nickname = 5;
	int64 captured_s2_cell_id = 6;
	int64 creation_timestamp_ms = 7;
	Item pokeball = 8;
	BuddyStats total_stats = 9;
	int32 current_points_earned = 10;
	int64 last_set_timestamp_ms = 11;
	int64 last_unset_timestamp_ms = 12;
	int32 num_days_spent_with_buddy = 13;
	bool ditched = 14;
	string original_owner_nickname = 15;
	int64 traded_time_ms = 16;
	map<int32, SouvenirProto> souvenirs_collected = 17;
	float km_candy_progress = 18;
}

message BuddyHungerSettings {
	int32 num_hunger_points_required_for_full = 1;
	int32 decay_points_per_bucket = 2;
	int64 milliseconds_per_bucket = 3;
	int64 cooldown_duration_ms = 4;
	int64 decay_duration_after_full_ms = 5;
}

message BuddyInteractionSettings {
	repeated Item feed_item_whitelist = 1;
	repeated Item care_item_whitelist = 2;
}

message BuddyLevelSettings {
	enum BuddyTrait {
		UNSET = 0;
		MAP_DEPLOY = 1;
		ENCOUNTER_CAMEO = 2;
		EMOTION_INDICATOR = 3;
		PICK_UP_CONSUMABLES = 4;
		PICK_UP_SOUVENIRS = 5;
		FIND_ATTRACTIVE_POIS = 6;
		BEST_BUDDY_ASSET = 7;
		CP_BOOST = 8;
	}

	BuddyLevel level = 1;
	int32 min_non_cumulative_points_required = 2;
	repeated BuddyTrait unlocked_traits = 3;
}

message BuddyMapEmotionCheckTelemetry {
	int32 pokemon_id = 1;
	int32 current_emotion_points = 2;
	int32 current_affection_points = 3;
}

message BuddyMapOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_BUDDY_NOT_VALID = 2;
	}

	Result result = 1;
	int64 expiration_ms = 2;
	int64 applied_ms = 3;
	BuddyObservedData observed_data = 4;
}

message BuddyMapProto {
}

message BuddyMultiplayerConnectionFailedProto {
	int32 test_number = 1;
	int64 response_time = 2;
}

message BuddyMultiplayerConnectionSucceededProto {
	int32 test_number = 1;
	int64 response_time = 2;
}

message BuddyMultiplayerTimeToGetSessionProto {
	int32 test_number = 1;
	int64 time_to_get_session = 2;
}

message BuddyNotificationClickTelemetry {
	int32 notification_category = 1;
}

message BuddyObservedData {
	enum BuddyValidationResult {
		UNSET = 0;
		SUCCESS = 1;
		FAILED_BUDDY_NOT_SET = 2;
		FAILED_BUDDY_NOT_FOUND = 3;
		FAILED_BAD_BUDDY = 4;
		FAILED_BUDDY_V2_NOT_ENABLED = 5;
		FAILED_PLAYER_LEVEL_TOO_LOW = 6;
	}

	message BuddyFeedStats {
		int64 map_expiration_ms = 1;
		float pre_map_fullness_percentage = 2;
		int64 fullness_expiration_ms = 3;
		int64 poffin_expiration_ms = 4;
	}

	int32 current_points_earned = 1;
	BuddyStats total_stats = 3;
	BuddyGiftProto buddy_gift_picked_up = 6;
	int32 current_emotion_points = 7;
	BuddyValidationResult buddy_validation_result = 8;
	map<int32, SouvenirProto> souvenirs_collected = 9;
	BuddyStatsShownHearts today_stats_shown_hearts = 10;
	BuddyFeedStats buddy_feed_stats = 11;
	string attractive_poi_id = 12;
	int64 attractive_poi_expiration_time_ms = 13;
	int32 num_days_spent_with_buddy = 14;
}

message BuddyPettingOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_BUDDY_NOT_VALID = 2;
	}

	Result result = 1;
	BuddyObservedData observed_data = 2;
	BuddyStatsShownHearts.BuddyShownHeartType shown_hearts = 3;
}

message BuddyPettingProto {
}

message BuddyPokemonLogEntry {
	enum Result {
		UNSET = 0;
		CANDY_FOUND = 1;
	}

	Result result = 1;
	HoloPokemonId pokemon_type = 2;
	int32 amount = 3;
	PokemonDisplayProto pokemon_display = 4;
	fixed64 pokemon_id = 5;
}

message BuddyPokemonProto {
	fixed64 buddy_pokemon_id = 1;
	double start_km_walked = 2;
	double last_km_awarded = 3;
	DailyCounterProto daily_buddy_swaps = 4;
	int64 last_km_awarded_ms = 5;
	bool best_buddies_backfilled = 6;
}

message BuddyStats {
	float km_walked = 1;
	int32 berries_fed = 2;
	int32 communication = 3;
	int32 battles = 4;
	int32 photos = 5;
	int32 new_visits = 6;
}

message BuddyStatsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_BUDDY_NOT_VALID = 2;
	}

	Result result = 1;
	BuddyObservedData observed_data = 2;
}

message BuddyStatsProto {
}

message BuddyStatsShownHearts {
	enum BuddyShownHeartType {
		BUDDY_HEART_UNSET = 0;
		BUDDY_HEART_SINGLE = 1;
		BUDDY_HEART_DOUBLE = 2;
	}

	message BuddyShownHeartsList {
		repeated BuddyShownHeartType buddy_shown_heart_types = 1;
	}

	float buddy_affection_km_in_progress = 1;
	map<int32, BuddyShownHeartsList> buddy_shown_hearts_per_category = 2;
}

message BuddySwapSettings {
	int32 max_swaps_per_day = 1;
}

message BuddyWalkSettings {
	float km_required_per_affection_point = 1;
}

message CameraSettingsProto {
	string next_camera = 1;
	repeated CameraInterpolation interpolation = 2;
	repeated CameraTarget target_type = 3;
	repeated float ease_in_speed = 4;
	repeated float ease_out_speed = 5;
	repeated float duration_s = 6;
	repeated float wait_s = 7;
	repeated float transition_s = 8;
	repeated float angle_deg = 9;
	repeated float angle_offset_deg = 10;
	repeated float pitch_deg = 11;
	repeated float pitch_offset_deg = 12;
	repeated float roll_deg = 13;
	repeated float distance_m = 14;
	repeated float height_percent = 15;
	repeated float vert_ctr_ratio = 16;
}

message CancelCombatChallengeOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_CHALLENGE_STATE = 2;
		ERROR_CHALLENGE_NOT_FOUND = 3;
		ERROR_ALREADY_ACCEPTED = 4;
		ERROR_ALREADY_DECLINED = 5;
		ERROR_ALREADY_TIMEDOUT = 6;
		ERROR_ACCESS_DENIED = 7;
	}

	Result result = 1;
}

message CancelCombatChallengeProto {
	string challenge_id = 1;
}

message CancelMatchmakingOutProto {
	enum Result {
		UNSET = 0;
		SUCCESSFULLY_CANCELLED = 1;
		ERROR_ALREADY_MATCHED = 2;
		ERROR_PLAYER_NOT_FOUND = 3;
		ERROR_QUEUE_NOT_FOUND = 4;
	}

	Result result = 1;
}

message CancelMatchmakingProto {
	string queue_id = 1;
}

message CancelTradingOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FRIEND_NOT_FOUND = 3;
		ERROR_INVALID_PLAYER_ID = 4;
		ERROR_INVALID_STATE = 5;
		ERROR_STATE_HANDLER = 6;
	}

	Result result = 1;
	TradingProto trading = 2;
}

message CancelTradingProto {
	string player_id = 1;
}

message CaptureProbabilityProto {
	repeated Item pokeball_type = 1;
	repeated float capture_probability = 2;
	double reticle_difficulty_scale = 12;
}

message CaptureScoreProto {
	repeated HoloActivityType activity_type = 1;
	repeated int32 exp = 2;
	repeated int32 candy = 3;
	repeated int32 stardust = 4;
}

message CatchPokemonLogEntry {
	enum Result {
		UNSET = 0;
		POKEMON_CAPTURED = 1;
		POKEMON_FLED = 2;
		POKEMON_HATCHED = 3;
	}

	Result result = 1;
	int32 pokedex_number = 2;
	int32 combat_points = 3;
	fixed64 pokemon_id = 4;
	PokemonDisplayProto pokemon_display = 5;
}

message CatchPokemonOutProto {
	enum CaptureReason {
		UNSET = 0;
		DEFAULT = 1;
		ELEMENTAL_BADGE = 2;
		CRITICAL_CATCH = 3;
	}

	enum Status {
		CATCH_ERROR = 0;
		CATCH_SUCCESS = 1;
		CATCH_ESCAPE = 2;
		CATCH_FLEE = 3;
		CATCH_MISSED = 4;
	}

	Status status = 1;
	double miss_percent = 2;
	fixed64 captured_pokemon_id = 3;
	CaptureScoreProto scores = 4;
	CaptureReason capture_reason = 5;
	int32 display_pokedex_id = 6;
	int32 throws_remaining = 7;
	PokemonDisplayProto pokemon_display = 8;
}

message CatchPokemonProto {
	fixed64 encounter_id = 1;
	int32 pokeball = 2;
	double normalized_reticle_size = 3;
	string spawn_point_guid = 4;
	bool hit_pokemon = 5;
	double spin_modifier = 6;
	double normalized_hit_position = 7;
	ARPlusEncounterValuesProto ar_plus_values = 8;
}

message CatchPokemonQuestProto {
	repeated HoloPokemonId unique_pokemon_id = 1;
}

message CatchPokemonTelemetry {
	string status = 1;
	EncounterPokemonTelemetry encounter_pokemon_telemetry = 2;
	int32 balltype = 3;
	int32 hit_grade = 4;
	bool curve_ball = 5;
	double miss_percent = 6;
}

message ChangeArTelemetry {
	bool ar_enabled = 1;
	bool ar_plus_enabled = 2;
}

message ChangeTeamOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_SAME_TEAM = 2;
		ERROR_ITEM_NOT_IN_INVENTORY = 3;
		ERROR_WRONG_ITEM = 4;
		ERROR_UNKNOWN = 5;
	}

	Status status = 1;
	ClientPlayerProto updated_player = 2;
}

message ChangeTeamProto {
	Item item = 1;
	Team team = 2;
}

message CharacterDisplayProto {
	EnumWrapper.PokestopStyle style = 1;
	EnumWrapper.InvasionCharacter character = 2;
}

message CheckAwardedBadgesOutProto {
	bool success = 1;
	repeated HoloBadgeType awarded_badges = 2;
	repeated int32 awarded_badge_levels = 3;
	repeated string avatar_template_ids = 4;
}

message CheckAwardedBadgesProto {
}

message CheckChallengeOutProto {
	bool show_challenge = 1;
	string challenge_url = 2;
}

message CheckChallengeProto {
	bool debug_request = 1;
}

message CheckEncounterTrayInfoTelemetry {
	bool berry_tray_info = 1;
	bool ball_tray_info = 2;
}

message CheckPhotobombOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PHOTO_POKEMON_INVALID = 2;
		ERROR_UNKNOWN = 3;
	}

	Status status = 1;
	HoloPokemonId photobomb_pokemon_id = 2;
	PokemonDisplayProto photobomb_pokemon_display = 3;
	fixed64 encounter_id = 4;
	string uri = 5;
}

message CheckPhotobombProto {
	fixed64 photo_pokemon_id = 1;
}

message CheckSendGiftOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_DOES_NOT_EXIST = 3;
		ERROR_GIFT_NOT_AVAILABLE = 4;
		ERROR_GIFT_ALREADY_SENT_TODAY = 5;
		ERROR_PLAYER_HAS_UNOPENED_GIFT = 6;
	}

	Result result = 1;
}

message CheckSendGiftProto {
	string player_id = 1;
}

message CheckShareExRaidPassOutProto {
	ShareExRaidPassResult result = 1;
}

message CheckShareExRaidPassProto {
	string friend_id = 1;
	string fort_id = 2;
	int64 raid_seed = 3;
}

message ClaimCodenameRequestProto {
	string codename = 1;
	bool force = 2;
	bool generate_suggested_codenames = 3;
}

message ClaimVsSeekerRewardsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_REDEEM_POKEMON = 2;
		ERROR_PLAYER_NOT_ENOUGH_VICTORIES = 3;
		ERROR_REWARD_ALREADY_CLAIMED = 4;
		ERROR_INVENTORY_FULL = 5;
	}

	Result result = 1;
	LootProto rewards = 2;
}

message ClaimVsSeekerRewardsProto {
	int32 win_index = 1;
}

message ClientDialogueLineProto {
	string text = 1;
	EnumWrapper.InvasionCharacter character = 2;
	EnumWrapper.InvasionCharacterExpression expression = 3;
}

message ClientFortModifierProto {
	Item modifier_type = 1;
	int64 expiration_time_ms = 2;
	string deploying_player_codename = 3;
}

message ClientGenderProto {
	float male_percent = 1;
	float female_percent = 2;
	float genderless_percent = 3;
}

message ClientGenderSettingsProto {
	HoloPokemonId pokemon = 1;
	ClientGenderProto gender = 2;
}

message ClientIncidentProto {
	string incident_id = 1;
	string fort_id = 2;
	string fort_name = 3;
	string pokestop_image_uri = 4;
	int32 current_step = 5;
	repeated ClientIncidentStepProto step = 6;
	PokestopIncidentDisplayProto completion_display = 7;
}

message ClientIncidentStepProto {
	ClientInvasionBattleStepProto invasion_battle = 1;
	ClientInvasionEncounterStepProto invasion_encounter = 2;
	ClientPokestopNpcDialogueStepProto pokestop_dialogue = 3;
}

message ClientInvasionBattleStepProto {
	EnumWrapper.InvasionCharacter character = 1;
}

message ClientInvasionEncounterStepProto {
}

message ClientMapCellProto {
	uint64 s2_cell_id = 1;
	int64 as_of_time_ms = 2;
	repeated PokemonFortProto fort = 3;
	repeated ClientSpawnPointProto spawn_point = 4;
	repeated WildPokemonProto wild_pokemon = 5;
	repeated string deleted_object = 6;
	bool is_truncated_list = 7;
	repeated PokemonSummaryFortProto fort_summary = 8;
	repeated ClientSpawnPointProto decimated_spawn_point = 9;
	repeated MapPokemonProto catchable_pokemon = 10;
	repeated NearbyPokemonProto nearby_pokemon = 11;
}

message ClientPerformanceSettingsProto {
	bool enable_local_disk_caching = 1;
	int32 max_number_local_battle_parties = 2;
	bool multi_pokemon_battle_party_select = 3;
	bool use_whole_match_for_filter_key = 4;
}

message ClientPlayerProto {
	int64 creation_time_ms = 1;
	string name = 2;
	int32 team = 5;
	repeated TutorialCompletion tutorial_complete = 7;
	PlayerAvatarProto player_avatar_proto = 8;
	int32 max_pokemon_storage = 9;
	int32 max_item_storage = 10;
	DailyBonusProto daily_bonus_proto = 11;
	EquippedBadgeProto equipped_badge_proto = 12;
	ContactSettingsProto contact_settings_proto = 13;
	repeated CurrencyQuantityProto currency_balance = 14;
	int32 remaining_codename_claims = 15;
	BuddyPokemonProto buddy_pokemon_proto = 16;
	int64 battle_lockout_end_ms = 17;
	PlayerAvatarProto secondary_player_avatar_proto = 18;
	bool name_is_blacklisted = 19;
	SocialPlayerSettingsProto social_player_settings = 20;
	CombatPlayerPreferencesProto combat_player_preferences = 21;
	string player_support_id = 22;
	TeamChangeInfoProto team_change_info = 23;
	repeated HoloPokemonId consumed_eevee_easter_eggs = 24;
	CombatLogProto combat_log = 25;
	int64 time_zone_offset_ms = 26;
	BuddyObservedData buddy_observed_data = 27;
	string helpshift_user_id = 28;
}

message ClientPokestopNpcDialogueStepProto {
	repeated ClientDialogueLineProto dialogue_line = 1;
}

message ClientQuestProto {
	QuestProto quest = 1;
	QuestDisplayProto quest_display = 2;
}

message ClientSpawnPointProto {
	double latitude = 2;
	double longitude = 3;
}

message ClientVersionProto {
	string min_version = 1;
}

message CodenameResultProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		CODENAME_NOT_AVAILABLE = 2;
		CODENAME_NOT_VALID = 3;
		CURRENT_OWNER = 4;
		CODENAME_CHANGE_NOT_ALLOWED = 5;
	}

	string codename = 1;
	string user_message = 2;
	bool is_assignable = 3;
	Status status = 4;
	ClientPlayerProto updated_player = 5;
	repeated string suggested_codenames = 6;
}

message CollectDailyBonusOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
		TOO_SOON = 3;
	}

	Result result = 1;
}

message CollectDailyBonusProto {
}

message CollectDailyDefenderBonusOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
		TOO_SOON = 3;
		NO_DEFENDERS = 4;
	}

	Result result = 1;
	repeated string currency_type = 2;
	repeated int32 currency_awarded = 3;
	int32 num_defenders = 4;
}

message CollectDailyDefenderBonusProto {
}

message CombatActionProto {
	enum ActionType {
		UNSET = 0;
		ATTACK = 1;
		SPECIAL_ATTACK = 2;
		SPECIAL_ATTACK_2 = 3;
		MINIGAME_OFFENSIVE_FINISH = 4;
		MINIGAME_DEFENSIVE_START = 5;
		MINIGAME_DEFENSIVE_FINISH = 6;
		FAINT = 7;
		CHANGE_POKEMON = 8;
		QUICK_SWAP_POKEMON = 9;
	}

	ActionType type = 1;
	int32 action_start_turn = 3;
	int32 duration_turns = 5;
	int32 attacker_index = 6;
	int32 target_index = 7;
	fixed64 active_pokemon_id = 8;
	fixed64 target_pokemon_id = 14;
	float minigame_score = 15;
	int32 move = 16;
}

message CombatBaseStatsProto {
	int32 total_battles = 1;
	int32 wins = 2;
	float rating = 3;
}

message CombatChallengeGlobalSettingsProto {
	FriendshipLevelMilestone distance_check_override_friendship_level = 1;
	int32 get_combat_challenge_polling_interval_sec = 2;
	bool enable_downstream_dispatch = 3;
	bool enable_challenge_notifications = 4;
}

message CombatChallengeProto {
	enum CombatChallengeState {
		UNSET = 0;
		CREATED = 1;
		OPENED = 2;
		CANCELLED = 3;
		ACCEPTED = 4;
		DECLINED = 5;
		READY = 6;
		TIMEOUT = 7;
	}

	message ChallengePlayer {
		string player_id = 1;
		PlayerAvatarProto player_avatar = 2;
		int64 combat_player_s2_cell_id = 3;
		repeated fixed64 attacking_pokemon_id = 4;
		PlayerPublicProfileProto public_profile = 5;
	}

	string challenge_id = 1;
	CombatType type = 2;
	string combat_league_template_id = 3;
	ChallengePlayer challenger = 5;
	ChallengePlayer opponent = 6;
	CombatChallengeState state = 7;
	int64 created_timestamp_ms = 8;
	string combat_id = 10;
	int64 expiration_timestamp_ms = 19;
}

message CombatCompetitiveSeasonSettingsProto {
	repeated uint64 season_end_time_timestamp = 1;
	float rating_adjustment_percentage = 2;
	float ranking_adjustment_percentage = 3;
}

message CombatDefensiveInputChallengeSettings {
	float full_rotations_for_max_score = 1;
}

message CombatFriendRequestOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_COMBAT_NOT_FOUND = 2;
		ERROR_COMBAT_INCOMPLETE = 3;
		ERROR_PLAYER_NOT_IN_COMBAT = 4;
		ERROR_SOCIAL_RPC = 5;
	}

	Result result = 1;
}

message CombatFriendRequestProto {
	string combat_id = 1;
}

message CombatGlobalSettingsProto {
	bool enable_combat = 1;
	int32 maximum_daily_rewarded_battles = 2;
	bool enable_combat_stat_stages = 3;
	uint32 minimum_player_level = 4;
	int32 maximum_daily_npc_rewarded_battles = 5;
	int32 active_combat_update_interval_ms = 6;
	int32 waiting_for_player_update_interval_ms = 7;
	int32 ready_for_battle_update_interval_ms = 8;
	int32 pre_move_submit_window_ms = 9;
	int32 post_move_submit_window_ms = 10;
	bool enable_sockets = 11;
	bool enable_spin_minigame = 12;
	bool enable_quick_swap_v2 = 13;
	bool deprecated_vs_seeker_setting = 14;
	int32 vs_seeker_walking_dist_poll_duration_ms = 15;
	int32 vs_seeker_player_min_level = 16;
	int32 matchmaking_poll_duration_ms = 17;
	bool enable_particle_minigame = 18;
	bool enable_vs_seeker_upgrade_iap = 19;
	bool enable_flyout_animations = 20;
	bool enable_battle_hub = 21;
	int32 matchmaking_timeout_duration_ms = 22;
	int64 planned_downtime_timestamp_ms = 23;
}

message CombatHubEntranceTelemetry {
	CombatHubEntranceTelemetryIds combat_hub_telemetry_id = 1;
}

message CombatLeagueProto {
	enum ConditionType {
		UNSET = 0;
		WITH_POKEMON_CP_LIMIT = 1;
		WITH_PLAYER_LEVEL = 2;
		WITH_POKEMON_TYPE = 3;
		WITH_POKEMON_CATEGORY = 4;
		WITH_UNIQUE_POKEMON = 5;
		POKEMON_WHITELIST = 6;
		POKEMON_BANLIST = 7;
	}

	enum LeagueType {
		NONE = 0;
		STANDARD = 1;
		PREMIER = 2;
	}

	message PokemonBanlist {
		string name = 1;
		repeated PokemonWithForm pokemon = 2;
	}

	message PokemonConditionProto {
		ConditionType type = 1;
		WithPokemonCpLimitProto with_pokemon_cp_limit = 2;
		WithPokemonTypeProto with_pokemon_type = 3;
		WithPokemonCategoryProto with_pokemon_category = 4;
		PokemonWhitelist pokemon_whitelist = 5;
		PokemonBanlist pokemon_banlist = 6;
	}

	message PokemonWhitelist {
		string name = 1;
		repeated PokemonWithForm pokemon = 2;
	}

	message PokemonWithForm {
		HoloPokemonId id = 1;
		PokemonDisplayProto.Form form = 2;
	}

	message UnlockConditionProto {
		ConditionType type = 1;
		int32 min_pokemon_count = 2;
		WithPlayerLevelProto with_player_level = 3;
		WithPokemonCpLimitProto with_pokemon_cp_limit = 4;
		WithPokemonTypeProto with_pokemon_type = 5;
		WithPokemonCategoryProto with_pokemon_category = 6;
		PokemonWhitelist pokemon_whitelist = 7;
		PokemonBanlist pokemon_banlist = 8;
	}

	string title = 1;
	bool enabled = 2;
	repeated UnlockConditionProto unlock_condition = 3;
	repeated PokemonConditionProto pokemon_condition = 4;
	string icon_url = 5;
	int32 pokemon_count = 6;
	repeated HoloPokemonId banned_pokemon = 7;
	HoloBadgeType badge_type = 8;
	int32 minigame_defense_chance_limit = 9;
	string battle_party_combat_league_template_id = 10;
	LeagueType league_type = 11;
	string border_color_hex = 12;
}

message CombatLeagueSettingsProto {
	repeated string combat_league_template_id = 1;
}

message CombatLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	CombatPlayerFinishState finish_state = 2;
	LootProto rewards = 3;
	string opponent = 4;
	string combat_league_template_id = 5;
	string npc_template_id = 6;
}

message CombatLogProto {
	CombatSeasonResult lifetime_results = 1;
	CombatSeasonResult current_season_results = 2;
	repeated VsSeekerBattleResult current_vs_seeker_set_results = 4;
	CombatSeasonResult previous_season_results = 5;
}

message CombatMinigameTelemetry {
	enum MinigameCombatType {
		UNSET = 0;
		PVP = 1;
		PVE = 2;
	}

	MinigameCombatType combat_type = 1;
	HoloPokemonType move_type = 2;
	float score = 3;
}

message CombatMoveSettingsProto {
	message CombatMoveBuffsProto {
		int32 attacker_attack_stat_stage_change = 1;
		int32 attacker_defense_stat_stage_change = 2;
		int32 target_attack_stat_stage_change = 3;
		int32 target_defense_stat_stage_change = 4;
		float buff_activation_chance = 5;
	}

	HoloPokemonMove unique_id = 1;
	HoloPokemonType type = 2;
	float power = 3;
	string vfx_name = 4;
	int32 duration_turns = 5;
	int32 energy_delta = 6;
	CombatMoveBuffsProto buffs = 7;
}

message CombatNpcPersonalityProto {
	string personality_name = 1;
	float super_effective_chance = 2;
	float special_chance = 3;
	float defensive_minimum_score = 4;
	float defensive_maximum_score = 5;
	float offensive_minimum_score = 6;
	float offensive_maximum_score = 7;
}

message CombatNpcTrainerProto {
	string trainer_name = 1;
	string combat_league_template_id = 2;
	string combat_personality_id = 3;
	string win_loot_table_id = 4;
	string lose_loot_table_id = 5;
	PlayerAvatarProto avatar = 7;
	repeated NpcPokemonProto available_pokemon = 8;
	string trainer_title = 9;
	string trainer_quote = 10;
	string icon_url = 11;
	string backdrop_image_bundle = 12;
}

message CombatOffensiveInputChallengeSettings {
	float score_per_tap = 1;
	float score_decay_per_second = 2;
	float max_score = 3;
	float high_score_additional_decay_per_second = 4;
	float max_time_additional_decay_per_second = 5;
}

message CombatPlayerPreferencesProto {
	bool friends_combat_opt_out = 1;
	bool nearby_combat_opt_in = 2;
}

message CombatPlayerProfileProto {
	message Location {
		double lat_degree = 1;
		double lng_degree = 2;
	}

	string player_id = 1;
	PlayerPublicProfileProto public_profile = 2;
	repeated string combat_league_template_id = 3;
	fixed64 buddy_pokemon_id = 4;
	Location location = 5;
	CombatPlayerPreferencesProto combat_player_preferences = 6;
}

message CombatProto {
	enum CombatState {
		UNSET = 0;
		WAITING_FOR_PLAYERS = 1;
		READY = 2;
		ACTIVE = 3;
		SPECIAL_ATTACK = 4;
		WAITING_FOR_CHANGE_POKEMON = 5;
		FINISHED = 6;
		PLAYER_QUIT = 7;
		TIMEOUT = 8;
	}

	message CombatPlayerProto {
		PlayerPublicProfileProto public_profile = 1;
		CombatPokemonProto active_pokemon = 2;
		repeated CombatPokemonProto reserve_pokemon = 3;
		repeated CombatPokemonProto fainted_pokemon = 4;
		CombatActionProto current_action = 5;
		bool lockstep_ack = 6;
		int32 last_updated_turn = 7;
		CombatActionProto minigame_action = 8;
		int64 quick_swap_available_ms = 9;
		int32 minigame_defense_chances_left = 10;
		string combat_npc_personality_id = 11;
		int32 times_combat_actions_called = 12;
	}

	message CombatPokemonProto {
		fixed64 pokemon_id = 1;
		int32 pokedex_id = 2;
		int32 cp = 3;
		float cp_multiplier = 4;
		int32 stamina = 5;
		int32 max_stamina = 6;
		int32 move1 = 7;
		int32 move2 = 8;
		int32 move3 = 9;
		int32 energy = 10;
		PokemonDisplayProto pokemon_display = 11;
		int32 individual_attack = 12;
		int32 individual_defense = 13;
		int32 individual_stamina = 14;
		int32 attack_stat_stage = 15;
		int32 defense_stat_stage = 16;
		int32 battles_won = 17;
		int32 battles_lost = 18;
		string nickname = 19;
		Item pokeball = 20;
	}

	CombatState combat_state = 1;
	string combat_id = 2;
	CombatPlayerProto player = 3;
	CombatPlayerProto opponent = 4;
	int64 combat_start_ms = 5;
	int64 combat_end_ms = 6;
	int64 server_ms = 7;
	int32 current_turn = 8;
	int64 turn_start_ms = 9;
	int64 minigame_end_ms = 10;
	int64 minigame_submit_score_end_ms = 11;
	int64 change_pokemon_end_ms = 12;
	int64 quick_swap_cooldown_duration_ms = 13;
	int64 state_change_delay_until_turn = 14;
}

message CombatRankingSettingsProto {
	message RankLevelProto {
		int32 rank_level = 1;
		int32 additional_total_battles_required = 2;
		int32 additional_wins_required = 3;
		int32 min_rating_required = 4;
	}

	repeated RankLevelProto rank_level = 1;
	RankLevelProto required_for_rewards = 2;
	int32 min_rank_to_display_rating = 3;
}

message CombatSeasonResult {
	int32 season = 1;
	int32 rank = 2;
	int32 total_battles = 3;
	int32 total_wins = 4;
	float rating = 5;
	int32 longest_win_streak = 6;
	int32 current_streak = 7;
	int64 stardust_earned = 8;
}

message CombatSettingsProto {
	float round_duration_seconds = 1;
	float turn_duration_seconds = 2;
	float minigame_duration_seconds = 3;
	float same_type_attack_bonus_multiplier = 4;
	float fast_attack_bonus_multiplier = 5;
	float charge_attack_bonus_multiplier = 6;
	float defense_bonus_multiplier = 7;
	float minigame_bonus_base_multiplier = 8;
	float minigame_bonus_variable_multiplier = 9;
	int32 max_energy = 10;
	float defender_minigame_multiplier = 11;
	float change_pokemon_duration_seconds = 12;
	float minigame_submit_score_duration_seconds = 13;
	float quick_swap_combat_start_available_seconds = 14;
	float quick_swap_cooldown_duration_seconds = 15;
	CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;
	CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;
	float charge_score_base = 18;
	float charge_score_nice = 19;
	float charge_score_great = 20;
	float charge_score_excellent = 21;
	int32 swap_animation_duration_turns = 22;
	int32 super_effective_flyout_duration_turns = 23;
	int32 not_very_effective_flyout_duration_turns = 24;
	int32 blocked_flyout_duration_turns = 25;
	int32 normal_effective_flyout_duration_turns = 26;
	int32 faint_animation_duration_turns = 27;
	int32 npc_swap_delay_turns = 28;
	int32 npc_charged_attack_delay_turns = 29;
	float shadow_pokemon_attack_bonus_multiplier = 30;
	float shadow_pokemon_defense_bonus_multiplier = 31;
	float purified_pokemon_attack_multiplier_vs_shadow = 32;
}

message CombatStatStageSettingsProto {
	int32 minimum_stat_stage = 1;
	int32 maximum_stat_stage = 2;
	repeated float attack_buff_multiplier = 3;
	repeated float defense_buff_multiplier = 4;
}

message CombatTypeProto {
	HoloPokemonType type = 1;
	float nice_level_threshold = 2;
	float great_level_threshold = 3;
	float excellent_level_threshold = 4;
}

message CompleteCompetitiveSeasonOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_HAS_NO_VS_SEEKER = 2;
		ERROR_REWARDS_ALREADY_COLLECTED = 3;
	}

	Result result = 1;
	LootProto loot_proto = 2;
	int32 new_rank = 3;
	float new_rating = 4;
	CombatSeasonResult last_season_result = 5;
	bool was_player_active = 6;
}

message CompleteCompetitiveSeasonProto {
}

message CompleteInvasionDialogueOutProto {
	InvasionStatus.Status status = 1;
}

message CompleteInvasionDialogueProto {
	IncidentLookupProto incident_lookup = 1;
	int32 step = 2;
}

message CompleteQuestLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	ClientQuestProto quest = 2;
	repeated QuestStampProto stamp = 3;
}

message CompleteQuestOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_QUEST_NOT_FOUND = 2;
		ERROR_QUEST_STILL_IN_PROGRESS = 3;
		ERROR_QUEST_ALREADY_COMPLETED = 4;
		ERROR_SUBQUEST_NOT_FOUND = 5;
		ERROR_SUBQUEST_STILL_IN_PROGRESS = 6;
		ERROR_SUBQUEST_ALREADY_COMPLETED = 7;
		ERROR_MULTIPART_STILL_IN_PROGRESS = 8;
		ERROR_MULTIPART_ALREADY_COMPLETED = 9;
		ERROR_REDEEM_COMPLETED_QUEST_STAMP_CARD_FIRST = 10;
		ERROR_INVENTORY_FULL = 11;
	}

	Status status = 1;
	ClientQuestProto quest = 2;
	repeated QuestStampProto stamp = 3;
}

message CompleteQuestPokemonEncounterLogEntry {
	enum Result {
		UNSET = 0;
		POKEMON_CAPTURED = 1;
		POKEMON_FLED = 2;
	}

	Result result = 1;
	int32 pokedex_number = 2;
	int32 combat_points = 3;
	fixed64 pokemon_id = 4;
	PokemonDisplayProto pokemon_display = 5;
	EncounterType encounter_type = 6;
}

message CompleteQuestProto {
	string quest_id = 1;
	string sub_quest_id = 2;
}

message CompleteQuestStampCardLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	repeated QuestRewardProto reward = 2;
}

message CompleteQuestStampCardOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_STILL_IN_PROGRESS = 2;
	}

	Status status = 1;
	repeated QuestRewardProto reward = 2;
}

message CompleteQuestStampCardProto {
}

message CompleteSnapshotSessionOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PHOTO_POKEMON_INVALID = 2;
		ERROR_UNKNOWN = 3;
	}

	Status status = 1;
}

message CompleteSnapshotSessionProto {
	fixed64 photo_pokemon_id = 1;
	int32 num_photos_taken = 2;
}

message CompleteVsSeekerAndRestartChargingOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_VS_SEEKER_NOT_FOUND = 2;
		ERROR_VS_SEEKER_ALREADY_STARTED_CHARGING = 3;
		ERROR_VS_SEEKER_ALREADY_FULLY_CHARGED = 4;
		ERROR_VS_SEEKER_PLAYER_IN_WRONG_SEASON = 5;
		ERROR_PLAYER_INVENTORY_FULL = 6;
		ERROR_PLAYER_HAS_UNCLAIMED_REWARDS = 7;
	}

	Result result = 1;
	VsSeekerAttributesProto vs_seeker = 2;
	LootProto loot_proto = 3;
	CombatSeasonResult current_season_result = 4;
	int32 previous_rank = 5;
	float previous_rating = 6;
	CombatBaseStatsProto stats_at_rank_start = 7;
	repeated string avatar_template_id_rewarded = 8;
}

message CompleteVsSeekerAndRestartChargingProto {
}

message ConfirmPhotobombOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PHOTOBOMB_NOT_FOUND = 2;
		ERROR_PHOTOBOMB_ALREADY_CONFIRMED = 3;
		ERROR_UNKNOWN = 4;
	}

	Status status = 1;
}

message ConfirmPhotobombProto {
	fixed64 encounter_id = 1;
}

message ConfirmTradingOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FRIEND_NOT_FOUND = 3;
		ERROR_INVALID_PLAYER_ID = 4;
		ERROR_INVALID_STATE = 5;
		ERROR_STATE_HANDLER = 6;
		ERROR_INVALID_POKEMON = 7;
		ERROR_INSUFFICIENT_PAYMENT = 8;
		ERROR_NO_PLAYER_POKEMON = 9;
		ERROR_NO_FRIEND_POKEMON = 10;
		ERROR_PLAYER_ALREADY_CONFIRMED = 11;
		ERROR_TRANSACTION_LOG_NOT_MATCH = 12;
		ERROR_TRADING_EXPIRED = 13;
		ERROR_TRANSACTION = 14;
		ERROR_DAILY_LIMIT_REACHED = 15;
	}

	Result result = 1;
	TradingProto trading = 2;
}

message ConfirmTradingProto {
	string player_id = 1;
	string transaction_log = 2;
}

message ContactSettingsProto {
	bool send_marketing_emails = 1;
	bool send_push_notifications = 2;
}

message CreateBuddyMultiplayerSessionOutProto {
	enum Result {
		CREATE_SUCCESS = 0;
		CREATE_BUDDY_NOT_SET = 1;
		CREATE_BUDDY_NOT_FOUND = 2;
		CREATE_BAD_BUDDY = 3;
		CREATE_BUDDY_V2_NOT_ENABLED = 4;
		CREATE_PLAYER_LEVEL_TOO_LOW = 5;
		CREATE_UNKNOWN_ERROR = 6;
		CREATE_U13_NO_PERMISSION = 7;
	}

	string plfe_session_id = 1;
	bytes arbe_join_token = 2;
	int64 generation_timestamp = 3;
	int32 max_players = 4;
	Result result = 5;
}

message CreateBuddyMultiplayerSessionProto {
}

message CreateCombatChallengeOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_CHALLENGE_STATE = 2;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 3;
		ERROR_ACCESS_DENIED = 4;
	}

	Result result = 1;
	CombatChallengeProto challenge = 2;
}

message CreateCombatChallengeProto {
	string challenge_id = 1;
}

message CurrencyQuantityProto {
	string currency_type = 1;
	int32 quantity = 2;
	int32 fiat_purchased_quantity = 3;
	string fiat_currency_type = 4;
	int64 fiat_currency_cost_e6 = 5;
}

message CurrentNewsProto {
	repeated NewsArticleProto news_articles = 1;
	string news_strings_url = 2;
	int64 last_updated_timestamp = 3;
}

message DailyBonusProto {
	int64 next_collect_timestamp_ms = 1;
	int64 next_defender_bonus_collect_timestamp_ms = 2;
}

message DailyBuddyAffectionQuestProto {
	DailyCounterProto daily_affection_counter = 1;
}

message DailyCounterProto {
	int64 window = 1;
	int32 count = 2;
}

message DailyEncounterGlobalSettingsProto {
	bool enabled = 1;
}

message DailyEncounterOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ENCOUNTER_NOT_AVAILABLE = 2;
		POKEMON_INVENTORY_FULL = 3;
	}

	Result result = 1;
	PokemonProto pokemon = 2;
	CaptureProbabilityProto capture_probability = 3;
	Item active_item = 4;
	int32 arplus_attempts_until_flee = 5;
}

message DailyEncounterProto {
	int64 encounter_id = 1;
	string encounter_location = 2;
}

message DailyQuestProto {
	int32 current_period_bucket = 1;
	int32 current_streak_count = 2;
}

message DailyQuestSettings {
	int32 buckets_per_day = 1;
	int32 streak_length = 2;
	float bonus_multiplier = 3;
	float streak_bonus_multiplier = 4;
	bool disable = 5;
}

message DailyStreaksProto {
	message StreakProto {
		QuestType quest_type = 1;
		int32 count = 2;
		int32 target = 3;
		int32 remaining_today = 4;
	}

	repeated StreakProto streaks = 1;
}

message DamagePropertyProto {
	bool super_effective_charge_move = 1;
	bool weather_boosted = 2;
}

message DaysWithARowQuestProto {
	int32 last_window = 1;
}

message DeclineCombatChallengeOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_CHALLENGE_STATE = 2;
		ERROR_CHALLENGE_NOT_FOUND = 3;
		ERROR_ALREADY_TIMEDOUT = 4;
		ERROR_ALREADY_CANCELLED = 5;
	}

	Result result = 1;
}

message DeclineCombatChallengeProto {
	string challenge_id = 1;
}

message DeclineExRaidPassLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	string friend_codename = 2;
}

message DeclineExRaidPassOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_EX_RAID_PASS_NOT_FOUND = 2;
		ERROR_UNKNOWN = 3;
	}

	Result result = 1;
}

message DeclineExRaidPassProto {
	string fort_id = 1;
	int64 raid_seed = 2;
}

message DeleteGiftFromInventoryOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_GIFT_DOES_NOT_EXIST = 3;
	}

	Result result = 1;
}

message DeleteGiftFromInventoryProto {
	repeated fixed64 giftbox_id = 1;
}

message DeleteGiftOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_INVALID_PLAYER_ID = 3;
		ERROR_FRIEND_NOT_FOUND = 4;
		ERROR_GIFT_DOES_NOT_EXIST = 5;
		ERROR_FRIEND_UPDATE = 6;
	}

	Result result = 1;
}

message DeleteGiftProto {
	string player_id = 1;
	fixed64 giftbox_id = 2;
}

message DeploymentTotalsProto {
	int32 times_fed = 1;
	int32 battles_won = 2;
	int32 battles_lost = 3;
	int64 deployment_duration_ms = 4;
}

message DeployPokemonTelemetry {
	int32 status = 1;
	PokemonTelemetry pokemon = 2;
	string gym_id = 3;
	int32 team = 4;
	int32 defender_count = 5;
}

message DeviceServiceToggleTelemetry {
	DeviceServiceTelemetryIds device_service_telemetry_id = 1;
	bool was_enabled = 2;
	bool was_subsequent = 3;
}

message DeviceSpecificationsTelemetry {
	int32 device_width = 1;
	int32 device_height = 2;
	int32 camera_width = 3;
	int32 camera_height = 4;
	float camera_focal_length_fx = 5;
	float camera_focal_length_fy = 6;
	int32 camera_refresh_rate = 7;
}

message DiskEncounterOutProto {
	enum Result {
		UNKNOWN = 0;
		SUCCESS = 1;
		NOT_AVAILABLE = 2;
		NOT_IN_RANGE = 3;
		ENCOUNTER_ALREADY_FINISHED = 4;
		POKEMON_INVENTORY_FULL = 5;
	}

	Result result = 1;
	PokemonProto pokemon = 2;
	CaptureProbabilityProto capture_probability = 3;
	Item active_item = 4;
	int32 arplus_attempts_until_flee = 5;
}

message DiskEncounterProto {
	int64 encounter_id = 1;
	string fort_id = 2;
	double player_lat_degrees = 3;
	double player_lng_degrees = 4;
	double gym_lat_degrees = 5;
	double gym_lng_degrees = 6;
}

message Distribution {
	message BucketOptions {
		message ExplicitBuckets {
			repeated int64 bounds = 1;
		}

		message ExponentialBuckets {
			int64 num_finite_buckets = 1;
			float growth_factor = 2;
			float scale = 3;
		}

		message LinearBuckets {
			int64 num_finite_buckets = 1;
			int64 width = 2;
			int64 offset = 3;
		}

		LinearBuckets linear_buckets = 1;
		ExponentialBuckets exponential_buckets = 2;
		ExplicitBuckets explicit_buckets = 3;
	}

	message ExplicitBuckets {
		repeated int64 bounds = 1;
	}

	message ExponentialBuckets {
		int64 num_finite_buckets = 1;
		float growth_factor = 2;
		float scale = 3;
	}

	message LinearBuckets {
		int64 num_finite_buckets = 1;
		int64 width = 2;
		int64 offset = 3;
	}

	message Range {
		int64 min = 1;
		int64 max = 2;
	}

	int64 count = 1;
	float mean = 2;
	double sum_of_squared_deviation = 3;
	Range range = 4;
	BucketOptions bucket_options = 5;
	repeated int64 bucket_counts = 6;
}

message DownloadUrlEntryProto {
	string asset_id = 1;
	string url = 2;
	int32 size = 3;
	fixed32 checksum = 4;
}

message DownloadUrlOutProto {
	repeated DownloadUrlEntryProto download_urls = 1;
}

message DownloadUrlRequestProto {
	repeated string asset_id = 1;
}

message DumbBeaconProto {
}

message EchoOutProto {
	string context = 1;
}

message EchoProto {
}

message EggIncubatorAttributesProto {
	EggIncubatorType incubator_type = 1;
	int32 uses = 2;
	float distance_multiplier = 3;
}

message EggIncubatorProto {
	string item_id = 1;
	Item item = 2;
	EggIncubatorType incubator_type = 3;
	int32 uses_remaining = 4;
	int64 pokemon_id = 5;
	double start_km_walked = 6;
	double target_km_walked = 7;
}

message EggIncubatorsProto {
	repeated EggIncubatorProto egg_incubator = 1;
}

message EnabledPokemonSettingsProto {
	message Range {
		int32 start = 1;
		int32 end = 2;
	}

	repeated Range enabled_pokemon_range = 3;
}

message EncounterOutProto {
	enum Background {
		PARK = 0;
		DESERT = 1;
	}

	enum Status {
		ENCOUNTER_ERROR = 0;
		ENCOUNTER_SUCCESS = 1;
		ENCOUNTER_NOT_FOUND = 2;
		ENCOUNTER_CLOSED = 3;
		ENCOUNTER_POKEMON_FLED = 4;
		ENCOUNTER_NOT_IN_RANGE = 5;
		ENCOUNTER_ALREADY_HAPPENED = 6;
		POKEMON_INVENTORY_FULL = 7;
	}

	WildPokemonProto pokemon = 1;
	Background background = 2;
	Status status = 3;
	CaptureProbabilityProto capture_probability = 4;
	Item active_item = 5;
	int32 arplus_attempts_until_flee = 6;
}

message EncounterPhotobombOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		NO_ENCOUNTER_AVAILABLE = 2;
		POKEMON_INVENTORY_FULL = 3;
		ERROR_UNKNOWN = 4;
	}

	Result result = 1;
	PokemonProto pokemon = 2;
	CaptureProbabilityProto capture_probability = 3;
	Item active_item = 4;
	int32 arplus_attempts_until_flee = 5;
}

message EncounterPhotobombProto {
	fixed64 encounter_id = 1;
	string encounter_location = 2;
}

message EncounterPokemonTelemetry {
	PokemonTelemetry pokemon = 1;
	string map_pokemon_type = 2;
	bool ar_enabled = 3;
	bool ar_plus_enabled = 4;
}

message EncounterProto {
	fixed64 encounter_id = 1;
	string spawnpoint_id = 2;
	double player_lat_degrees = 3;
	double player_lng_degrees = 4;
}

message EncounterSettingsProto {
	float spin_bonus_threshold = 1;
	float excellent_throw_threshold = 2;
	float great_throw_threshold = 3;
	float nice_throw_threshold = 4;
	int32 milestone_threshold = 5;
	bool ar_plus_mode_enabled = 6;
	float ar_close_proximity_threshold = 7;
	float ar_low_awareness_threshold = 8;
	float ar_close_proximity_multiplier = 9;
	float ar_awareness_penalty_threshold = 10;
	float ar_low_awareness_max_multiplier = 11;
	float ar_high_awareness_min_penalty_multiplier = 12;
	int32 ar_plus_attempts_until_flee_max = 13;
	int32 ar_plus_attempts_until_flee_infinite = 14;
	float escaped_bonus_multiplier_max = 15;
	float escaped_bonus_multiplier_by_excellent_throw = 16;
	float escaped_bonus_multiplier_by_great_throw = 17;
	float escaped_bonus_multiplier_by_nice_throw = 18;
}

message EncounterTutorialCompleteOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_POKEMON = 2;
	}

	Result result = 1;
	PokemonProto pokemon = 2;
	CaptureScoreProto scores = 3;
}

message EncounterTutorialCompleteProto {
	int32 pokedex_id = 1;
}

message EnumWrapper {
	enum CharacterCategory {
		UNSET = 0;
		TEAM_LEADER = 1;
		GRUNT = 2;
		ARLO = 3;
		CLIFF = 4;
		SIERRA = 5;
		GIOVANNI = 6;
	}

	enum InvasionCharacter {
		CHARACTER_UNSET = 0;
		CHARACTER_BLANCHE = 1;
		CHARACTER_CANDELA = 2;
		CHARACTER_SPARK = 3;
		CHARACTER_GRUNT_MALE = 4;
		CHARACTER_GRUNT_FEMALE = 5;
		CHARACTER_BUG_GRUNT_FEMALE = 6;
		CHARACTER_BUG_GRUNT_MALE = 7;
		CHARACTER_DARKNESS_GRUNT_FEMALE = 8;
		CHARACTER_DARKNESS_GRUNT_MALE = 9;
		CHARACTER_DARK_GRUNT_FEMALE = 10;
		CHARACTER_DARK_GRUNT_MALE = 11;
		CHARACTER_DRAGON_GRUNT_FEMALE = 12;
		CHARACTER_DRAGON_GRUNT_MALE = 13;
		CHARACTER_FAIRY_GRUNT_FEMALE = 14;
		CHARACTER_FAIRY_GRUNT_MALE = 15;
		CHARACTER_FIGHTING_GRUNT_FEMALE = 16;
		CHARACTER_FIGHTING_GRUNT_MALE = 17;
		CHARACTER_FIRE_GRUNT_FEMALE = 18;
		CHARACTER_FIRE_GRUNT_MALE = 19;
		CHARACTER_FLYING_GRUNT_FEMALE = 20;
		CHARACTER_FLYING_GRUNT_MALE = 21;
		CHARACTER_GRASS_GRUNT_FEMALE = 22;
		CHARACTER_GRASS_GRUNT_MALE = 23;
		CHARACTER_GROUND_GRUNT_FEMALE = 24;
		CHARACTER_GROUND_GRUNT_MALE = 25;
		CHARACTER_ICE_GRUNT_FEMALE = 26;
		CHARACTER_ICE_GRUNT_MALE = 27;
		CHARACTER_METAL_GRUNT_FEMALE = 28;
		CHARACTER_METAL_GRUNT_MALE = 29;
		CHARACTER_NORMAL_GRUNT_FEMALE = 30;
		CHARACTER_NORMAL_GRUNT_MALE = 31;
		CHARACTER_POISON_GRUNT_FEMALE = 32;
		CHARACTER_POISON_GRUNT_MALE = 33;
		CHARACTER_PSYCHIC_GRUNT_FEMALE = 34;
		CHARACTER_PSYCHIC_GRUNT_MALE = 35;
		CHARACTER_ROCK_GRUNT_FEMALE = 36;
		CHARACTER_ROCK_GRUNT_MALE = 37;
		CHARACTER_WATER_GRUNT_FEMALE = 38;
		CHARACTER_WATER_GRUNT_MALE = 39;
		CHARACTER_PLAYER_TEAM_LEADER = 40;
		CHARACTER_EXECUTIVE_CLIFF = 41;
		CHARACTER_EXECUTIVE_ARLO = 42;
		CHARACTER_EXECUTIVE_SIERRA = 43;
		CHARACTER_GIOVANNI = 44;
		CHARACTER_DECOY_GRUNT_MALE = 45;
		CHARACTER_DECOY_GRUNT_FEMALE = 46;
		CHARACTER_GHOST_GRUNT_FEMALE = 47;
		CHARACTER_GHOST_GRUNT_MALE = 48;
		CHARACTER_ELECTRIC_GRUNT_FEMALE = 49;
		CHARACTER_ELECTRIC_GRUNT_MALE = 50;
	}

	enum InvasionCharacterExpression {
		EXPRESSION_UNSET = 0;
		PLACEHOLDER_1 = 1;
		PLACEHOLDER_2 = 2;
		PLACEHOLDER_3 = 3;
		PLACEHOLDER_4 = 4;
	}

	enum PokestopStyle {
		POKESTOP_NORMAL = 0;
		POKESTOP_ROCKET_INVASION = 1;
		POKESTOP_ROCKET_VICTORY = 2;
	}

}

message EquipBadgeOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		COOLDOWN_ACTIVE = 2;
		NOT_QUALIFIED = 3;
	}

	Result result = 1;
	EquippedBadgeProto equipped = 2;
}

message EquipBadgeProto {
	HoloBadgeType badge = 1;
}

message EquippedBadgeProto {
	HoloBadgeType equipped_badge = 1;
	int32 level = 2;
	int64 next_equip_change_allowed_timestamp_ms = 3;
}

message EquippedBadgeSettingsProto {
	int64 equip_badge_cooldown_ms = 1;
	repeated float catch_probability_bonus = 2;
	repeated float flee_probability_bonus = 3;
}

message EventBadgeSettingsProto {
	int64 valid_from_ms = 1;
	int64 valid_to_ms = 2;
	repeated HoloBadgeType mutually_exclusive_badges = 3;
}

message EventInfoProto {
	string image_url = 1;
	string icon_url = 2;
	string name_key = 3;
}

message EventSectionProto {
	enum IconType {
		UNSET = 0;
		ADVENTURE_SYNC = 1;
		BUDDY = 2;
		CANDY_GENERAL = 3;
		EGG = 4;
		EGG_INCUBATOR = 5;
		EVENT_MOVE = 6;
		EVOLUTION = 7;
		FIELD_RESEARCH = 8;
		FRIENDSHIP = 9;
		GIFT = 10;
		INCENSE = 11;
		LUCKY_EGG = 12;
		LURE_MODULE = 13;
		PHOTOBOMB = 14;
		POKESTOP = 15;
		RAID = 16;
		RAID_PASS = 17;
		SPAWN_UNKNOWN = 18;
		STAR_PIECE = 19;
		STARDUST = 20;
		TEAM_ROCKET = 21;
		TRADE = 22;
		TRANSFER_CANDY = 23;
		BATTLE = 24;
		XP = 25;
		SHOP = 26;
	}

	message BonusBoxProto {
		enum IconType {
			UNSET = 0;
			ADVENTURE_SYNC = 1;
			BUDDY = 2;
			CANDY_GENERAL = 3;
			EGG = 4;
			EGG_INCUBATOR = 5;
			EVENT_MOVE = 6;
			EVOLUTION = 7;
			FIELD_RESEARCH = 8;
			FRIENDSHIP = 9;
			GIFT = 10;
			INCENSE = 11;
			LUCKY_EGG = 12;
			LURE_MODULE = 13;
			PHOTOBOMB = 14;
			POKESTOP = 15;
			RAID = 16;
			RAID_PASS = 17;
			SPAWN_UNKNOWN = 18;
			STAR_PIECE = 19;
			STARDUST = 20;
			TEAM_ROCKET = 21;
			TRADE = 22;
			TRANSFER_CANDY = 23;
			BATTLE = 24;
			XP = 25;
			SHOP = 26;
		}

		string text = 1;
		IconType icon_type = 2;
	}

	string event_name = 1;
	GetLocalTimeOutProto.LocalTimeProto end_time = 3;
	string ref_news_id = 4;
	repeated BonusBoxProto bonus_boxes = 5;
}

message EventSettingsProto {
	repeated string condolence_ribbon_country = 1;
	bool enable_event_link = 2;
	bool enable_event_link_for_children = 3;
	string event_webtoken_server_url = 4;
	bool enable_event_lnt = 5;
	string event_lnt_url = 6;
}

message EvolutionBranchProto {
	HoloPokemonId evolution = 1;
	Item evolution_item_requirement = 2;
	int32 candy_cost = 3;
	float km_buddy_distance_requirement = 4;
	PokemonDisplayProto.Form form = 5;
	PokemonDisplayProto.Gender gender_requirement = 6;
	Item lure_item_requirement = 8;
	bool must_be_buddy = 9;
	bool only_daytime = 10;
	bool only_nighttime = 11;
	int32 priority = 12;
	bool no_candy_cost_via_trade = 13;
}

message EvolutionV2SettingsProto {
	bool is_enabled = 1;
}

message EvolveIntoPokemonQuestProto {
	repeated HoloPokemonId unique_pokemon_id = 1;
}

message EvolvePokemonOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		FAILED_POKEMON_MISSING = 2;
		FAILED_INSUFFICIENT_RESOURCES = 3;
		FAILED_POKEMON_CANNOT_EVOLVE = 4;
		FAILED_POKEMON_IS_DEPLOYED = 5;
		FAILED_INVALID_ITEM_REQUIREMENT = 6;
	}

	Result result = 1;
	PokemonProto evolved_pokemon = 2;
	int32 exp_awarded = 3;
	int32 candy_awarded = 4;
}

message EvolvePokemonProto {
	fixed64 pokemon_id = 1;
	Item evolution_item_requirement = 2;
	HoloPokemonId target_pokemon_id = 3;
	PokemonDisplayProto.Form target_pokemon_form = 4;
	bool use_special = 5;
}

message EvolvePokemonTelemetry {
	PokemonTelemetry pokemon = 1;
	PokemonTelemetry evolved_pokemon = 2;
}

message ExclusiveRaidCancellationProto {
	string fort_id = 1;
	int64 start_time_ms = 2;
	int64 end_time_ms = 3;
	string image_url = 4;
	double latitude = 5;
	double longitude = 6;
	string gym_name = 7;
	repeated LootItemProto rewards = 8;
}

message ExclusiveTicketInfoProto {
	int64 raid_seed = 1;
	string fort_id = 2;
	int64 start_time_ms = 4;
	int64 end_time_ms = 5;
	string image_url = 6;
	double latitude = 7;
	double longitude = 8;
	string gym_name = 9;
	int64 spawn_time_ms = 10;
	bool is_cancelled = 11;
	PokemonProto raid_pokemon = 12;
	SharedExclusiveTicketTrainerInfo inviter = 13;
	SharedExclusiveTicketTrainerInfo invitee = 14;
}

message ExperienceBoostAttributesProto {
	float xp_multiplier = 1;
	int32 boost_duration_ms = 2;
}

message ExRaidSettingsProto {
	FriendshipLevelMilestone minimum_ex_raid_share_level = 1;
}

message FavoritePokemonTelemetry {
	PokemonTelemetry pokemon = 1;
	bool favored = 2;
}

message FeedPokemonTelemetry {
	int32 status = 1;
	PokemonTelemetry pokemon = 2;
	string gym_id = 3;
	int32 team = 4;
	int32 defender_count = 5;
	int32 motivation = 6;
	int32 cp_now = 7;
}

message FestivalSettingsProto {
	enum FestivalType {
		NONE = 0;
		HALLOWEEN = 1;
		HOLIDAY = 2;
	}

	FestivalType festival_type = 1;
	string key = 2;
	string vector = 3;
}

message FetchAllNewsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		NO_NEWS_FOUND = 2;
	}

	Result result = 1;
	CurrentNewsProto current_news = 2;
}

message FetchAllNewsProto {
}

message FitnessRewardsLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	LootProto rewards = 2;
	double distance_walked_km = 3;
}

message FoodAttributesProto {
	repeated HoloItemEffect item_effect = 1;
	repeated float item_effect_percent = 2;
	float growth_percent = 3;
	float berry_multiplier = 4;
	float remote_berry_multiplier = 5;
	int32 num_buddy_affection_points = 6;
	int64 map_duration_ms = 7;
	int64 active_duration_ms = 8;
	int32 num_buddy_hunger_points = 9;
}

message FoodValue {
	float motivation_increase = 1;
	int32 cp_increase = 2;
	Item food_item = 3;
}

message FormProto {
	PokemonDisplayProto.Form form = 1;
	int32 asset_bundle_value = 2;
	string asset_bundle_suffix = 3;
}

message FormSettingsProto {
	HoloPokemonId pokemon = 1;
	repeated FormProto forms = 2;
}

message FortDeployOutProto {
	enum Result {
		NO_RESULT_SET = 0;
		SUCCESS = 1;
		ERROR_ALREADY_HAS_POKEMON_ON_FORT = 2;
		ERROR_OPPOSING_TEAM_OWNS_FORT = 3;
		ERROR_FORT_IS_FULL = 4;
		ERROR_NOT_IN_RANGE = 5;
		ERROR_PLAYER_HAS_NO_TEAM = 6;
		ERROR_POKEMON_NOT_FULL_HP = 7;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 8;
		ERROR_POKEMON_IS_BUDDY = 9;
		ERROR_FORT_DEPLOY_LOCKOUT = 10;
		ERROR_PLAYER_HAS_NO_NICKNAME = 11;
		ERROR_POI_INACCESSIBLE = 12;
		ERROR_LEGENDARY_POKEMON = 13;
		ERROR_INVALID_POKEMON = 14;
	}

	Result result = 1;
	FortDetailsOutProto fort_details_out_proto = 2;
	PokemonProto egg_pokemon = 3;
	GymStateProto gym_state_proto = 4;
}

message FortDeployProto {
	string fort_id = 1;
	fixed64 pokemon_id = 2;
	double player_lat_degrees = 3;
	double player_lng_degrees = 4;
}

message FortDetailsOutProto {
	string id = 1;
	int32 team = 2;
	repeated PokemonProto pokemon = 3;
	string name = 4;
	repeated string image_url = 5;
	int32 fp = 6;
	int32 stamina = 7;
	int32 max_stamina = 8;
	FortType fort_type = 9;
	double latitude = 10;
	double longitude = 11;
	string description = 12;
	repeated ClientFortModifierProto modifier = 13;
	bool close_soon = 14;
	string checkin_image_url = 15;
	EventInfoProto event_info = 16;
	repeated string promo_description = 17;
	string call_to_action_link = 18;
	SponsoredDetailsProto sponsored_details = 19;
}

message FortDetailsProto {
	string id = 1;
	double latitude = 2;
	double longitude = 3;
}

message FortModifierAttributesProto {
	int32 modifier_lifetime_seconds = 1;
	int32 troy_disk_num_pokemon_spawned = 2;
}

message FortRecallOutProto {
	enum Result {
		NO_RESULT_SET = 0;
		SUCCESS = 1;
		ERROR_NOT_IN_RANGE = 2;
		ERROR_POKEMON_NOT_ON_FORT = 3;
		ERROR_NO_PLAYER = 4;
	}

	Result result = 1;
	FortDetailsOutProto fort_details_out_proto = 2;
}

message FortRecallProto {
	string fort_id = 1;
	fixed64 pokemon_id = 2;
	double player_lat_degrees = 3;
	double player_lng_degrees = 4;
}

message FortRenderingType {
	enum RenderingType {
		DEFAULT = 0;
		INTERNAL_TEST = 1;
	}

}

message FortSearchLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	string fort_id = 2;
	repeated ItemProto items = 3;
	int32 eggs = 4;
	repeated PokemonProto pokemon_eggs = 5;
	FortType fort_type = 6;
	repeated ItemProto awarded_items = 7;
	repeated ItemProto bonus_items = 8;
	repeated ItemProto team_bonus_items = 9;
	repeated GiftBoxProto gift_boxes = 10;
}

message FortSearchOutProto {
	enum Result {
		NO_RESULT_SET = 0;
		SUCCESS = 1;
		OUT_OF_RANGE = 2;
		IN_COOLDOWN_PERIOD = 3;
		INVENTORY_FULL = 4;
		EXCEEDED_DAILY_LIMIT = 5;
		POI_INACCESSIBLE = 6;
	}

	Result result = 1;
	repeated AwardItemProto items = 2;
	int32 gems_awarded = 3;
	PokemonProto egg_pokemon = 4;
	int32 xp_awarded = 5;
	int64 cooldown_complete = 6;
	int32 chain_hack_sequence_number = 7;
	AwardedGymBadge awarded_gym_badge = 8;
	LootProto loot = 9;
	LootProto bonus_loot = 10;
	int32 raid_tickets = 11;
	LootProto team_bonus_loot = 12;
	string fort_id = 13;
	ClientQuestProto challenge_quest = 14;
	GiftBoxProto gift_box = 15;
}

message FortSearchProto {
	string id = 1;
	double player_lat_degrees = 2;
	double player_lng_degrees = 3;
	double fort_lat_degrees = 4;
	double fort_lng_degrees = 5;
}

message FortSettingsProto {
	double interaction_range_meters = 1;
	int32 max_total_deployed_pokemon = 2;
	int32 max_player_deployed_pokemon = 3;
	double deploy_stamina_multiplier = 4;
	double deploy_attack_multiplier = 5;
	double far_interaction_range_meters = 6;
	bool disable_gyms = 7;
	int32 max_same_pokemon_at_fort = 8;
	int32 max_player_total_deployed_pokemon = 9;
	bool enable_hyperlinks_in_poi_descriptions = 10;
	bool enable_right_to_left_text_display = 11;
	bool enable_sponsored_poi_decorators = 12;
	double remote_interaction_range_meters = 13;
}

message FortSponsor {
	enum Sponsor {
		UNSET = 0;
		MCDONALDS = 1;
		POKEMON_STORE = 2;
		TOHO = 3;
		SOFTBANK = 4;
		GLOBE = 5;
		SPATULA = 6;
		THERMOMETER = 7;
		KNIFE = 8;
		GRILL = 9;
		SMOKER = 10;
		PAN = 11;
		BBQ = 12;
		FRYER = 13;
		STEAMER = 14;
		HOOD = 15;
		SLOWCOOKER = 16;
		MIXER = 17;
		SCOOPER = 18;
		MUFFINTIN = 19;
		SALAMANDER = 20;
		PLANCHA = 21;
		NIA_OPS = 22;
		WHISK = 23;
	}

}

message FrameRate {
	PlatformMetricData sampled_frame_rate = 1;
}

message FriendshipDataProto {
	FriendshipLevelDataProto friendship_level_data = 1;
	repeated GiftBoxDetailsProto giftbox_details = 2;
	string codename = 3;
	string nickname = 4;
	int64 open_trade_expire_ms = 5;
	bool is_lucky = 6;
	int32 lucky_count = 7;
}

message FriendshipLevelDataProto {
	int64 bucket = 1;
	int32 points_earned_today = 2;
	FriendshipLevelMilestone awarded_friendship_milestone = 3;
	FriendshipLevelMilestone current_friendship_milestone = 4;
	double next_friendship_milestone_progress_percentage = 5;
	int32 points_toward_next_milestone = 6;
}

message FriendshipLevelMilestoneSettingsProto {
	enum PokemonTradingType {
		UNSET = 0;
		REGULAR_IN_POKEDEX = 1;
		SPECIAL_IN_POKEDEX = 2;
		REGULAR_NON_POKEDEX = 3;
		REGIONAL_NON_POKEDEX = 4;
		FORM_NON_POKEDEX = 5;
		LEGENDARY_NON_POKEDEX = 6;
		SHINY_NON_POKEDEX = 7;
	}

	int32 min_points_to_reach = 1;
	int32 milestone_xp_reward = 2;
	float attack_bonus_percentage = 3;
	int32 raid_ball_bonus = 4;
	repeated PokemonTradingType unlocked_trading = 5;
	float trading_discount = 6;
}

message FriendshipMilestoneRewardNotificationProto {
	string friend_id = 1;
	string friend_codename = 2;
	int32 friendship_milestone_level = 3;
	int64 xp_reward = 4;
}

message FriendshipMilestoneRewardProto {
	string friend_id = 1;
	FriendshipLevelMilestone friendship_milestone = 2;
}

message GameMasterClientTemplateProto {
	string template_id = 1;
	PokemonSettingsProto pokemon = 2;
	ItemSettingsProto item = 3;
	MoveSettingsProto move = 4;
	MoveSequenceSettingsProto move_sequence = 5;
	TypeEffectiveSettingsProto type_effective = 8;
	BadgeSettingsProto badge = 10;
	CameraSettingsProto camera = 11;
	PlayerLevelSettingsProto player_level = 12;
	GymLevelSettingsProto gym_level = 13;
	GymBattleSettingsProto battle_settings = 14;
	EncounterSettingsProto encounter_settings = 15;
	IapItemDisplayProto iap_item_display = 16;
	IapSettingsProto iap_settings = 17;
	PokemonUpgradeSettingsProto pokemon_upgrades = 18;
	EquippedBadgeSettingsProto equipped_badges = 19;
	QuestSettingsProto quest_settings = 20;
	AvatarCustomizationProto avatar_customization = 21;
	FormSettingsProto form_settings = 22;
	ClientGenderSettingsProto gender_settings = 23;
	GymBadgeGmtSettingsProto gym_badge_settings = 24;
	WeatherAffinityProto weather_affinities = 25;
	WeatherBonusProto weather_bonus_settings = 26;
	PokemonScaleSettingProto pokemon_scale_settings = 27;
	IapItemCategoryDisplayProto iap_category_display = 28;
	BelugaPokemonWhitelist beluga_pokemon_whitelist = 29;
	OnboardingSettingsProto onboarding_settings = 30;
	FriendshipLevelMilestoneSettingsProto friendship_milestone_settings = 31;
	LuckyPokemonSettingsProto lucky_pokemon_settings = 32;
	CombatSettingsProto combat_settings = 33;
	CombatLeagueSettingsProto combat_league_settings = 34;
	CombatLeagueProto combat_league = 35;
	ExRaidSettingsProto ex_raid_settings = 36;
	CombatMoveSettingsProto combat_move = 37;
	BackgroundModeSettingsProto background_mode_settings = 38;
	CombatStatStageSettingsProto combat_stat_stage_settings = 39;
	CombatNpcTrainerProto combat_npc_trainer = 40;
	CombatNpcPersonalityProto combat_npc_personality = 41;
	OnboardingV2SettingsProto onboarding_v2_settings = 42;
	PartyRecommendationSettingsProto party_recommendation_settings = 43;
	SmeargleMovesSettingsProto smeargle_moves_settings = 44;
	PokecoinPurchaseDisplayGmtProto pokecoin_purchase_display_gmt = 45;
	AdventureSyncV2GmtProto adventure_sync_v2_gmt = 46;
	LoadingScreenProto loading_screen_settings = 47;
	InvasionNpcDisplaySettingsProto invasion_npc_display_settings = 48;
	CombatCompetitiveSeasonSettingsProto combat_competitive_season_settings = 49;
	CombatRankingSettingsProto combat_ranking_proto_settings = 50;
	CombatTypeProto combat_type = 51;
	BuddyLevelSettings buddy_level_settings = 52;
	BuddyActivityCategorySettings buddy_activity_category_settings = 53;
	BuddyActivitySettings buddy_activity_settings = 54;
	BuddySwapSettings buddy_swap_settings = 56;
	VsSeekerClientSettingsProto vs_seeker_client_settings = 58;
	BuddyEncounterCameoSettings buddy_encounter_cameo_settings = 59;
	LimitedPurchaseSkuSettingsProto limited_purchase_sku_settings = 60;
	BuddyEmotionLevelSettings buddy_emotion_level_settings = 61;
	InvasionAvailabilitySettingsProto pokestop_invasion_availability_settings = 62;
	BuddyInteractionSettings buddy_interaction_settings = 63;
	VsSeekerLootProto vs_seeker_loot_proto = 64;
	VsSeekerPokemonRewardsProto vs_seeker_pokemon_rewards = 65;
	BattleHubOrderSettings battle_hub_order_settings = 66;
	BattleHubBadgeSettings battle_hub_badge_settings = 67;
	MapBuddySettingsProto map_buddy_settings = 68;
	BuddyWalkSettings buddy_walk_settings = 69;
	PlatypusRolloutSettingsProto platypus_rollout_settings = 70;
	BuddyHungerSettings buddy_hunger_settings = 72;
	ProjectVacationProto project_vacation = 73;
	AvatarGroupOrderSettingsProto avatar_group_order_settings = 76;
	MonodepthSettingsProto monodepth_settings = 78;
	RaidClientSettingsProto raid_settings_proto = 81;
	StickerMetadataProto sticker_metadata = 85;
}

message GenerateCombatChallengeIdOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 2;
		ERROR_ACCESS_DENIED = 3;
	}

	Result result = 1;
	string challenge_id = 2;
}

message GenerateCombatChallengeIdProto {
}

message GenericClickTelemetry {
	GenericClickTelemetryIds generic_click_id = 1;
}

message GetActionLogRequest {
}

message GetActionLogResponse {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	repeated ActionLogEntry log = 2;
}

message GetBuddyHistoryOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	Result result = 1;
	repeated BuddyHistoryData buddy_history = 2;
}

message GetBuddyHistoryProto {
}

message GetBuddyWalkedOutProto {
	bool success = 1;
	HoloPokemonFamilyId family_candy_id = 2;
	int32 candy_earned_count = 3;
	double km_remaining = 4;
	double last_km_awarded = 5;
}

message GetBuddyWalkedProto {
}

message GetCombatChallengeOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_CHALLENGE_NOT_FOUND = 2;
	}

	Result result = 1;
	CombatChallengeProto challenge = 2;
}

message GetCombatChallengeProto {
	string challenge_id = 1;
}

message GetCombatPlayerProfileOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_NOT_FOUND = 2;
		ERROR_ACCESS_DENIED = 3;
	}

	Result result = 1;
	CombatPlayerProfileProto profile = 2;
}

message GetCombatPlayerProfileProto {
	string player_id = 1;
}

message GetCombatResultsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_COMBAT_STATE = 2;
		ERROR_COMBAT_NOT_FOUND = 3;
		ERROR_PLAYER_QUIT = 4;
	}

	message CombatRematchProto {
		string combat_rematch_id = 1;
		string combat_league_template_id = 2;
	}

	Result result = 1;
	CombatRewardStatus reward_status = 2;
	LootProto rewards = 3;
	LeveledUpFriendsProto friend_level_up = 4;
	int32 number_rewarded_battles_today = 5;
	CombatPlayerFinishState combat_player_finish_state = 6;
	CombatRematchProto combat_rematch = 7;
}

message GetCombatResultsProto {
	string combat_id = 1;
}

message GetDailyEncounterOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ALREADY_FINISHED_FOR_TODAY = 2;
		MISSED_FOR_TODAY = 3;
		NO_POKEMON_AVAILABLE = 4;
		DISABLED = 5;
	}

	Result result = 1;
	HoloPokemonId pokedex_id = 2;
	double lat = 3;
	double lng = 4;
	string encounter_location = 5;
	fixed64 encounter_id = 6;
	int64 disappear_time_ms = 7;
	PokemonDisplayProto pokemon_display = 8;
}

message GetDailyEncounterProto {
}

message GetFitnessRewardsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		REWARDS_ALREADY_COLLECTED = 2;
		ERROR_UNKNOWN = 3;
	}

	Result result = 1;
	LootProto rewards = 2;
}

message GetFitnessRewardsProto {
}

message GetFriendshipRewardsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_NOT_FRIENDS = 3;
		ERROR_MILESTONE_ALREADY_AWARDED = 4;
		ERROR_FAILED_TO_UPDATE = 5;
	}

	Result result = 1;
	int64 xp_reward = 2;
	string friend_id = 3;
}

message GetFriendshipRewardsProto {
	string friend_id = 1;
}

message GetGameMasterClientTemplatesOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		PAGE = 2;
		RETRY = 3;
	}

	Result result = 1;
	repeated GameMasterClientTemplateProto items = 2;
	uint64 timestamp = 3;
	int32 page_offset = 4;
}

message GetGameMasterClientTemplatesProto {
	bool paginate = 1;
	int32 page_offset = 2;
	uint64 page_timestamp = 3;
}

message GetGiftBoxDetailsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_GIFT_DOES_NOT_EXIST = 3;
		ERROR_INVALID_PLAYER_ID = 4;
		ERROR_FRIEND_NOT_FOUND = 5;
		ERROR_FORT_SEARCH = 6;
	}

	Result result = 1;
	repeated GiftBoxDetailsProto gift_boxes = 2;
}

message GetGiftBoxDetailsProto {
	repeated fixed64 giftbox_id = 1;
	string player_id = 2;
}

message GetGymBadgeDetailsOutProto {
	AwardedGymBadge gym_badge = 1;
	GymDefenderProto gym_defender = 2;
	bool success = 3;
}

message GetGymBadgeDetailsProto {
	string fort_id = 1;
	double latitude = 2;
	double longitude = 3;
}

message GetGymDetailsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_IN_RANGE = 2;
	}

	GymStateProto gym_state = 1;
	string name = 2;
	repeated string url = 3;
	Result result = 4;
	string description = 5;
	repeated string secondary_url = 6;
	string checkin_image_url = 7;
	EventInfoProto event_info = 8;
}

message GetGymDetailsProto {
	string gym_id = 1;
	double player_lat_degrees = 2;
	double player_lng_degrees = 3;
	double gym_lat_degrees = 4;
	double gym_lng_degrees = 5;
	string client_version = 6;
}

message GetHatchedEggsOutProto {
	bool success = 1;
	repeated fixed64 pokemon_id = 2;
	repeated int32 exp_awarded = 3;
	repeated int32 candy_awarded = 4;
	repeated int32 stardust_awarded = 5;
	repeated float egg_km_walked = 6;
	repeated PokemonProto hatched_pokemon = 7;
	repeated int32 xl_candy_awarded = 8;
}

message GetHatchedEggsProto {
}

message GetHoloholoInventoryOutProto {
	bool success = 1;
	PlatformInventoryDeltaProto inventory_delta = 2;
}

message GetHoloholoInventoryProto {
	int64 timestamp_millis = 1;
	repeated Item item_been_seen = 2;
}

message GetInboxOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
		TIMED_OUT = 3;
	}

	Result result = 1;
	PlatformClientInbox inbox = 2;
}

message GetInboxProto {
	bool is_history = 1;
	bool is_reverse = 2;
	int64 not_before_ms = 3;
}

message GetIncensePokemonOutProto {
	enum Result {
		INCENSE_ENCOUNTER_UNKNOWN = 0;
		INCENSE_ENCOUNTER_AVAILABLE = 1;
		INCENSE_ENCOUNTER_NOT_AVAILABLE = 2;
	}

	Result result = 1;
	int32 pokemon_type_id = 2;
	double lat = 3;
	double lng = 4;
	string encounter_location = 5;
	fixed64 encounter_id = 6;
	int64 disappear_time_ms = 7;
	PokemonDisplayProto pokemon_display = 8;
}

message GetIncensePokemonProto {
	double player_lat_degrees = 1;
	double player_lng_degrees = 2;
}

message GetLocalTimeOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	message LocalTimeProto {
		int64 timestamp_ms = 1;
		int32 year = 2;
		int32 month = 3;
		int32 day_of_month = 4;
		int32 day_of_week = 5;
		int32 hours = 6;
		int32 minutes = 7;
		int32 seconds = 8;
		int32 milliseconds = 9;
		string timezone_id = 10;
	}

	Status status = 1;
	repeated LocalTimeProto local_times = 2;
}

message GetLocalTimeProto {
	repeated int64 timestamp_ms = 1;
}

message GetMapObjectsOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		LOCATION_UNSET = 2;
		ERROR = 3;
	}

	enum TimeOfDay {
		NONE = 0;
		DAY = 1;
		NIGHT = 2;
	}

	repeated ClientMapCellProto map_cell = 1;
	Status status = 2;
	TimeOfDay time_of_day = 3;
	repeated ClientWeatherProto client_weather = 4;
}

message GetMapObjectsProto {
	repeated uint64 cell_id = 1;
	repeated int64 since_time_ms = 2;
	double player_lat = 3;
	double player_lng = 4;
}

message GetMatchmakingStatusOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS_OPPONENT_FOUND = 1;
		SUCCESS_QUEUED = 2;
		SUCCESS_NOT_MATCHED_EXPIRED = 3;
		ERROR_PLAYER_NOT_FOUND = 4;
		ERROR_QUEUE_NOT_FOUND = 5;
		ERROR_RETRY_UNSUCCESSFUL = 6;
	}

	Result result = 1;
	CombatChallengeProto challenge = 2;
	string queue_id = 3;
}

message GetMatchmakingStatusProto {
	string queue_id = 1;
}

message GetNewQuestsOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_DISPLAY = 2;
	}

	Status status = 1;
	repeated ClientQuestProto quests = 2;
	repeated ClientQuestProto version_changed_quests = 3;
}

message GetNewQuestsProto {
}

message GetNpcCombatRewardsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALD_NUMBER_ATTACKING_POKEMON_IDS = 2;
	}

	Result result = 1;
	CombatRewardStatus reward_status = 2;
	LootProto rewards = 3;
	int32 number_rewarded_npc_battles_today = 4;
}

message GetNpcCombatRewardsProto {
	string combat_npc_trainer_template_id = 1;
	CombatPlayerFinishState finish_state = 2;
	repeated fixed64 attacking_pokemon_id = 3;
	string combat_id = 4;
}

message GetPhotobombOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		PHOTOBOMB_NOT_AVAILABLE = 2;
		ENCOUNTER_ALREADY_COMPLETED = 3;
		ERROR_UNKNOWN = 4;
	}

	Status status = 1;
	HoloPokemonId pokemon_id = 2;
	double lat = 3;
	double lng = 4;
	string encounter_location = 5;
	fixed64 encounter_id = 6;
	int64 disappear_time_ms = 7;
	PokemonDisplayProto pokemon_display = 8;
}

message GetPhotobombProto {
}

message GetPlayerDayOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
	int64 day = 2;
}

message GetPlayerDayProto {
}

message GetPlayerOutProto {
	bool success = 1;
	ClientPlayerProto player = 2;
	bool banned = 3;
	bool warn = 4;
	bool was_created = 5;
	bool warn_message_acknowledged = 6;
	bool was_suspended = 7;
	bool suspended_message_acknowledged = 8;
	int64 warn_expire_ms = 9;
	repeated int32 user_permission = 10;
}

message GetPlayerProto {
	PlayerLocaleProto player_locale = 1;
	bool prevent_creation = 2;
}

message GetQuestDetailsOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_QUEST_NOT_FOUND = 2;
		ERROR_INVALID_DISPLAY = 3;
	}

	Status status = 1;
	repeated ClientQuestProto quests = 2;
}

message GetQuestDetailsProto {
	repeated string quest_id = 1;
}

message GetRaidDetailsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_IN_RANGE = 2;
		ERROR_RAID_COMPLETED = 3;
		ERROR_RAID_UNAVAILABLE = 4;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 5;
		ERROR_POI_INACCESSIBLE = 6;
	}

	LobbyProto lobby = 1;
	BattleProto raid_battle = 2;
	bool player_can_join_lobby = 3;
	Result result = 4;
	RaidInfoProto raid_info = 5;
	bool ticket_used = 6;
	bool free_ticket_available = 7;
	int32 throws_remaining = 8;
	bool received_rewards = 9;
	int32 num_players_in_lobby = 10;
	int64 server_ms = 11;
	int32 server_instance = 12;
	bool display_high_user_warning = 13;
	int32 num_friend_invites_remaining = 14;
}

message GetRaidDetailsProto {
	int64 raid_seed = 1;
	string gym_id = 2;
	repeated int32 lobby_id = 3;
	double player_lat_degrees = 4;
	double player_lng_degrees = 5;
	double gym_lat_degrees = 6;
	double gym_lng_degrees = 7;
	string inviter_id = 8;
}

message GetRemoteConfigVersionsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	uint64 game_master_timestamp = 2;
	uint64 asset_digest_timestamp = 3;
	repeated uint32 experiment_id = 4;
}

message GetRemoteConfigVersionsProto {
	Platform platform = 1;
	string device_manufacturer = 2;
	string device_model = 3;
	string locale = 4;
	uint32 app_version = 5;
	Store store = 6;
	string carrier = 7;
}

message GetServerTimeOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
	}

	Status status = 1;
	int64 server_time_ms = 2;
}

message GetServerTimeProto {
}

message GetTodayViewOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	Status status = 1;
	TodayViewProto today_view = 2;
}

message GetTodayViewProto {
}

message GetTradingOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FRIEND_NOT_FOUND = 3;
		ERROR_INVALID_PLAYER_ID = 4;
		ERROR_INVALID_STATE = 5;
		ERROR_STATE_HANDLER = 6;
	}

	Result result = 1;
	TradingProto trading = 2;
}

message GetTradingProto {
	string player_id = 1;
}

message GetTutorialEggOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_ALREADY_HAS_TUTORIAL_EGG = 2;
		ERROR_FAILED_TO_ADD_EGG = 3;
		ERROR_NOT_V2_FLOW = 4;
	}

	Result result = 1;
}

message GetTutorialEggProto {
}

message GetVsSeekerStatusOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS_FULLY_CHARGED = 1;
		SUCCESS_NOT_FULLY_CHARGED_YET = 2;
		ERROR_VS_SEEKER_NOT_FOUND = 3;
		ERROR_VS_SEEKER_NEVER_STARTED_CHARGING = 4;
	}

	Result result = 1;
	VsSeekerAttributesProto vs_seeker = 2;
	bool season_ended = 3;
	CombatLogProto combat_log = 4;
}

message GetVsSeekerStatusProto {
}

message GetWebTokenOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Status status = 1;
	string access_token = 2;
}

message GetWebTokenProto {
	string client_id = 1;
}

message GiftBoxDetailsProto {
	fixed64 giftbox_id = 1;
	string sender_id = 2;
	string sender_codename = 3;
	string receiver_id = 4;
	string receiver_codename = 5;
	string fort_id = 6;
	string fort_name = 7;
	double fort_lat = 8;
	double fort_lng = 9;
	string fort_image_url = 10;
	int64 creation_timestamp = 11;
	int64 sent_timestamp = 12;
	fixed64 delivery_pokemon_id = 13;
	bool is_sponsored = 14;
	repeated StickerSentProto stickers_sent = 15;
}

message GiftBoxesProto {
	repeated GiftBoxProto gifts = 1;
}

message GiftBoxProto {
	fixed64 giftbox_id = 1;
	string sender_id = 2;
	string receiver_id = 3;
	string fort_id = 4;
	double fort_lat = 5;
	double fort_lng = 6;
	int64 creation_timestamp = 7;
	int64 sent_timestamp = 8;
	int64 sent_bucket = 9;
}

message GlobalEventTicketAttributesProto {
	HoloBadgeType event_badge = 1;
	int64 grant_badge_before_event_start_ms = 2;
	string event_start_time = 3;
	string event_end_time = 4;
	string item_bag_description_key = 6;
	int64 client_event_start_time_utc_ms = 100;
	int64 client_event_end_time_utc_ms = 101;
}

message GlobalSettingsProto {
	FortSettingsProto fort_settings = 2;
	MapSettingsProto map_settings = 3;
	LevelSettingsProto level_settings = 4;
	InventorySettingsProto inventory_settings = 5;
	string minimum_client_version = 6;
	GpsSettingsProto gps_settings = 7;
	FestivalSettingsProto festival_settings = 8;
	EventSettingsProto event_settings = 9;
	int32 max_pokemon_types = 10;
	SfidaGlobalSettingsProto sfida_settings = 11;
	NewsSettingProto news_settings = 12;
	TranslationSettingsProto translation_settings = 13;
	PasscodeSettingsProto passcode_settings = 14;
	NotificationSettingsProto notification_settings = 15;
	repeated string client_app_blacklist = 16;
	ClientPerformanceSettingsProto client_perf_settings = 17;
	NewsGlobalSettingsProto news_global_settings = 18;
	QuestGlobalSettingsProto quest_global_settings = 19;
	BelugaGlobalSettingsProto beluga_global_settings = 20;
	TelemetryGlobalSettingsProto telemetry_global_settings = 21;
	LoginSettingsProto login_settings = 22;
	SocialClientSettingsProto social_settings = 23;
	TradingGlobalSettingsProto trading_global_settings = 24;
	repeated HoloPokemonId additional_allowed_pokemon_ids = 25;
	UpsightLoggingSettingsProto upsight_logging_settings = 26;
	CombatGlobalSettingsProto combat_global_settings = 27;
	ThirdMoveGlobalSettingsProto third_move_settings = 28;
	CombatChallengeGlobalSettingsProto combat_challenge_global_settings = 29;
	BackgroundModeGlobalSettingsProto bgmode_global_settings = 30;
	ProbeSettingsProto probe_settings = 31;
	PokecoinPurchaseDisplaySettingsProto purchased_settings = 32;
	HelpshiftSettingsProto helpshift_settings = 33;
	ArPhotoGlobalSettings ar_photo_settings = 34;
	PoiGlobalSettingsProto poi_settings = 35;
	PokemonGlobalSettingsProto pokemon_settings = 36;
	AvatarGlobalSettingsProto avatar_settings = 37;
	EvolutionV2SettingsProto evolution_v2_settings = 38;
	IncidentGlobalSettingsProto incident_settings = 39;
	KoalaSettingsProto koala_settings = 40;
	KangarooSettingsProto kangaroo_settings = 41;
	BuddyGlobalSettingsProto buddy_settings = 43;
	InputSettingsProto input_settings = 44;
	GmtSettingsProto gmt_settings = 45;
	bool use_local_time_action = 47;
	ArdkConfigSettingsProto ardk_config_settings = 48;
	EnabledPokemonSettingsProto enabled_pokemon = 49;
	PokemonBulkUpgradeSettingsProto pokemon_bulk_upgrade_settings = 50;
	PlannedDowntimeSettingsProto planned_downtime_settings = 51;
	ArMappingSettingsProto ar_mapping_settings = 52;
	RaidInviteFriendsSettingsProto raid_invite_friends_settings = 53;
	DailyEncounterGlobalSettingsProto daily_encounter_settings = 54;
}

message GmtSettingsProto {
	bool enable_gmtdownload_v2 = 1;
}

message GpsSettingsProto {
	float driving_warning_speed_meters_per_second = 1;
	float driving_warning_cooldown_minutes = 2;
	float driving_speed_sample_interval_seconds = 3;
	int32 driving_speed_sample_count = 4;
	float idle_threshold_speed_meters_per_second = 5;
	int32 idle_threshold_duration_seconds = 6;
}

message GymBadgeGmtSettingsProto {
	repeated int32 target = 1;
	float battle_winning_score_per_defender_cp = 2;
	float gym_defending_score_per_minute = 3;
	int32 berry_feeding_score = 4;
	int32 pokemon_deploy_score = 5;
	int32 raid_battle_winning_score = 6;
	int32 lose_all_battles_score = 7;
}

message GymBadgeStats {
	uint64 total_time_defended_ms = 1;
	uint32 num_battles_won = 2;
	uint32 num_berries_fed = 3;
	uint32 num_deploys = 4;
	uint32 num_battles_lost = 5;
	repeated GymBattleProto gym_battles = 15;
}

message GymBattleAttackOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_ATTACK_ACTIONS = 2;
		ERROR_NOT_IN_RANGE = 3;
		ERROR_WRONG_BATTLE_TYPE = 4;
		ERROR_RAID_ACTIVE = 5;
	}

	Result result = 1;
	BattleUpdateProto battle_update = 2;
	AwardedGymBadge gym_badge = 3;
}

message GymBattleAttackProto {
	string gym_id = 1;
	string battle_id = 2;
	repeated BattleActionProto attacker_actions = 3;
	BattleActionProto last_retrieved_action = 4;
	double player_lat_degrees = 5;
	double player_lng_degrees = 6;
	int64 timestamp_ms = 7;
}

message GymBattleProto {
	string battle_id = 1;
	int64 completed_ms = 2;
	bool incremented_gym_battle_friends = 3;
}

message GymBattleSettingsProto {
	float energy_per_sec = 1;
	float dodge_energy_cost = 2;
	float retarget_seconds = 3;
	float enemy_attack_interval = 4;
	float attack_server_interval = 5;
	float round_duration_seconds = 6;
	float bonus_time_per_ally_seconds = 7;
	int32 maximum_attackers_per_battle = 8;
	float same_type_attack_bonus_multiplier = 9;
	int32 maximum_energy = 10;
	float energy_delta_per_health_lost = 11;
	int32 dodge_duration_ms = 12;
	int32 minimum_player_level = 13;
	int32 swap_duration_ms = 14;
	float dodge_damage_reduction_percent = 15;
	int32 minimum_raid_player_level = 16;
	float shadow_pokemon_attack_bonus_multiplier = 17;
	float shadow_pokemon_defense_bonus_multiplier = 18;
	float purified_pokemon_attack_multiplier_vs_shadow = 19;
}

message GymDefenderProto {
	MotivatedPokemonProto motivated_pokemon = 1;
	DeploymentTotalsProto deployment_totals = 2;
	PlayerPublicProfileProto trainer_public_profile = 3;
}

message GymDeployOutProto {
	enum Result {
		NO_RESULT_SET = 0;
		SUCCESS = 1;
		ERROR_ALREADY_HAS_POKEMON_ON_FORT = 2;
		ERROR_OPPOSING_TEAM_OWNS_FORT = 3;
		ERROR_FORT_IS_FULL = 4;
		ERROR_NOT_IN_RANGE = 5;
		ERROR_PLAYER_HAS_NO_TEAM = 6;
		ERROR_POKEMON_NOT_FULL_HP = 7;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 8;
		ERROR_POKEMON_IS_BUDDY = 9;
		ERROR_FORT_DEPLOY_LOCKOUT = 10;
		ERROR_PLAYER_HAS_NO_NICKNAME = 11;
		ERROR_POI_INACCESSIBLE = 12;
		ERROR_NOT_A_POKEMON = 13;
		ERROR_TOO_MANY_OF_SAME_KIND = 14;
		ERROR_TOO_MANY_DEPLOYED = 15;
		ERROR_TEAM_DEPLOY_LOCKOUT = 16;
		ERROR_LEGENDARY_POKEMON = 17;
		ERROR_INVALID_POKEMON = 18;
		ERROR_RAID_ACTIVE = 19;
	}

	Result result = 1;
	GymStatusAndDefendersProto gym_status_and_defenders = 2;
	AwardedGymBadge awarded_gym_badge = 3;
	int64 cooldown_duration_millis = 4;
}

message GymDeployProto {
	string fort_id = 1;
	fixed64 pokemon_id = 2;
	double player_lat_degrees = 3;
	double player_lng_degrees = 4;
}

message GymDisplayProto {
	repeated GymEventProto gym_event = 1;
	int32 total_gym_cp = 2;
	double lowest_pokemon_motivation = 3;
	int32 slots_available = 4;
	int64 occupied_millis = 5;
}

message GymEventProto {
	enum Event {
		UNKNOWN = 0;
		POKEMON_FED = 1;
		POKEMON_DEPLOYED = 2;
		POKEMON_RETURNED = 3;
		BATTLE_WON = 4;
		BATTLE_LOSS = 5;
		RAID_STARTED = 6;
		RAID_ENDED = 7;
		GYM_NEUTRALIZED = 8;
	}

	string trainer = 1;
	int64 timestamp_ms = 2;
	Event event = 3;
	int32 pokedex_id = 4;
	fixed64 pokemon_id = 5;
}

message GymFeedPokemonOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_CANNOT_USE = 2;
		ERROR_NOT_IN_RANGE = 3;
		ERROR_POKEMON_NOT_THERE = 4;
		ERROR_POKEMON_FULL = 5;
		ERROR_NO_BERRIES_LEFT = 6;
		ERROR_WRONG_TEAM = 7;
		ERROR_WRONG_COUNT = 8;
		ERROR_TOO_FAST = 9;
		ERROR_TOO_FREQUENT = 10;
		ERROR_GYM_BUSY = 11;
		ERROR_RAID_ACTIVE = 12;
		ERROR_GYM_CLOSED = 13;
	}

	Result result = 1;
	GymStatusAndDefendersProto gym_status_and_defenders = 2;
	AwardedGymBadge gym_badge = 3;
	int32 stardust_awarded = 4;
	int32 xp_awarded = 5;
	int32 num_candy_awarded = 6;
	HoloPokemonFamilyId candy_family_id = 7;
	int64 cooldown_complete = 8;
}

message GymFeedPokemonProto {
	Item item = 1;
	int32 starting_quantity = 2;
	string gym_id = 3;
	fixed64 pokemon_id = 4;
	double player_lat_degrees = 5;
	double player_lng_degrees = 6;
}

message GymGetInfoOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_IN_RANGE = 2;
		ERROR_GYM_DISABLED = 3;
	}

	GymStatusAndDefendersProto gym_status_and_defenders = 1;
	string name = 2;
	string url = 3;
	Result result = 4;
	string description = 5;
	string secondary_url = 6;
	AwardedGymBadge awarded_gym_badge = 7;
	string checkin_image_url = 8;
	EventInfoProto event_info = 9;
	DisplayWeatherProto display_weather = 10;
	repeated string promo_image = 11;
	repeated string promo_description = 12;
	string call_to_action_link = 13;
	int64 server_ms = 14;
	SponsoredDetailsProto sponsored_details = 15;
}

message GymGetInfoProto {
	string gym_id = 1;
	double player_lat_degrees = 2;
	double player_lng_degrees = 3;
	double gym_lat_degrees = 4;
	double gym_lng_degrees = 5;
	string inviter_id = 6;
}

message GymLevelSettingsProto {
	repeated int32 required_exp = 1;
	repeated int32 leader_slots = 2;
	repeated int32 trainer_slots = 3;
	repeated int32 search_roll_bonus = 4;
}

message GymMembershipProto {
	PokemonProto pokemon = 1;
	PlayerPublicProfileProto trainer_public_profile = 2;
	PokemonProto training_pokemon = 3;
}

message GymPokemonSectionProto {
	message GymPokemonProto {
		int64 pokemon_id = 1;
		float motivation = 2;
		int64 deployed_timestamp_ms = 3;
		int32 coins_returned = 4;
	}

	repeated GymPokemonProto pokemon_in_gym = 1;
	repeated GymPokemonProto pokemon_returned_today = 2;
}

message GymStartSessionOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_GYM_NOT_FOUND = 2;
		ERROR_GYM_NEUTRAL = 3;
		ERROR_GYM_WRONG_TEAM = 4;
		ERROR_GYM_EMPTY = 5;
		ERROR_INVALID_DEFENDER = 6;
		ERROR_TRAINING_INVALID_ATTACKER_COUNT = 7;
		ERROR_ALL_POKEMON_FAINTED = 8;
		ERROR_TOO_MANY_BATTLES = 9;
		ERROR_TOO_MANY_PLAYERS = 10;
		ERROR_GYM_BATTLE_LOCKOUT = 11;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 12;
		ERROR_NOT_IN_RANGE = 13;
		ERROR_POI_INACCESSIBLE = 14;
		ERROR_RAID_ACTIVE = 15;
	}

	Result result = 1;
	BattleProto battle = 2;
}

message GymStartSessionProto {
	string gym_id = 1;
	repeated fixed64 attacking_pokemon_id = 2;
	fixed64 defending_pokemon_id = 3;
	double player_lat_degrees = 4;
	double player_lng_degrees = 5;
}

message GymStateProto {
	PokemonFortProto fort_map_data = 1;
	repeated GymMembershipProto gym_membership = 2;
	bool deploy_lockout = 3;
}

message GymStatusAndDefendersProto {
	PokemonFortProto pokemon_fort_proto = 1;
	repeated GymDefenderProto gym_defender = 2;
}

message HelpshiftSettingsProto {
	uint32 min_player_level = 1;
	uint32 default_player_level = 2;
}

message HoloFitnessReportProto {
	int32 num_eggs_hatched = 1;
	int32 num_buddy_candy_earned = 2;
	double distance_walked_km = 3;
	int64 week_bucket = 4;
}

message HoloholoClientTelemetryOmniProto {
	BootTime boot_time = 1;
	FrameRate frame_rate = 2;
	GenericClickTelemetry generic_click_telemetry = 3;
	MapEventsTelemetry map_events_telemetry = 4;
	SpinPokestopTelemetry spin_pokestop_telemetry = 5;
	ProfilePageTelemetry profile_page_telemetry = 6;
	ShoppingPageTelemetry shopping_page_telemetry = 7;
	EncounterPokemonTelemetry encounter_pokemon_telemetry = 8;
	CatchPokemonTelemetry catch_pokemon_telemetry = 9;
	DeployPokemonTelemetry deploy_pokemon_telemetry = 10;
	FeedPokemonTelemetry feed_pokemon_telemetry = 11;
	EvolvePokemonTelemetry evolve_pokemon_telemetry = 12;
	ReleasePokemonTelemetry release_pokemon_telemetry = 13;
	NicknamePokemonTelemetry nickname_pokemon_telemetry = 14;
	NewsPageTelemetry news_page_telemetry = 15;
	ItemTelemetry item_telemetry = 16;
	BattlePartyTelemetry battle_party_telemetry = 17;
	PasscodeRedeemTelemetry passcode_redeem_telemetry = 18;
	LinkLoginTelemetry link_login_telemetry = 19;
	RaidTelemetry raid_telemetry = 20;
	PushNotificationTelemetry push_notification_telemetry = 21;
	AvatarCustomizationTelemetry avatar_customization_telemetry = 22;
	ReadPointOfInterestDescriptionTelemetry read_point_of_interest_description_telemetry = 23;
	WebTelemetry web_telemetry = 24;
	ChangeArTelemetry change_ar_telemetry = 25;
	WeatherDetailClickTelemetry weather_detail_click_telemetry = 26;
	UserIssueWeatherReport user_issue_weather_report = 27;
	PokemonInventoryTelemetry pokemon_inventory_telemetry = 28;
	SocialTelemetry social_telemetry = 29;
	CheckEncounterTrayInfoTelemetry check_encounter_info_telemetry = 30;
	PokemonGoPlusTelemetry pokemon_go_plus_telemetry = 31;
	RpcResponseTelemetry rpc_timing_telemetry = 32;
	SocialGiftCountTelemetry social_gift_count_telemetry = 33;
	AssetBundleDownloadTelemetry asset_bundle_telemetry = 34;
	AssetPoiDownloadTelemetry asset_poi_download_telemetry = 35;
	AssetStreamDownloadTelemetry asset_stream_download_telemetry = 36;
	AssetStreamCacheCulledTelemetry asset_stream_cache_culled_telemetry = 37;
	RpcSocketResponseTelemetry rpc_socket_timing_telemetry = 38;
	PermissionsFlowTelemetry permissions_flow = 39;
	DeviceServiceToggleTelemetry device_service_toggle = 40;
	BootTelemetry boot_telemetry = 41;
	UserAttributesProto user_attributes = 42;
	OnboardingTelemetry onboarding_telemetry = 43;
	LoginActionTelemetry login_action_telemetry = 44;
	ArPhotoSessionProto ar_photo_session_telemetry = 45;
	InvasionTelemetry invasion_telemetry = 46;
	CombatMinigameTelemetry combat_minigame_telemetry = 47;
	LeavePointOfInterestTelemetry leave_point_of_interest_telemetry = 48;
	ViewPointOfInterestImageTelemetry view_point_of_interest_image_telemetry = 49;
	CombatHubEntranceTelemetry combat_hub_entrance_telemetry = 50;
	LeaveInteractionRangeTelemetry leave_interaction_range_telemetry = 51;
	ShoppingPageClickTelemetry shopping_page_click_telemetry = 52;
	ShoppingPageScrollTelemetry shopping_page_scroll_telemetry = 53;
	DeviceSpecificationsTelemetry device_specifications_telemetry = 54;
	ScreenResolutionTelemetry screen_resolution_telemetry = 55;
	ARBuddyMultiplayerSessionTelemetry ar_buddy_multiplayer_session_telemetry = 56;
	BuddyMultiplayerConnectionFailedProto buddy_multiplayer_connection_failed_telemetry = 57;
	BuddyMultiplayerConnectionSucceededProto buddy_multiplayer_connection_succeeded_telemetry = 58;
	BuddyMultiplayerTimeToGetSessionProto buddy_multiplayer_time_to_get_session_telemetry = 59;
	PlayerHudNotificationClickTelemetry player_hud_notification_click_telemetry = 60;
	MonodepthDownloadTelemetry monodepth_download_telemetry = 61;
	ArMappingTelemetryProto ar_mapping_telemetry = 62;
	RemoteRaidTelemetry remote_raid_telemetry = 63;
	PlatformPlatformServerData server_data = 1001;
	PlatformPlatformCommonFilterProto common_filters = 1002;
}

message HoloInventoryItemProto {
	PokemonProto pokemon = 1;
	ItemProto item = 2;
	PokedexEntryProto pokedex_entry = 3;
	PlayerStatsProto player_stats = 4;
	PlayerCurrencyProto player_currency = 5;
	PlayerCameraProto player_camera = 6;
	InventoryUpgradesProto inventory_upgrades = 7;
	AppliedItemsProto applied_items = 8;
	EggIncubatorsProto egg_incubators = 9;
	PokemonFamilyProto pokemon_family = 10;
	QuestProto quest = 11;
	AvatarItemProto avatar_item = 12;
	RaidTicketsProto raid_tickets = 13;
	QuestsProto quests = 14;
	GiftBoxesProto gift_boxes = 15;
	BelugaIncenseBoxProto beluga_incense = 16;
	LimitedPurchaseSkuRecordProto limited_purchase_sku_record = 19;
	StickerProto sticker = 22;
}

message HoloInventoryKeyProto {
	fixed64 pokemon_id = 1;
	Item item = 2;
	int32 pokedex_entry_id = 3;
	bool player_stats = 4;
	bool player_currency = 5;
	bool player_camera = 6;
	bool inventory_upgrades = 7;
	bool applied_items = 8;
	bool egg_incubators = 9;
	int32 pokemon_family_id = 10;
	QuestType quest_type = 11;
	string avatar_template_id = 12;
	bool raid_tickets = 13;
	bool quests = 14;
	bool gift_boxes = 15;
	bool beluga_incense_box = 16;
	bool vs_seeker_upgrades = 17;
	bool limited_purchase_sku_record = 19;
	string sticker_id = 22;
}

message IapItemCategoryDisplayProto {
	HoloIapItemCategory category = 1;
	string name = 2;
	bool hidden = 3;
	int32 sort_order = 4;
	bool banner_enabled = 5;
	string banner_title = 6;
	string image_url = 7;
	string description = 8;
}

message IapItemDisplayProto {
	string sku = 1;
	HoloIapItemCategory category = 2;
	int32 sort_order = 3;
	bool hidden = 6;
	bool sale = 7;
	string sprite_id = 8;
	string title = 9;
	string description = 10;
	string sku_enable_time = 11;
	string sku_disable_time = 12;
	int64 sku_enable_time_utc_ms = 13;
	int64 sku_disable_time_utc_ms = 14;
}

message IapSettingsProto {
	int32 daily_bonus_coins = 1;
	repeated int32 daily_defender_bonus_per_pokemon = 2;
	int32 daily_defender_bonus_max_defenders = 3;
	repeated string daily_defender_bonus_currency = 4;
	int64 min_time_between_claims_ms = 5;
	bool daily_bonus_enabled = 6;
	bool daily_defender_bonus_enabled = 7;
}

message IncenseAttributesProto {
	int32 incense_lifetime_seconds = 1;
	repeated HoloPokemonType pokemon_type = 2;
	float pokemon_incense_type_probability = 3;
	int32 standing_time_between_encounters_sec = 4;
	int32 moving_time_between_encounter_sec = 5;
	int32 distance_required_for_shorter_interval_meters = 6;
	int32 pokemon_attracted_length_sec = 7;
	repeated SpawnTablePokemonProto spawn_table = 8;
	float spawn_table_probability = 9;
}

message IncenseEncounterOutProto {
	enum Result {
		INCENSE_ENCOUNTER_UNKNOWN = 0;
		INCENSE_ENCOUNTER_SUCCESS = 1;
		INCENSE_ENCOUNTER_NOT_AVAILABLE = 2;
		POKEMON_INVENTORY_FULL = 3;
	}

	Result result = 1;
	PokemonProto pokemon = 2;
	CaptureProbabilityProto capture_probability = 3;
	Item active_item = 4;
	int32 arplus_attempts_until_flee = 5;
}

message IncenseEncounterProto {
	int64 encounter_id = 1;
	string encounter_location = 2;
}

message IncidentGlobalSettingsProto {
	int32 min_player_level = 1;
	int32 min_player_level_for_v2 = 2;
}

message IncidentLookupProto {
	string incident_id = 1;
	string fort_id = 2;
	double fort_lat = 3;
	double fort_lng = 4;
}

message IncidentTicketAttributesProto {
	bool ignore_full_inventory = 1;
	int32 upgrade_requirement_count = 2;
	Item upgraded_item = 3;
}

message InputSettingsProto {
	bool enable_frame_independent_spin = 1;
	int32 milliseconds_processed_spin_force = 2;
	float spin_speed_multiplier = 3;
}

message InvasionAvailabilitySettingsProto {
	enum InvasionAvailabilitySettingsId {
		INVASION_AVAILABILITY_SETTINGS_UNSET = 0;
		INVASION_AVAILABILITY_SETTINGS_MONDAY = 1;
		INVASION_AVAILABILITY_SETTINGS_TUESDAY = 2;
		INVASION_AVAILABILITY_SETTINGS_WEDNESDAY = 3;
		INVASION_AVAILABILITY_SETTINGS_THURSDAY = 4;
		INVASION_AVAILABILITY_SETTINGS_FRIDAY = 5;
		INVASION_AVAILABILITY_SETTINGS_SATURDAY = 6;
		INVASION_AVAILABILITY_SETTINGS_SUNDAY = 7;
	}

	int64 availability_start_minute = 1;
	int64 availability_end_minute = 2;
}

message InvasionEncounterOutProto {
	message PremierBallsDisplayProto {
		int32 base_num_balls = 1;
		int32 pokemon_purified_num_balls = 2;
		int32 grunts_defeated_num_balls = 3;
		int32 pokemon_remaining_num_balls = 4;
	}

	InvasionStatus.Status status = 1;
	PokemonProto encounter_pokemon = 2;
	CaptureProbabilityProto capture_probability = 3;
	Item active_item = 4;
	int32 throws_remaining = 5;
	fixed64 encounter_id = 6;
	string spawn_point_guid = 7;
	PremierBallsDisplayProto balls_display = 8;
}

message InvasionEncounterProto {
	IncidentLookupProto incident_lookup = 1;
	int32 step = 2;
}

message InvasionFinishedDisplayProto {
	EnumWrapper.PokestopStyle style = 1;
}

message InvasionNpcDisplaySettingsProto {
	string trainer_name = 1;
	PlayerAvatarProto avatar = 2;
	string trainer_title = 3;
	string trainer_quote = 4;
	string icon_url = 5;
	string backdrop_image_bundle = 6;
	string model_name = 7;
	string tutorial_on_loss_string = 8;
	bool is_male = 9;
}

message InvasionStatus {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
		ERROR_FORT_NOT_FOUND = 3;
		ERROR_INCIDENT_NOT_FOUND = 4;
		ERROR_STEP_ALREADY_COMPLETED = 5;
		ERROR_WRONG_STEP = 6;
		ERROR_PLAYER_BELOW_MIN_LEVEL = 7;
		ERROR_INCIDENT_EXPIRED = 8;
		ERROR_MISSING_INCIDENT_TICKET = 9;
		ERROR_ENCOUNTER_POKEMON_INVENTORY_FULL = 10;
		ERROR_PLAYER_BELOW_V2_MIN_LEVEL = 11;
		ERROR_INVALID_HEALTH_UPDATES = 20;
		ERROR_ATTACKING_POKEMON_INVALID = 30;
	}

}

message InvasionTelemetry {
	InvasionTelemetryIds invasion_telemetry_id = 1;
	EnumWrapper.InvasionCharacter npc_id = 2;
	bool battle_success = 3;
	int32 post_battle_friendly_remaining = 4;
	int32 post_battle_enemy_remaining = 5;
	int32 encounter_pokemon = 6;
	bool encounter_success = 7;
	string invasion_id = 8;
	bool player_tapped_npc = 9;
	string radar = 10;
	bool curfew = 11;
	float duration = 12;
	float distance = 13;
}

message InvasionVictoryLogEntry {
	LootProto rewards = 1;
	EnumWrapper.InvasionCharacter invasion_npc = 2;
}

message InventorySettingsProto {
	int32 max_pokemon = 1;
	int32 max_bag_items = 2;
	int32 base_pokemon = 3;
	int32 base_bag_items = 4;
	int32 base_eggs = 5;
	int32 max_team_changes = 6;
	int64 team_change_item_reset_period_in_days = 7;
	int64 max_item_boost_duration_ms = 8;
	int32 default_sticker_max_count = 9;
}

message InventoryUpgradeAttributesProto {
	int32 additional_storage = 1;
	InventoryUpgradeType upgrade_type = 2;
}

message InventoryUpgradeProto {
	Item item = 1;
	InventoryUpgradeType upgrade_type = 2;
	int32 additional_storage = 3;
}

message InventoryUpgradesProto {
	repeated InventoryUpgradeProto inventory_upgrade = 1;
}

message ItemProto {
	Item item = 1;
	int32 count = 2;
	bool unseen = 3;
}

message ItemRewardProto {
	Item item = 1;
	int32 amount = 2;
}

message ItemSettingsProto {
	Item unique_id = 1;
	HoloItemType item_type = 2;
	HoloItemCategory category = 3;
	float drop_freq = 4;
	int32 drop_trainer_level = 5;
	PokeBallAttributesProto pokeball = 6;
	PotionAttributesProto potion = 7;
	ReviveAttributesProto revive = 8;
	BattleAttributesProto battle = 9;
	FoodAttributesProto food = 10;
	InventoryUpgradeAttributesProto inventory_upgrade = 11;
	ExperienceBoostAttributesProto xp_boost = 12;
	IncenseAttributesProto incense = 13;
	EggIncubatorAttributesProto egg_incubator = 14;
	FortModifierAttributesProto fort_modifier = 15;
	StardustBoostAttributesProto stardust_boost = 16;
	IncidentTicketAttributesProto incident_ticket = 17;
	GlobalEventTicketAttributesProto global_event_ticket = 18;
	bool ignore_inventory_space = 19;
}

message ItemTelemetry {
	ItemUseTelemetryIds item_use_click_id = 1;
	int32 item_id = 2;
	bool equipped = 3;
	bool from_inventory = 4;
	string item_id_string = 5;
}

message JoinBuddyMultiplayerSessionOutProto {
	enum Result {
		JOIN_SUCCESS = 0;
		JOIN_LOBBY_FULL = 1;
		JOIN_HOST_TOO_FAR = 2;
		JOIN_LOBBY_NOT_FOUND = 3;
		JOIN_BUDDY_NOT_SET = 4;
		JOIN_BUDDY_NOT_FOUND = 5;
		JOIN_BAD_BUDDY = 6;
		JOIN_BUDDY_V2_NOT_ENABLED = 7;
		JOIN_PLAYER_LEVEL_TOO_LOW = 8;
		JOIN_UNKNOWN_ERROR = 9;
		JOIN_U13_NO_PERMISSION = 10;
	}

	Result result = 1;
	bytes arbe_join_token = 2;
	int64 generation_timestamp = 3;
	int32 max_players = 4;
}

message JoinBuddyMultiplayerSessionProto {
	string plfe_session_id = 1;
}

message JoinLobbyOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_IN_RANGE = 2;
		ERROR_RAID_UNAVAILABLE = 3;
		ERROR_RAID_COMPLETED = 4;
		ERROR_NO_AVAILABLE_LOBBIES = 5;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 6;
		ERROR_POI_INACCESSIBLE = 7;
		ERROR_GYM_LOCKOUT = 8;
		ERROR_NO_TICKET = 9;
		ERROR_NO_REMOTE_TICKET = 10;
		ERROR_NO_INVITE = 11;
	}

	Result result = 1;
	LobbyProto lobby = 2;
}

message JoinLobbyProto {
	int64 raid_seed = 1;
	string gym_id = 2;
	repeated int32 lobby_id = 3;
	bool private = 4;
	double player_lat_degrees = 5;
	double player_lng_degrees = 6;
	double gym_lat_degrees = 7;
	double gym_lng_degrees = 8;
	bool use_remote_pass = 9;
	string inviter_id = 10;
}

message KangarooSettingsProto {
	bool enable_kangaroo_v2 = 1;
}

message KoalaSettingsProto {
	string app_id = 1;
	bool use_sandbox = 2;
	bool use_koala = 3;
}

message LeaveBuddyMultiplayerSessionOutProto {
	enum Result {
		LEAVE_SUCCESS = 0;
		LEAVE_NOT_IN_LOBBY = 1;
		LEAVE_LOBBY_NOT_FOUND = 2;
		LEAVE_UNKNOWN_ERROR = 3;
	}

	Result result = 1;
}

message LeaveBuddyMultiplayerSessionProto {
	string plfe_session_id = 1;
}

message LeaveInteractionRangeTelemetry {
	string result = 1;
	string fort_id = 2;
	int32 fort_type = 3;
	int64 client_timestamp = 4;
	string partner_id = 5;
	int64 time_spent = 6;
	string campaign_id = 7;
}

message LeaveLobbyOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_RAID_UNAVAILABLE = 2;
		ERROR_LOBBY_NOT_FOUND = 3;
	}

	Result result = 1;
	LobbyProto lobby = 2;
}

message LeaveLobbyProto {
	int64 raid_seed = 1;
	string gym_id = 2;
	repeated int32 lobby_id = 3;
}

message LeavePointOfInterestTelemetry {
	string result = 1;
	string fort_id = 2;
	int32 fort_type = 3;
	int64 client_timestamp = 4;
	string partner_id = 5;
	int64 time_spent = 6;
	string campaign_id = 7;
}

message LeveledUpFriendsProto {
	repeated PlayerPublicProfileProto friend_profiles = 1;
	repeated FriendshipLevelDataProto friend_milestone_levels = 2;
}

message LevelSettingsProto {
	double trainer_cp_modifier = 2;
	double trainer_difficulty_modifier = 3;
}

message LevelUpRewardsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		AWARDED_ALREADY = 2;
	}

	Result result = 1;
	repeated AwardItemProto items = 2;
	repeated Item items_unlocked = 4;
	repeated string avatar_template_ids = 5;
}

message LevelUpRewardsProto {
	int32 level = 1;
}

message LimitedEditionPokemonEncounterRewardProto {
	PokemonEncounterRewardProto pokemon = 1;
	string identifier = 2;
	int32 lifetime_max_count = 3;
	int32 per_competitive_combat_season_max_count = 4;
}

message LimitedPurchaseSkuRecordProto {
	message PurchaseProto {
		int32 version = 1;
		int32 num_purchases = 2;
		int64 last_purchase_ms = 4;
		int32 total_num_purchases = 5;
	}

	map<string, PurchaseProto> purchases = 1;
}

message LimitedPurchaseSkuSettingsProto {
	enum ChronoUnit {
		UNSET = 0;
		MINUTE = 1;
		HOUR = 2;
		DAY = 3;
		WEEK = 4;
		MONTH = 5;
	}

	int32 purchase_limit = 1;
	int32 version = 2;
	ChronoUnit chrono_unit = 3;
	string loot_table_id = 4;
	int32 reset_interval = 20;
}

message LinkLoginTelemetry {
	bool linked = 1;
	string success = 2;
	string error = 3;
	string active_auth_provider_id = 4;
	string provider = 5;
}

message ListAvatarCustomizationsOutProto {
	enum Label {
		UNSET_LABEL = 0;
		DEFAULT = 1;
		OWNED = 2;
		FEATURED = 3;
		NEW = 4;
		SALE = 5;
		PURCHASABLE = 6;
		UNLOCKABLE = 7;
		VIEWED = 8;
		LOCKED_PURCHASABLE = 9;
	}

	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	message AvatarCustomization {
		string avatar_template_id = 1;
		repeated Label labels = 2;
	}

	Result result = 1;
	repeated AvatarCustomization avatar_customizations = 2;
}

message ListAvatarCustomizationsProto {
	enum Filter {
		UNSET = 0;
		ALL = 1;
		DEFAULT = 2;
		OWNED = 3;
		FEATURED = 4;
		PURCHASABLE = 5;
		UNLOCKABLE = 6;
	}

	PlayerAvatarType avatar_type = 1;
	repeated AvatarCustomizationProto.Slot slot = 2;
	repeated Filter filters = 3;
	int32 start = 4;
	int32 limit = 5;
}

message ListGymBadgesOutProto {
	repeated AwardedGymBadge gym_badge = 1;
}

message ListGymBadgesProto {
}

message LoadingScreenProto {
	string url = 1;
	int64 display_after_timestamp_ms = 2;
	map<string, string> color_settings = 3;
}

message LobbyPokemonProto {
	int64 id = 1;
	HoloPokemonId pokedex_id = 2;
	int32 cp = 3;
	float percent_health = 4;
}

message LobbyProto {
	repeated int32 lobby_id = 1;
	repeated BattleParticipantProto players = 2;
	int64 player_join_end_ms = 3;
	int64 pokemon_selection_end_ms = 4;
	int64 raid_battle_start_ms = 5;
	int64 raid_battle_end_ms = 6;
	string raid_battle_id = 8;
	string owner_nickname = 9;
	bool private = 10;
	int64 creation_ms = 11;
	int32 battle_plfe_instance = 12;
	GameplayWeatherProto.WeatherCondition weather_condition = 13;
	repeated string invited_player_ids = 14;
}

message LoginActionTelemetry {
	LoginActionTelemetryIds login_action_id = 1;
	bool first_time = 2;
	bool success = 3;
	bool intent_existing = 4;
	string error = 5;
	string auth_status = 6;
}

message LoginSettingsProto {
	bool enable_multi_login_linking = 1;
}

message LootItemProto {
	Item item = 1;
	bool stardust = 2;
	bool pokecoin = 3;
	HoloPokemonId pokemon_candy = 4;
	int32 count = 5;
	bool experience = 6;
	PokemonProto pokemon_egg = 7;
	string avatar_template_id = 8;
	string sticker_id = 9;
}

message LootProto {
	repeated LootItemProto loot_item = 1;
}

message LuckyPokemonSettingsProto {
	float power_up_stardust_discount_percent = 1;
}

message MapBuddySettingsProto {
	int32 for_buddy_group_number = 1;
	float target_offset_min = 2;
	float target_offset_max = 3;
	float leash_distance = 4;
	float max_seconds_to_idle = 5;
	float max_rotation_speed = 6;
	float walk_threshold = 7;
	float run_threshold = 8;
	bool should_glide = 9;
	float glide_smooth_time = 10;
	float glide_max_speed = 11;
}

message MapEventsTelemetry {
	MapEventsTelemetryIds map_event_click_id = 1;
	string fort_id = 2;
	repeated int32 guard_pokemon_level = 3;
	int32 team = 4;
	bool is_player_in_range = 5;
}

message MapPokemonProto {
	string spawnpoint_id = 1;
	fixed64 encounter_id = 2;
	int32 pokedex_type_id = 3;
	int64 expiration_time_ms = 4;
	double latitude = 5;
	double longitude = 6;
	PokemonDisplayProto pokemon_display = 7;
}

message MapSettingsProto {
	double pokemon_visible_range = 1;
	double poke_nav_range_meters = 2;
	double encounter_range_meters = 3;
	float get_map_objects_min_refresh_seconds = 4;
	float get_map_objects_max_refresh_seconds = 5;
	float get_map_objects_min_distance_meters = 6;
	string google_maps_api_key = 7;
	int32 min_nearby_hide_sightings = 8;
	bool enable_special_weather = 9;
	float special_weather_probability = 10;
	string google_maps_client_id = 11;
	bool enable_encounter_v2 = 12;
}

message MarkReadNewsArticleOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		NO_NEWS_FOUND = 2;
	}

	Result result = 1;
}

message MarkReadNewsArticleProto {
	repeated string news_ids = 1;
}

message MarkTutorialCompleteOutProto {
	bool success = 1;
	ClientPlayerProto player = 2;
}

message MarkTutorialCompleteProto {
	repeated TutorialCompletion tutorial_complete = 1;
	bool send_marketing_emails = 2;
	bool send_push_notifications = 3;
}

message MonodepthDownloadTelemetry {
	bool downloaded_package = 1;
	bool skipped_package = 2;
	string model_downloaded = 3;
}

message MonodepthSettingsProto {
	bool enable_occlusions = 1;
	bool occlusions_default_on = 2;
	bool occlusions_toggle_visible = 3;
}

message MotivatedPokemonProto {
	PokemonProto pokemon = 1;
	int64 deploy_ms = 2;
	int32 cp_when_deployed = 3;
	double motivation_now = 4;
	int32 cp_now = 5;
	float berry_value = 6;
	int64 feed_cooldown_duration_millis = 7;
	repeated FoodValue food_value = 8;
}

message MoveSequenceSettingsProto {
	repeated string sequence = 1;
}

message MoveSettingsProto {
	HoloPokemonMove unique_id = 1;
	int32 animation_id = 2;
	HoloPokemonType type = 3;
	float power = 4;
	float accuracy_chance = 5;
	float critical_chance = 6;
	float heal_scalar = 7;
	float stamina_loss_scalar = 8;
	int32 trainer_level_min = 9;
	int32 trainer_level_max = 10;
	string vfx_name = 11;
	int32 duration_ms = 12;
	int32 damage_window_start_ms = 13;
	int32 damage_window_end_ms = 14;
	int32 energy_delta = 15;
	bool is_locked = 16;
}

message MultiPartQuestProto {
	repeated QuestProto sub_quests = 1;
}

message NearbyPokemonProto {
	int32 pokedex_number = 1;
	float distance_meters = 2;
	fixed64 encounter_id = 3;
	string fort_id = 4;
	string fort_image_url = 5;
	PokemonDisplayProto pokemon_display = 6;
}

message NewsArticleProto {
	enum NewsTemplate {
		UNSET = 0;
		DEFAULT_TEMPLATE = 1;
	}

	string id = 1;
	repeated string image_url = 2;
	string header_key = 3;
	string subheader_key = 4;
	string main_text_key = 5;
	int64 timestamp = 6;
	NewsTemplate template = 7;
	bool enabled = 8;
	bool article_read = 9;
}

message NewsGlobalSettingsProto {
	bool enable_news = 1;
}

message NewsPageTelemetry {
	NewsPageTelemetryIds news_page_click_id = 1;
}

message NewsProto {
	string news_bundle_id = 1;
	repeated string exclusive_countries = 2;
}

message NewsSettingProto {
	repeated NewsProto news_protos = 1;
}

message NicknamePokemonOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_NICKNAME = 2;
		ERROR_POKEMON_NOT_FOUND = 3;
		ERROR_POKEMON_IS_EGG = 4;
		ERROR_FILTERED_NICKNAME = 5;
		ERROR_EXCEEDED_CHANGE_LIMIT = 6;
	}

	Result result = 1;
}

message NicknamePokemonProto {
	fixed64 pokemon_id = 1;
	string nickname = 2;
}

message NicknamePokemonTelemetry {
	PokemonTelemetry pokemon = 1;
	string nickname = 2;
}

message NotificationSettingsProto {
	bool pull_notifications = 1;
	bool show_notifications = 2;
}

message NpcPokemonProto {
	HoloPokemonId pokemon_type = 1;
	PokemonDisplayProto pokemon_display = 2;
}

message OnboardingSettingsProto {
	bool skip_avatar_customization = 1;
	bool disable_initial_ar_prompt = 2;
	uint32 ar_prompt_player_level = 3;
}

message OnboardingTelemetry {
	OnboardingPathIds onboarding_path = 1;
	OnboardingEventIds event_id = 2;
	int32 data = 3;
	string conversation = 4;
	OnboardingArStatus ar_status = 5;
}

message OnboardingV2SettingsProto {
	bool enable_onboarding_v2 = 1;
	repeated HoloPokemonId pokedex_id = 2;
	HoloPokemonId onboarding_egg_pokemon = 3;
	int32 egg_km_until_hatch = 4;
}

message OneWaySharedFriendshipDataProto {
	repeated GiftBoxDetailsProto giftbox_details = 1;
	int64 open_trade_expire_ms = 2;
}

message OpenBuddyGiftOutProto {
	enum Result {
		UNSET = 0;
		ERROR_BUDDY_NOT_VALID = 1;
		SUCCESS_ADDED_LOOT_TO_INVENTORY = 2;
		SUCCESS_ADDED_SOUVENIR_TO_COLLECTIONS = 3;
		ERROR_BUDDY_HAS_NOT_PICKED_UP_ANY_SOUVENIRS = 4;
		ERROR_INVENTORY_IS_FULL = 5;
		ERROR_BUDDY_NOT_ON_MAP = 6;
	}

	Result result = 1;
	BuddyGiftProto buddy_gift = 2;
	BuddyObservedData observed_data = 4;
	BuddyStatsShownHearts.BuddyShownHeartType shown_hearts = 5;
}

message OpenBuddyGiftProto {
}

message OpenCombatChallengeOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_CHALLENGE_STATE = 2;
		ERROR_CHALLENGE_NOT_FOUND = 3;
		ERROR_POKEMON_NOT_IN_INVENTORY = 4;
		ERROR_NOT_ELIGIBLE_LEAGUE = 5;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 6;
		ERROR_ALREADY_TIMEDOUT = 8;
		ERROR_ALREADY_CANCELLED = 9;
		ERROR_FRIEND_NOT_FOUND = 10;
		ERROR_FAILED_TO_SEND_NOTIFICATION = 11;
		ERROR_ACCESS_DENIED = 12;
		ERROR_INELIGIBLE_OPPONENT = 13;
	}

	Result result = 1;
	CombatChallengeProto challenge = 2;
}

message OpenCombatChallengeProto {
	CombatType type = 1;
	string challenge_id = 2;
	string combat_league_template_id = 3;
	string opponent_player_id = 4;
	repeated fixed64 attacking_pokemon_id = 5;
}

message OpenCombatSessionOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_COMBAT_STATE = 2;
		ERROR_COMBAT_SESSION_FULL = 3;
		ERROR_POKEMON_NOT_IN_INVENTORY = 4;
		ERROR_OPPONENT_NOT_IN_RANGE = 5;
		ERROR_CHALLENGE_EXPIRED = 6;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 7;
		ERROR_OPPONENT_QUIT = 8;
		ERROR_POKEMON_LINEUP_INELIGIBLE_FOR_LEAGUE = 9;
		ERROR_COMBAT_LEAGUE_UNSPECIFIED = 10;
		ERROR_ACCESS_DENIED = 11;
		ERROR_PLAYER_HAS_NO_BATTLE_PASSES = 12;
	}

	Result result = 1;
	CombatProto combat = 2;
	bool should_debug_log = 3;
}

message OpenCombatSessionProto {
	string combat_id = 1;
	repeated fixed64 attacking_pokemon_id = 2;
	string combat_league_template_id = 3;
}

message OpenGiftLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	string friend_codename = 2;
	LootProto items = 3;
	repeated PokemonProto pokemon_eggs = 4;
}

message OpenGiftOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_BAG_FULL = 3;
		ERROR_PLAYER_LIMIT_REACHED = 4;
		ERROR_GIFT_DOES_NOT_EXIST = 5;
		ERROR_FRIEND_NOT_FOUND = 6;
		ERROR_INVALID_PLAYER_ID = 7;
		ERROR_FRIEND_UPDATE = 8;
	}

	Result result = 1;
	LootProto items = 2;
	PokemonProto egg_pokemon = 3;
	FriendshipLevelDataProto updated_friendship_data = 4;
	PlayerPublicProfileProto friend_profile = 5;
}

message OpenGiftProto {
	string player_id = 1;
	fixed64 giftbox_id = 2;
}

message OpenInvasionCombatSessionOutProto {
	InvasionStatus.Status status = 1;
	CombatProto combat = 2;
}

message OpenInvasionCombatSessionProto {
	IncidentLookupProto incident_lookup = 1;
	int32 step = 2;
	repeated fixed64 attacking_pokemon_id = 3;
}

message OpenNpcCombatSessionOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 2;
		ERROR_POKEMON_LINEUP_INELIGIBLE_FOR_LEAGUE = 3;
		ERROR_ACCESS_DENIED = 4;
	}

	Result result = 1;
	CombatProto combat = 2;
}

message OpenNpcCombatSessionProto {
	repeated fixed64 attacking_pokemon_id = 1;
	string combat_npc_template_id = 2;
}

message OpenTradingOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FRIEND_NOT_FOUND = 3;
		ERROR_INVALID_PLAYER_ID = 4;
		ERROR_INVALID_STATE = 5;
		ERROR_STATE_HANDLER = 6;
		ERROR_TRADING_EXPIRED = 7;
		ERROR_TRADING_COOLDOWN = 8;
		ERROR_PLAYER_ALREADY_OPENED = 9;
		ERROR_FRIEND_OUT_OF_RANGE = 10;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 11;
		ERROR_PLAYER_REACHED_DAILY_LIMIT = 12;
		ERROR_FRIEND_REACHED_DAILY_LIMIT = 13;
		ERROR_PLAYER_NOT_ENOUGH_STARDUST = 14;
		ERROR_FRIEND_NOT_ENOUGH_STARDUST = 15;
		ERROR_FRIEND_BELOW_MINIMUM_LEVEL = 16;
	}

	Result result = 1;
	TradingProto trading = 2;
}

message OpenTradingProto {
	string player_id = 1;
}

message ParticipationProto {
	int32 individual_damage_pokeballs = 1;
	int32 team_damage_pokeballs = 2;
	int32 gym_ownership_pokeballs = 3;
	int32 base_pokeballs = 4;
	double blue_percentage = 5;
	double red_percentage = 6;
	double yellow_percentage = 7;
	float bonus_item_multiplier = 8;
	FriendshipLevelMilestone highest_friendship_milestone = 9;
	int32 highest_friendship_pokeballs = 10;
}

message PartyRecommendationSettingsProto {
	enum PartyRcommendationMode {
		UNSET = 0;
		PARTY_RECOMMENDATION_MODE_1 = 1;
		PARTY_RECOMMENDATION_MODE_2 = 2;
		PARTY_RECOMMENDATION_MODE_3 = 3;
		PARTY_RECOMMENDATION_MODE_4 = 4;
	}

	PartyRcommendationMode mode = 1;
	float variance = 2;
	float third_move_weight = 3;
}

message PasscodeRedeemTelemetry {
	string result = 1;
	string passcode = 2;
	string country_code = 3;
	string language_code = 4;
	string bundle_version = 5;
}

message PasscodeRewardsLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	string passcode = 2;
	RedeemPasscodeRewardProto rewards = 3;
}

message PasscodeSettingsProto {
	bool show_passcode_in_store = 1;
	bool use_passcode_v2 = 2;
}

message PermissionsFlowTelemetry {
	PermissionContextTelemetryIds permission_context_telemetry_ids = 1;
	DeviceServiceTelemetryIds device_service_telemetry_ids = 2;
	PermissionFlowStepTelemetryIds permission_flow_step_telemetry_ids = 3;
	bool success = 4;
}

message PlannedDowntimeSettingsProto {
	int64 downtime_timestamp_ms = 1;
	int64 no_actions_window_sec_from_downtime = 2;
}

message PlatformMetricData {
	enum Kind {
		UNSPECIFIED = 0;
		GAUGE = 1;
		DELTA = 2;
		CUMULATIVE = 3;
	}

	TelemetryCommon common_telemetry = 1;
	int64 long_value = 2;
	double double_value = 3;
	bool boolean_value = 4;
	Distribution distribution = 5;
	Kind metric_kind = 6;
}

message PlatypusRolloutSettingsProto {
	int32 buddy_v2_min_player_level = 1;
	int32 buddy_multiplayer_min_player_level = 2;
	bool enable_monodepth = 3;
	WallabySettingsProto wallaby_settings = 4;
}

message PlayerAvatarProto {
	int32 skin = 2;
	int32 hair = 3;
	int32 shirt = 4;
	int32 pants = 5;
	int32 hat = 6;
	int32 shoes = 7;
	int32 avatar = 8;
	int32 eyes = 9;
	int32 backpack = 10;
	string avatar_hair = 11;
	string avatar_shirt = 12;
	string avatar_pants = 13;
	string avatar_hat = 14;
	string avatar_shoes = 15;
	string avatar_eyes = 16;
	string avatar_backpack = 17;
	string avatar_gloves = 18;
	string avatar_socks = 19;
	string avatar_belt = 20;
	string avatar_glasses = 21;
	string avatar_necklace = 22;
	string avatar_skin = 23;
	string avatar_pose = 24;
}

message PlayerBadgeProto {
	HoloBadgeType badge_type = 1;
	int32 rank = 2;
	int32 start_value = 3;
	int32 end_value = 4;
	double current_value = 5;
}

message PlayerCameraProto {
	bool default_camera = 1;
}

message PlayerCombatBadgeStatsProto {
	int32 num_won = 1;
	int32 num_total = 2;
}

message PlayerCombatStatsProto {
	map<int32, PlayerCombatBadgeStatsProto> badges = 1;
}

message PlayerCurrencyProto {
	int32 gems = 1;
}

message PlayerFriendDisplayProto {
	PokemonDisplayProto buddy = 1;
	int32 buddy_display_pokemon_id = 2;
	string buddy_pokemon_nickname = 3;
	PokemonDisplayProto last_pokemon_caught = 4;
	int32 last_pokemon_caught_display_id = 5;
	int64 last_pokemon_caught_timestamp = 6;
	int32 buddy_candy_awarded = 7;
}

message PlayerHudNotificationClickTelemetry {
	string notification_category = 1;
}

message PlayerLevelSettingsProto {
	repeated int32 rank_num = 1;
	repeated int32 required_exp = 2;
	repeated float cp_multiplier = 3;
	int32 max_egg_player_level = 4;
	int32 max_encounter_player_level = 5;
	int32 max_raid_encounter_player_level = 6;
	int32 max_quest_encounter_player_level = 7;
	int32 max_vs_seeker_encounter_player_level = 8;
}

message PlayerLocaleProto {
	string country = 1;
	string language = 2;
	string timezone = 3;
}

message PlayerProfileOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	message GymBadges {
		repeated AwardedGymBadge gym_badge = 1;
		int32 total = 2;
	}

	Result result = 1;
	int64 start_time = 2;
	repeated PlayerBadgeProto badges = 3;
	GymBadges gym_badges = 4;
}

message PlayerProfileProto {
	string player_name = 1;
}

message PlayerPublicProfileProto {
	string name = 1;
	int32 level = 2;
	PlayerAvatarProto avatar = 3;
	Team team = 4;
	int32 battles_won = 5;
	float km_walked = 6;
	int32 caught_pokemon = 7;
	GymBadgeType gym_badge_type = 8;
	repeated PlayerBadgeProto badges = 9;
	int64 experience = 10;
	bool has_shared_ex_pass = 11;
	int32 combat_rank = 12;
	float combat_rating = 13;
}

message PlayerRaidInfoProto {
	int32 total_completed_raids = 3;
	int32 total_completed_legendary_raids = 4;
	repeated RaidProto raids = 5;
}

message PlayerStatsProto {
	int32 level = 1;
	int64 experience = 2;
	int64 prev_level_exp = 3;
	int64 next_level_exp = 4;
	float km_walked = 5;
	int32 num_pokemon_encountered = 6;
	int32 num_unique_pokedex_entries = 7;
	int32 num_pokemon_captured = 8;
	int32 num_evolutions = 9;
	int32 poke_stop_visits = 10;
	int32 number_of_pokeball_thrown = 11;
	int32 num_eggs_hatched = 12;
	int32 big_magikarp_caught = 13;
	int32 num_battle_attack_won = 14;
	int32 num_battle_attack_total = 15;
	int32 num_battle_defended_won = 16;
	int32 num_battle_training_won = 17;
	int32 num_battle_training_total = 18;
	int32 prestige_raised_total = 19;
	int32 prestige_dropped_total = 20;
	int32 num_pokemon_deployed = 21;
	repeated int32 num_pokemon_caught_by_type = 22;
	int32 small_rattata_caught = 23;
	double used_km_pool = 24;
	int64 last_km_refill_ms = 25;
	int32 num_raid_battle_won = 26;
	int32 num_raid_battle_total = 27;
	int32 num_legendary_battle_won = 28;
	int32 num_legendary_battle_total = 29;
	int32 num_berries_fed = 30;
	int64 total_defended_ms = 31;
	repeated HoloBadgeType event_badges = 32;
	float km_walked_past_active_day = 33;
	int32 num_challenge_quests_completed = 34;
	int32 num_trades = 35;
	int32 num_max_level_friends = 36;
	int64 trade_accumulated_distance_km = 37;
	int64 fitness_report_last_check_bucket = 38;
	PlayerCombatStatsProto combat_stats = 39;
	int32 num_npc_combats_won = 40;
	int32 num_npc_combats_total = 41;
	int32 num_photobomb_seen = 42;
	int32 num_pokemon_purified = 43;
	int32 num_grunts_defeated = 44;
	int32 num_best_buddies = 47;
	int32 num_wayfarer_agreement = 54;
	int64 wayfarer_agreement_update_ms = 55;
}

message PoiGlobalSettingsProto {
	bool is_enabled = 1;
	repeated string player_submission_type_enabled = 2;
}

message PokeBallAttributesProto {
	HoloItemEffect item_effect = 1;
	float capture_multi = 2;
	float capture_multi_effect = 3;
	float item_effect_mod = 4;
}

message PokeCandyProto {
	fixed64 pokemon_id = 1;
	int32 candy_count = 2;
}

message PokecoinPurchaseDisplayGmtProto {
	bool feature_enabled = 1;
}

message PokecoinPurchaseDisplaySettingsProto {
	bool feature_enabled = 1;
	repeated string enabled_countries = 2;
	repeated string enabled_currencies = 3;
	bool use_pokecoin_purchase_display_gmt = 4;
}

message PokecoinSectionProto {
	int32 coins_earned_today = 1;
	int32 max_coins_per_day = 2;
	string coins_quest_id = 3;
}

message PokedexEntryProto {
	int32 pokedex_entry_number = 1;
	int32 times_encountered = 2;
	int32 times_captured = 3;
	int32 evolution_stone_pieces = 4;
	int32 evolution_stones = 5;
	repeated PokemonDisplayProto.Costume captured_costumes = 6;
	repeated PokemonDisplayProto.Form captured_forms = 7;
	repeated PokemonDisplayProto.Gender captured_genders = 8;
	bool captured_shiny = 9;
	repeated PokemonDisplayProto.Costume encountered_costumes = 10;
	repeated PokemonDisplayProto.Form encountered_forms = 11;
	repeated PokemonDisplayProto.Gender encountered_genders = 12;
	bool encountered_shiny = 13;
	int32 times_lucky_received = 14;
	int32 times_purified = 15;
}

message PokemonBulkUpgradeSettingsProto {
	bool enable_client_side_change = 1;
}

message PokemonCameraAttributesProto {
	float disk_radius_m = 1;
	float cyl_radius_m = 2;
	float cyl_height_m = 3;
	float cyl_ground_m = 4;
	float shoulder_mode_scale = 5;
}

message PokemonCandyRewardProto {
	HoloPokemonId pokemon_id = 1;
	int32 amount = 2;
}

message PokemonCombatStatsProto {
	int32 num_won = 1;
	int32 num_total = 2;
}

message PokemonDisplayProto {
	enum Alignment {
		ALIGNMENT_UNSET = 0;
		SHADOW = 1;
		PURIFIED = 2;
	}

	enum Costume {
		UNSET = 0;
		HOLIDAY_2016 = 1;
		ANNIVERSARY = 2;
		ONE_YEAR_ANNIVERSARY = 3;
		HALLOWEEN_2017 = 4;
		SUMMER_2018 = 5;
		FALL_2018 = 6;
		NOVEMBER_2018 = 7;
		WINTER_2018 = 8;
		FEB_2019 = 9;
		MAY_2019_NOEVOLVE = 10;
		JAN_2020_NOEVOLVE = 11;
		APRIL_2020_NOEVOLVE = 12;
		SAFARI_2020_NOEVOLVE = 13;
		SPRING_2020_NOEVOLVE = 14;
		SUMMER_2020_NOEVOLVE = 15;
		FALL_2020_NOEVOLVE = 16;
		WINTER_2020_NOEVOLVE = 17;
		NOT_FOR_RELEASE_ALPHA = 18;
		NOT_FOR_RELEASE_BETA = 19;
		NOT_FOR_RELEASE_GAMMA = 20;
		NOT_FOR_RELEASE_NOEVOLVE = 21;
		KANTO_2020_NOEVOLVE = 22;
		JOHTO_2020_NOEVOLVE = 23;
		HOENN_2020_NOEVOLVE = 24;
		SINNOH_2020_NOEVOLVE = 25;
	}

	enum Form {
		FORM_UNSET = 0;
		UNOWN_A = 1;
		UNOWN_B = 2;
		UNOWN_C = 3;
		UNOWN_D = 4;
		UNOWN_E = 5;
		UNOWN_F = 6;
		UNOWN_G = 7;
		UNOWN_H = 8;
		UNOWN_I = 9;
		UNOWN_J = 10;
		UNOWN_K = 11;
		UNOWN_L = 12;
		UNOWN_M = 13;
		UNOWN_N = 14;
		UNOWN_O = 15;
		UNOWN_P = 16;
		UNOWN_Q = 17;
		UNOWN_R = 18;
		UNOWN_S = 19;
		UNOWN_T = 20;
		UNOWN_U = 21;
		UNOWN_V = 22;
		UNOWN_W = 23;
		UNOWN_X = 24;
		UNOWN_Y = 25;
		UNOWN_Z = 26;
		UNOWN_EXCLAMATION_POINT = 27;
		UNOWN_QUESTION_MARK = 28;
		CASTFORM_NORMAL = 29;
		CASTFORM_SUNNY = 30;
		CASTFORM_RAINY = 31;
		CASTFORM_SNOWY = 32;
		DEOXYS_NORMAL = 33;
		DEOXYS_ATTACK = 34;
		DEOXYS_DEFENSE = 35;
		DEOXYS_SPEED = 36;
		SPINDA_00 = 37;
		SPINDA_01 = 38;
		SPINDA_02 = 39;
		SPINDA_03 = 40;
		SPINDA_04 = 41;
		SPINDA_05 = 42;
		SPINDA_06 = 43;
		SPINDA_07 = 44;
		RATTATA_NORMAL = 45;
		RATTATA_ALOLA = 46;
		RATICATE_NORMAL = 47;
		RATICATE_ALOLA = 48;
		RAICHU_NORMAL = 49;
		RAICHU_ALOLA = 50;
		SANDSHREW_NORMAL = 51;
		SANDSHREW_ALOLA = 52;
		SANDSLASH_NORMAL = 53;
		SANDSLASH_ALOLA = 54;
		VULPIX_NORMAL = 55;
		VULPIX_ALOLA = 56;
		NINETALES_NORMAL = 57;
		NINETALES_ALOLA = 58;
		DIGLETT_NORMAL = 59;
		DIGLETT_ALOLA = 60;
		DUGTRIO_NORMAL = 61;
		DUGTRIO_ALOLA = 62;
		MEOWTH_NORMAL = 63;
		MEOWTH_ALOLA = 64;
		PERSIAN_NORMAL = 65;
		PERSIAN_ALOLA = 66;
		GEODUDE_NORMAL = 67;
		GEODUDE_ALOLA = 68;
		GRAVELER_NORMAL = 69;
		GRAVELER_ALOLA = 70;
		GOLEM_NORMAL = 71;
		GOLEM_ALOLA = 72;
		GRIMER_NORMAL = 73;
		GRIMER_ALOLA = 74;
		MUK_NORMAL = 75;
		MUK_ALOLA = 76;
		EXEGGUTOR_NORMAL = 77;
		EXEGGUTOR_ALOLA = 78;
		MAROWAK_NORMAL = 79;
		MAROWAK_ALOLA = 80;
		ROTOM_NORMAL = 81;
		ROTOM_FROST = 82;
		ROTOM_FAN = 83;
		ROTOM_MOW = 84;
		ROTOM_WASH = 85;
		ROTOM_HEAT = 86;
		WORMADAM_PLANT = 87;
		WORMADAM_SANDY = 88;
		WORMADAM_TRASH = 89;
		GIRATINA_ALTERED = 90;
		GIRATINA_ORIGIN = 91;
		SHAYMIN_SKY = 92;
		SHAYMIN_LAND = 93;
		CHERRIM_OVERCAST = 94;
		CHERRIM_SUNNY = 95;
		SHELLOS_WEST_SEA = 96;
		SHELLOS_EAST_SEA = 97;
		GASTRODON_WEST_SEA = 98;
		GASTRODON_EAST_SEA = 99;
		ARCEUS_NORMAL = 100;
		ARCEUS_FIGHTING = 101;
		ARCEUS_FLYING = 102;
		ARCEUS_POISON = 103;
		ARCEUS_GROUND = 104;
		ARCEUS_ROCK = 105;
		ARCEUS_BUG = 106;
		ARCEUS_GHOST = 107;
		ARCEUS_STEEL = 108;
		ARCEUS_FIRE = 109;
		ARCEUS_WATER = 110;
		ARCEUS_GRASS = 111;
		ARCEUS_ELECTRIC = 112;
		ARCEUS_PSYCHIC = 113;
		ARCEUS_ICE = 114;
		ARCEUS_DRAGON = 115;
		ARCEUS_DARK = 116;
		ARCEUS_FAIRY = 117;
		BURMY_PLANT = 118;
		BURMY_SANDY = 119;
		BURMY_TRASH = 120;
		SPINDA_08 = 121;
		SPINDA_09 = 122;
		SPINDA_10 = 123;
		SPINDA_11 = 124;
		SPINDA_12 = 125;
		SPINDA_13 = 126;
		SPINDA_14 = 127;
		SPINDA_15 = 128;
		SPINDA_16 = 129;
		SPINDA_17 = 130;
		SPINDA_18 = 131;
		SPINDA_19 = 132;
		MEWTWO_A = 133;
		MEWTWO_NORMAL = 135;
		BASCULIN_RED_STRIPED = 136;
		BASCULIN_BLUE_STRIPED = 137;
		DARMANITAN_STANDARD = 138;
		DARMANITAN_ZEN = 139;
		TORNADUS_INCARNATE = 140;
		TORNADUS_THERIAN = 141;
		THUNDURUS_INCARNATE = 142;
		THUNDURUS_THERIAN = 143;
		LANDORUS_INCARNATE = 144;
		LANDORUS_THERIAN = 145;
		KYUREM_NORMAL = 146;
		KYUREM_BLACK = 147;
		KYUREM_WHITE = 148;
		KELDEO_ORDINARY = 149;
		KELDEO_RESOLUTE = 150;
		MELOETTA_ARIA = 151;
		MELOETTA_PIROUETTE = 152;
		RATTATA_SHADOW = 153;
		RATTATA_PURIFIED = 154;
		RATICATE_SHADOW = 155;
		RATICATE_PURIFIED = 156;
		ZUBAT_NORMAL = 157;
		ZUBAT_SHADOW = 158;
		ZUBAT_PURIFIED = 159;
		GOLBAT_NORMAL = 160;
		GOLBAT_SHADOW = 161;
		GOLBAT_PURIFIED = 162;
		BULBASAUR_NORMAL = 163;
		BULBASAUR_SHADOW = 164;
		BULBASAUR_PURIFIED = 165;
		IVYSAUR_NORMAL = 166;
		IVYSAUR_SHADOW = 167;
		IVYSAUR_PURIFIED = 168;
		VENUSAUR_NORMAL = 169;
		VENUSAUR_SHADOW = 170;
		VENUSAUR_PURIFIED = 171;
		CHARMANDER_NORMAL = 172;
		CHARMANDER_SHADOW = 173;
		CHARMANDER_PURIFIED = 174;
		CHARMELEON_NORMAL = 175;
		CHARMELEON_SHADOW = 176;
		CHARMELEON_PURIFIED = 177;
		CHARIZARD_NORMAL = 178;
		CHARIZARD_SHADOW = 179;
		CHARIZARD_PURIFIED = 180;
		SQUIRTLE_NORMAL = 181;
		SQUIRTLE_SHADOW = 182;
		SQUIRTLE_PURIFIED = 183;
		WARTORTLE_NORMAL = 184;
		WARTORTLE_SHADOW = 185;
		WARTORTLE_PURIFIED = 186;
		BLASTOISE_NORMAL = 187;
		BLASTOISE_SHADOW = 188;
		BLASTOISE_PURIFIED = 189;
		DRATINI_NORMAL = 190;
		DRATINI_SHADOW = 191;
		DRATINI_PURIFIED = 192;
		DRAGONAIR_NORMAL = 193;
		DRAGONAIR_SHADOW = 194;
		DRAGONAIR_PURIFIED = 195;
		DRAGONITE_NORMAL = 196;
		DRAGONITE_SHADOW = 197;
		DRAGONITE_PURIFIED = 198;
		SNORLAX_NORMAL = 199;
		SNORLAX_SHADOW = 200;
		SNORLAX_PURIFIED = 201;
		CROBAT_NORMAL = 202;
		CROBAT_SHADOW = 203;
		CROBAT_PURIFIED = 204;
		MUDKIP_NORMAL = 205;
		MUDKIP_SHADOW = 206;
		MUDKIP_PURIFIED = 207;
		MARSHTOMP_NORMAL = 208;
		MARSHTOMP_SHADOW = 209;
		MARSHTOMP_PURIFIED = 210;
		SWAMPERT_NORMAL = 211;
		SWAMPERT_SHADOW = 212;
		SWAMPERT_PURIFIED = 213;
		DROWZEE_NORMAL = 214;
		DROWZEE_SHADOW = 215;
		DROWZEE_PURIFIED = 216;
		HYPNO_NORMAL = 217;
		HYPNO_SHADOW = 218;
		HYPNO_PURIFIED = 219;
		GRIMER_SHADOW = 220;
		GRIMER_PURIFIED = 221;
		MUK_SHADOW = 222;
		MUK_PURIFIED = 223;
		CUBONE_NORMAL = 224;
		CUBONE_SHADOW = 225;
		CUBONE_PURIFIED = 226;
		MAROWAK_SHADOW = 227;
		MAROWAK_PURIFIED = 228;
		HOUNDOUR_NORMAL = 229;
		HOUNDOUR_SHADOW = 230;
		HOUNDOUR_PURIFIED = 231;
		HOUNDOOM_NORMAL = 232;
		HOUNDOOM_SHADOW = 233;
		HOUNDOOM_PURIFIED = 234;
		POLIWAG_NORMAL = 235;
		POLIWAG_SHADOW = 236;
		POLIWAG_PURIFIED = 237;
		POLIWHIRL_NORMAL = 238;
		POLIWHIRL_SHADOW = 239;
		POLIWHIRL_PURIFIED = 240;
		POLIWRATH_NORMAL = 241;
		POLIWRATH_SHADOW = 242;
		POLIWRATH_PURIFIED = 243;
		POLITOED_NORMAL = 244;
		POLITOED_SHADOW = 245;
		POLITOED_PURIFIED = 246;
		SCYTHER_NORMAL = 247;
		SCYTHER_SHADOW = 248;
		SCYTHER_PURIFIED = 249;
		SCIZOR_NORMAL = 250;
		SCIZOR_SHADOW = 251;
		SCIZOR_PURIFIED = 252;
		MAGIKARP_NORMAL = 253;
		MAGIKARP_SHADOW = 254;
		MAGIKARP_PURIFIED = 255;
		GYARADOS_NORMAL = 256;
		GYARADOS_SHADOW = 257;
		GYARADOS_PURIFIED = 258;
		VENONAT_NORMAL = 259;
		VENONAT_SHADOW = 260;
		VENONAT_PURIFIED = 261;
		VENOMOTH_NORMAL = 262;
		VENOMOTH_SHADOW = 263;
		VENOMOTH_PURIFIED = 264;
		ODDISH_NORMAL = 265;
		ODDISH_SHADOW = 266;
		ODDISH_PURIFIED = 267;
		GLOOM_NORMAL = 268;
		GLOOM_SHADOW = 269;
		GLOOM_PURIFIED = 270;
		VILEPLUME_NORMAL = 271;
		VILEPLUME_SHADOW = 272;
		VILEPLUME_PURIFIED = 273;
		BELLOSSOM_NORMAL = 274;
		BELLOSSOM_SHADOW = 275;
		BELLOSSOM_PURIFIED = 276;
		HITMONCHAN_NORMAL = 277;
		HITMONCHAN_SHADOW = 278;
		HITMONCHAN_PURIFIED = 279;
		GROWLITHE_NORMAL = 280;
		GROWLITHE_SHADOW = 281;
		GROWLITHE_PURIFIED = 282;
		ARCANINE_NORMAL = 283;
		ARCANINE_SHADOW = 284;
		ARCANINE_PURIFIED = 285;
		PSYDUCK_NORMAL = 286;
		PSYDUCK_SHADOW = 287;
		PSYDUCK_PURIFIED = 288;
		GOLDUCK_NORMAL = 289;
		GOLDUCK_SHADOW = 290;
		GOLDUCK_PURIFIED = 291;
		RALTS_NORMAL = 292;
		RALTS_SHADOW = 293;
		RALTS_PURIFIED = 294;
		KIRLIA_NORMAL = 295;
		KIRLIA_SHADOW = 296;
		KIRLIA_PURIFIED = 297;
		GARDEVOIR_NORMAL = 298;
		GARDEVOIR_SHADOW = 299;
		GARDEVOIR_PURIFIED = 300;
		GALLADE_NORMAL = 301;
		GALLADE_SHADOW = 302;
		GALLADE_PURIFIED = 303;
		ABRA_NORMAL = 304;
		ABRA_SHADOW = 305;
		ABRA_PURIFIED = 306;
		KADABRA_NORMAL = 307;
		KADABRA_SHADOW = 308;
		KADABRA_PURIFIED = 309;
		ALAKAZAM_NORMAL = 310;
		ALAKAZAM_SHADOW = 311;
		ALAKAZAM_PURIFIED = 312;
		LARVITAR_NORMAL = 313;
		LARVITAR_SHADOW = 314;
		LARVITAR_PURIFIED = 315;
		PUPITAR_NORMAL = 316;
		PUPITAR_SHADOW = 317;
		PUPITAR_PURIFIED = 318;
		TYRANITAR_NORMAL = 319;
		TYRANITAR_SHADOW = 320;
		TYRANITAR_PURIFIED = 321;
		LAPRAS_NORMAL = 322;
		LAPRAS_SHADOW = 323;
		LAPRAS_PURIFIED = 324;
		DEERLING_SPRING = 585;
		DEERLING_SUMMER = 586;
		DEERLING_AUTUMN = 587;
		DEERLING_WINTER = 588;
		SAWSBUCK_SPRING = 589;
		SAWSBUCK_SUMMER = 590;
		SAWSBUCK_AUTUMN = 591;
		SAWSBUCK_WINTER = 592;
		GENESECT_NORMAL = 593;
		GENESECT_SHOCK = 594;
		GENESECT_BURN = 595;
		GENESECT_CHILL = 596;
		GENESECT_DOUSE = 597;
		PIKACHU_NORMAL = 598;
		WURMPLE_NORMAL = 600;
		WOBBUFFET_NORMAL = 602;
		CACNEA_NORMAL = 610;
		CACNEA_SHADOW = 611;
		CACNEA_PURIFIED = 612;
		CACTURNE_NORMAL = 613;
		CACTURNE_SHADOW = 614;
		CACTURNE_PURIFIED = 615;
		WEEDLE_NORMAL = 616;
		WEEDLE_SHADOW = 617;
		WEEDLE_PURIFIED = 618;
		KAKUNA_NORMAL = 619;
		KAKUNA_SHADOW = 620;
		KAKUNA_PURIFIED = 621;
		BEEDRILL_NORMAL = 622;
		BEEDRILL_SHADOW = 623;
		BEEDRILL_PURIFIED = 624;
		SEEDOT_NORMAL = 625;
		SEEDOT_SHADOW = 626;
		SEEDOT_PURIFIED = 627;
		NUZLEAF_NORMAL = 628;
		NUZLEAF_SHADOW = 629;
		NUZLEAF_PURIFIED = 630;
		SHIFTRY_NORMAL = 631;
		SHIFTRY_SHADOW = 632;
		SHIFTRY_PURIFIED = 633;
		MAGMAR_NORMAL = 634;
		MAGMAR_SHADOW = 635;
		MAGMAR_PURIFIED = 636;
		MAGMORTAR_NORMAL = 637;
		MAGMORTAR_SHADOW = 638;
		MAGMORTAR_PURIFIED = 639;
		ELECTABUZZ_NORMAL = 640;
		ELECTABUZZ_SHADOW = 641;
		ELECTABUZZ_PURIFIED = 642;
		ELECTIVIRE_NORMAL = 643;
		ELECTIVIRE_SHADOW = 644;
		ELECTIVIRE_PURIFIED = 645;
		MAREEP_NORMAL = 646;
		MAREEP_SHADOW = 647;
		MAREEP_PURIFIED = 648;
		FLAAFFY_NORMAL = 649;
		FLAAFFY_SHADOW = 650;
		FLAAFFY_PURIFIED = 651;
		AMPHAROS_NORMAL = 652;
		AMPHAROS_SHADOW = 653;
		AMPHAROS_PURIFIED = 654;
		MAGNEMITE_NORMAL = 655;
		MAGNEMITE_SHADOW = 656;
		MAGNEMITE_PURIFIED = 657;
		MAGNETON_NORMAL = 658;
		MAGNETON_SHADOW = 659;
		MAGNETON_PURIFIED = 660;
		MAGNEZONE_NORMAL = 661;
		MAGNEZONE_SHADOW = 662;
		MAGNEZONE_PURIFIED = 663;
		BELLSPROUT_NORMAL = 664;
		BELLSPROUT_SHADOW = 665;
		BELLSPROUT_PURIFIED = 666;
		WEEPINBELL_NORMAL = 667;
		WEEPINBELL_SHADOW = 668;
		WEEPINBELL_PURIFIED = 669;
		VICTREEBEL_NORMAL = 670;
		VICTREEBEL_SHADOW = 671;
		VICTREEBEL_PURIFIED = 672;
		SANDSHREW_SHADOW = 673;
		SANDSHREW_PURIFIED = 674;
		SANDSLASH_SHADOW = 675;
		SANDSLASH_PURIFIED = 676;
		PORYGON_NORMAL = 677;
		PORYGON_SHADOW = 678;
		PORYGON_PURIFIED = 679;
		PORYGON2_NORMAL = 680;
		PORYGON2_SHADOW = 681;
		PORYGON2_PURIFIED = 682;
		PORYGON_Z_NORMAL = 683;
		PORYGON_Z_SHADOW = 684;
		PORYGON_Z_PURIFIED = 685;
		WOBBUFFET_SHADOW = 686;
		WOBBUFFET_PURIFIED = 687;
		TURTWIG_NORMAL = 688;
		TURTWIG_SHADOW = 689;
		TURTWIG_PURIFIED = 690;
		GROTLE_NORMAL = 691;
		GROTLE_SHADOW = 692;
		GROTLE_PURIFIED = 693;
		TORTERRA_NORMAL = 694;
		TORTERRA_SHADOW = 695;
		TORTERRA_PURIFIED = 696;
		EKANS_NORMAL = 697;
		EKANS_SHADOW = 698;
		EKANS_PURIFIED = 699;
		ARBOK_NORMAL = 700;
		ARBOK_SHADOW = 701;
		ARBOK_PURIFIED = 702;
		KOFFING_NORMAL = 703;
		KOFFING_SHADOW = 704;
		KOFFING_PURIFIED = 705;
		WEEZING_NORMAL = 706;
		WEEZING_SHADOW = 707;
		WEEZING_PURIFIED = 708;
		MEOWTH_SHADOW = 709;
		MEOWTH_PURIFIED = 710;
		PERSIAN_SHADOW = 711;
		PERSIAN_PURIFIED = 712;
		HITMONLEE_NORMAL = 713;
		HITMONLEE_SHADOW = 714;
		HITMONLEE_PURIFIED = 715;
		ARTICUNO_NORMAL = 716;
		ARTICUNO_SHADOW = 717;
		ARTICUNO_PURIFIED = 718;
		MISDREAVUS_NORMAL = 719;
		MISDREAVUS_SHADOW = 720;
		MISDREAVUS_PURIFIED = 721;
		MISMAGIUS_NORMAL = 722;
		MISMAGIUS_SHADOW = 723;
		MISMAGIUS_PURIFIED = 724;
		VULPIX_SHADOW = 725;
		VULPIX_PURIFIED = 726;
		NINETALES_SHADOW = 727;
		NINETALES_PURIFIED = 728;
		EXEGGCUTE_NORMAL = 729;
		EXEGGCUTE_SHADOW = 730;
		EXEGGCUTE_PURIFIED = 731;
		EXEGGUTOR_SHADOW = 732;
		EXEGGUTOR_PURIFIED = 733;
		CARVANHA_NORMAL = 734;
		CARVANHA_SHADOW = 735;
		CARVANHA_PURIFIED = 736;
		SHARPEDO_NORMAL = 737;
		SHARPEDO_SHADOW = 738;
		SHARPEDO_PURIFIED = 739;
		OMANYTE_NORMAL = 740;
		OMANYTE_SHADOW = 741;
		OMANYTE_PURIFIED = 742;
		OMASTAR_NORMAL = 743;
		OMASTAR_SHADOW = 744;
		OMASTAR_PURIFIED = 745;
		TRAPINCH_NORMAL = 746;
		TRAPINCH_SHADOW = 747;
		TRAPINCH_PURIFIED = 748;
		VIBRAVA_NORMAL = 749;
		VIBRAVA_SHADOW = 750;
		VIBRAVA_PURIFIED = 751;
		FLYGON_NORMAL = 752;
		FLYGON_SHADOW = 753;
		FLYGON_PURIFIED = 754;
		BAGON_NORMAL = 755;
		BAGON_SHADOW = 756;
		BAGON_PURIFIED = 757;
		SHELGON_NORMAL = 758;
		SHELGON_SHADOW = 759;
		SHELGON_PURIFIED = 760;
		SALAMENCE_NORMAL = 761;
		SALAMENCE_SHADOW = 762;
		SALAMENCE_PURIFIED = 763;
		BELDUM_NORMAL = 764;
		BELDUM_SHADOW = 765;
		BELDUM_PURIFIED = 766;
		METANG_NORMAL = 767;
		METANG_SHADOW = 768;
		METANG_PURIFIED = 769;
		METAGROSS_NORMAL = 770;
		METAGROSS_SHADOW = 771;
		METAGROSS_PURIFIED = 772;
		ZAPDOS_NORMAL = 773;
		ZAPDOS_SHADOW = 774;
		ZAPDOS_PURIFIED = 775;
		NIDORAN_NORMAL = 776;
		NIDORAN_SHADOW = 777;
		NIDORAN_PURIFIED = 778;
		NIDORINA_NORMAL = 779;
		NIDORINA_SHADOW = 780;
		NIDORINA_PURIFIED = 781;
		NIDOQUEEN_NORMAL = 782;
		NIDOQUEEN_SHADOW = 783;
		NIDOQUEEN_PURIFIED = 784;
		NIDORINO_NORMAL = 785;
		NIDORINO_SHADOW = 786;
		NIDORINO_PURIFIED = 787;
		NIDOKING_NORMAL = 788;
		NIDOKING_SHADOW = 789;
		NIDOKING_PURIFIED = 790;
		STUNKY_NORMAL = 791;
		STUNKY_SHADOW = 792;
		STUNKY_PURIFIED = 793;
		SKUNTANK_NORMAL = 794;
		SKUNTANK_SHADOW = 795;
		SKUNTANK_PURIFIED = 796;
		SNEASEL_NORMAL = 797;
		SNEASEL_SHADOW = 798;
		SNEASEL_PURIFIED = 799;
		WEAVILE_NORMAL = 800;
		WEAVILE_SHADOW = 801;
		WEAVILE_PURIFIED = 802;
		GLIGAR_NORMAL = 803;
		GLIGAR_SHADOW = 804;
		GLIGAR_PURIFIED = 805;
		GLISCOR_NORMAL = 806;
		GLISCOR_SHADOW = 807;
		GLISCOR_PURIFIED = 808;
		MACHOP_NORMAL = 809;
		MACHOP_SHADOW = 810;
		MACHOP_PURIFIED = 811;
		MACHOKE_NORMAL = 812;
		MACHOKE_SHADOW = 813;
		MACHOKE_PURIFIED = 814;
		MACHAMP_NORMAL = 815;
		MACHAMP_SHADOW = 816;
		MACHAMP_PURIFIED = 817;
		CHIMCHAR_NORMAL = 818;
		CHIMCHAR_SHADOW = 819;
		CHIMCHAR_PURIFIED = 820;
		MONFERNO_NORMAL = 821;
		MONFERNO_SHADOW = 822;
		MONFERNO_PURIFIED = 823;
		INFERNAPE_NORMAL = 824;
		INFERNAPE_SHADOW = 825;
		INFERNAPE_PURIFIED = 826;
		SHUCKLE_NORMAL = 827;
		SHUCKLE_SHADOW = 828;
		SHUCKLE_PURIFIED = 829;
		ABSOL_NORMAL = 830;
		ABSOL_SHADOW = 831;
		ABSOL_PURIFIED = 832;
		MAWILE_NORMAL = 833;
		MAWILE_SHADOW = 834;
		MAWILE_PURIFIED = 835;
		MOLTRES_NORMAL = 836;
		MOLTRES_SHADOW = 837;
		MOLTRES_PURIFIED = 838;
		KANGASKHAN_NORMAL = 839;
		KANGASKHAN_SHADOW = 840;
		KANGASKHAN_PURIFIED = 841;
		DIGLETT_SHADOW = 842;
		DIGLETT_PURIFIED = 843;
		DUGTRIO_SHADOW = 844;
		DUGTRIO_PURIFIED = 845;
		RHYHORN_NORMAL = 846;
		RHYHORN_SHADOW = 847;
		RHYHORN_PURIFIED = 848;
		RHYDON_NORMAL = 849;
		RHYDON_SHADOW = 850;
		RHYDON_PURIFIED = 851;
		RHYPERIOR_NORMAL = 852;
		RHYPERIOR_SHADOW = 853;
		RHYPERIOR_PURIFIED = 854;
		MURKROW_NORMAL = 855;
		MURKROW_SHADOW = 856;
		MURKROW_PURIFIED = 857;
		HONCHKROW_NORMAL = 858;
		HONCHKROW_SHADOW = 859;
		HONCHKROW_PURIFIED = 860;
		GIBLE_NORMAL = 861;
		GIBLE_SHADOW = 862;
		GIBLE_PURIFIED = 863;
		GABITE_NORMAL = 864;
		GABITE_SHADOW = 865;
		GABITE_PURIFIED = 866;
		GARCHOMP_NORMAL = 867;
		GARCHOMP_SHADOW = 868;
		GARCHOMP_PURIFIED = 869;
		KRABBY_NORMAL = 870;
		KRABBY_SHADOW = 871;
		KRABBY_PURIFIED = 872;
		KINGLER_NORMAL = 873;
		KINGLER_SHADOW = 874;
		KINGLER_PURIFIED = 875;
		SHELLDER_NORMAL = 876;
		SHELLDER_SHADOW = 877;
		SHELLDER_PURIFIED = 878;
		CLOYSTER_NORMAL = 879;
		CLOYSTER_SHADOW = 880;
		CLOYSTER_PURIFIED = 881;
		GEODUDE_SHADOW = 882;
		GEODUDE_PURIFIED = 883;
		GRAVELER_SHADOW = 884;
		GRAVELER_PURIFIED = 885;
		GOLEM_SHADOW = 886;
		GOLEM_PURIFIED = 887;
		HIPPOPOTAS_NORMAL = 888;
		HIPPOPOTAS_SHADOW = 889;
		HIPPOPOTAS_PURIFIED = 890;
		HIPPOWDON_NORMAL = 891;
		HIPPOWDON_SHADOW = 892;
		HIPPOWDON_PURIFIED = 893;
		PIKACHU_FALL_2019 = 894;
		SQUIRTLE_FALL_2019 = 895;
		CHARMANDER_FALL_2019 = 896;
		BULBASAUR_FALL_2019 = 897;
		PINSIR_NORMAL = 898;
		PINSIR_SHADOW = 899;
		PINSIR_PURIFIED = 900;
		PIKACHU_VS_2019 = 901;
		ONIX_NORMAL = 902;
		ONIX_SHADOW = 903;
		ONIX_PURIFIED = 904;
		STEELIX_NORMAL = 905;
		STEELIX_SHADOW = 906;
		STEELIX_PURIFIED = 907;
		SHUPPET_NORMAL = 908;
		SHUPPET_SHADOW = 909;
		SHUPPET_PURIFIED = 910;
		BANETTE_NORMAL = 911;
		BANETTE_SHADOW = 912;
		BANETTE_PURIFIED = 913;
		DUSKULL_NORMAL = 914;
		DUSKULL_SHADOW = 915;
		DUSKULL_PURIFIED = 916;
		DUSCLOPS_NORMAL = 917;
		DUSCLOPS_SHADOW = 918;
		DUSCLOPS_PURIFIED = 919;
		DUSKNOIR_NORMAL = 920;
		DUSKNOIR_SHADOW = 921;
		DUSKNOIR_PURIFIED = 922;
		SABLEYE_NORMAL = 923;
		SABLEYE_SHADOW = 924;
		SABLEYE_PURIFIED = 925;
		SNORUNT_NORMAL = 926;
		SNORUNT_SHADOW = 927;
		SNORUNT_PURIFIED = 928;
		GLALIE_NORMAL = 929;
		GLALIE_SHADOW = 930;
		GLALIE_PURIFIED = 931;
		SNOVER_NORMAL = 932;
		SNOVER_SHADOW = 933;
		SNOVER_PURIFIED = 934;
		ABOMASNOW_NORMAL = 935;
		ABOMASNOW_SHADOW = 936;
		ABOMASNOW_PURIFIED = 937;
		DELIBIRD_NORMAL = 938;
		DELIBIRD_SHADOW = 939;
		DELIBIRD_PURIFIED = 940;
		STANTLER_NORMAL = 941;
		STANTLER_SHADOW = 942;
		STANTLER_PURIFIED = 943;
		WEEZING_GALARIAN = 944;
		ZIGZAGOON_NORMAL = 945;
		ZIGZAGOON_GALARIAN = 946;
		LINOONE_NORMAL = 947;
		LINOONE_GALARIAN = 948;
		PIKACHU_COPY_2019 = 949;
		VENUSAUR_COPY_2019 = 950;
		CHARIZARD_COPY_2019 = 951;
		BLASTOISE_COPY_2019 = 952;
		CATERPIE_NORMAL = 953;
		CATERPIE_SHADOW = 954;
		CATERPIE_PURIFIED = 955;
		METAPOD_NORMAL = 956;
		METAPOD_SHADOW = 957;
		METAPOD_PURIFIED = 958;
		BUTTERFREE_NORMAL = 959;
		BUTTERFREE_SHADOW = 960;
		BUTTERFREE_PURIFIED = 961;
		PIDGEY_NORMAL = 962;
		PIDGEY_SHADOW = 963;
		PIDGEY_PURIFIED = 964;
		PIDGEOTTO_NORMAL = 965;
		PIDGEOTTO_SHADOW = 966;
		PIDGEOTTO_PURIFIED = 967;
		PIDGEOT_NORMAL = 968;
		PIDGEOT_SHADOW = 969;
		PIDGEOT_PURIFIED = 970;
		SPEAROW_NORMAL = 971;
		SPEAROW_SHADOW = 972;
		SPEAROW_PURIFIED = 973;
		FEAROW_NORMAL = 974;
		FEAROW_SHADOW = 975;
		FEAROW_PURIFIED = 976;
		PIKACHU_SHADOW = 977;
		PIKACHU_PURIFIED = 978;
		RAICHU_SHADOW = 979;
		RAICHU_PURIFIED = 980;
		CLEFAIRY_NORMAL = 981;
		CLEFAIRY_SHADOW = 982;
		CLEFAIRY_PURIFIED = 983;
		CLEFABLE_NORMAL = 984;
		CLEFABLE_SHADOW = 985;
		CLEFABLE_PURIFIED = 986;
		JIGGLYPUFF_NORMAL = 987;
		JIGGLYPUFF_SHADOW = 988;
		JIGGLYPUFF_PURIFIED = 989;
		WIGGLYTUFF_NORMAL = 990;
		WIGGLYTUFF_SHADOW = 991;
		WIGGLYTUFF_PURIFIED = 992;
		PARAS_NORMAL = 993;
		PARAS_SHADOW = 994;
		PARAS_PURIFIED = 995;
		PARASECT_NORMAL = 996;
		PARASECT_SHADOW = 997;
		PARASECT_PURIFIED = 998;
		MANKEY_NORMAL = 999;
		MANKEY_SHADOW = 1000;
		MANKEY_PURIFIED = 1001;
		PRIMEAPE_NORMAL = 1002;
		PRIMEAPE_SHADOW = 1003;
		PRIMEAPE_PURIFIED = 1004;
		TENTACOOL_NORMAL = 1005;
		TENTACOOL_SHADOW = 1006;
		TENTACOOL_PURIFIED = 1007;
		TENTACRUEL_NORMAL = 1008;
		TENTACRUEL_SHADOW = 1009;
		TENTACRUEL_PURIFIED = 1010;
		PONYTA_NORMAL = 1011;
		PONYTA_SHADOW = 1012;
		PONYTA_PURIFIED = 1013;
		RAPIDASH_NORMAL = 1014;
		RAPIDASH_SHADOW = 1015;
		RAPIDASH_PURIFIED = 1016;
		SLOWPOKE_NORMAL = 1017;
		SLOWPOKE_SHADOW = 1018;
		SLOWPOKE_PURIFIED = 1019;
		SLOWBRO_NORMAL = 1020;
		SLOWBRO_SHADOW = 1021;
		SLOWBRO_PURIFIED = 1022;
		FARFETCHD_NORMAL = 1023;
		FARFETCHD_SHADOW = 1024;
		FARFETCHD_PURIFIED = 1025;
		DODUO_NORMAL = 1026;
		DODUO_SHADOW = 1027;
		DODUO_PURIFIED = 1028;
		DODRIO_NORMAL = 1029;
		DODRIO_SHADOW = 1030;
		DODRIO_PURIFIED = 1031;
		SEEL_NORMAL = 1032;
		SEEL_SHADOW = 1033;
		SEEL_PURIFIED = 1034;
		DEWGONG_NORMAL = 1035;
		DEWGONG_SHADOW = 1036;
		DEWGONG_PURIFIED = 1037;
		GASTLY_NORMAL = 1038;
		GASTLY_SHADOW = 1039;
		GASTLY_PURIFIED = 1040;
		HAUNTER_NORMAL = 1041;
		HAUNTER_SHADOW = 1042;
		HAUNTER_PURIFIED = 1043;
		GENGAR_NORMAL = 1044;
		GENGAR_SHADOW = 1045;
		GENGAR_PURIFIED = 1046;
		VOLTORB_NORMAL = 1047;
		VOLTORB_SHADOW = 1048;
		VOLTORB_PURIFIED = 1049;
		ELECTRODE_NORMAL = 1050;
		ELECTRODE_SHADOW = 1051;
		ELECTRODE_PURIFIED = 1052;
		LICKITUNG_NORMAL = 1053;
		LICKITUNG_SHADOW = 1054;
		LICKITUNG_PURIFIED = 1055;
		CHANSEY_NORMAL = 1056;
		CHANSEY_SHADOW = 1057;
		CHANSEY_PURIFIED = 1058;
		TANGELA_NORMAL = 1059;
		TANGELA_SHADOW = 1060;
		TANGELA_PURIFIED = 1061;
		HORSEA_NORMAL = 1062;
		HORSEA_SHADOW = 1063;
		HORSEA_PURIFIED = 1064;
		SEADRA_NORMAL = 1065;
		SEADRA_SHADOW = 1066;
		SEADRA_PURIFIED = 1067;
		GOLDEEN_NORMAL = 1068;
		GOLDEEN_SHADOW = 1069;
		GOLDEEN_PURIFIED = 1070;
		SEAKING_NORMAL = 1071;
		SEAKING_SHADOW = 1072;
		SEAKING_PURIFIED = 1073;
		STARYU_NORMAL = 1074;
		STARYU_SHADOW = 1075;
		STARYU_PURIFIED = 1076;
		STARMIE_NORMAL = 1077;
		STARMIE_SHADOW = 1078;
		STARMIE_PURIFIED = 1079;
		MR_MIME_NORMAL = 1080;
		MR_MIME_SHADOW = 1081;
		MR_MIME_PURIFIED = 1082;
		JYNX_NORMAL = 1083;
		JYNX_SHADOW = 1084;
		JYNX_PURIFIED = 1085;
		TAUROS_NORMAL = 1086;
		TAUROS_SHADOW = 1087;
		TAUROS_PURIFIED = 1088;
		DITTO_NORMAL = 1089;
		DITTO_SHADOW = 1090;
		DITTO_PURIFIED = 1091;
		EEVEE_NORMAL = 1092;
		EEVEE_SHADOW = 1093;
		EEVEE_PURIFIED = 1094;
		VAPOREON_NORMAL = 1095;
		VAPOREON_SHADOW = 1096;
		VAPOREON_PURIFIED = 1097;
		JOLTEON_NORMAL = 1098;
		JOLTEON_SHADOW = 1099;
		JOLTEON_PURIFIED = 1100;
		FLAREON_NORMAL = 1101;
		FLAREON_SHADOW = 1102;
		FLAREON_PURIFIED = 1103;
		KABUTO_NORMAL = 1104;
		KABUTO_SHADOW = 1105;
		KABUTO_PURIFIED = 1106;
		KABUTOPS_NORMAL = 1107;
		KABUTOPS_SHADOW = 1108;
		KABUTOPS_PURIFIED = 1109;
		AERODACTYL_NORMAL = 1110;
		AERODACTYL_SHADOW = 1111;
		AERODACTYL_PURIFIED = 1112;
		MEWTWO_SHADOW = 1113;
		MEWTWO_PURIFIED = 1114;
		MEW_NORMAL = 1115;
		MEW_SHADOW = 1116;
		MEW_PURIFIED = 1117;
		CHIKORITA_NORMAL = 1118;
		CHIKORITA_SHADOW = 1119;
		CHIKORITA_PURIFIED = 1120;
		BAYLEEF_NORMAL = 1121;
		BAYLEEF_SHADOW = 1122;
		BAYLEEF_PURIFIED = 1123;
		MEGANIUM_NORMAL = 1124;
		MEGANIUM_SHADOW = 1125;
		MEGANIUM_PURIFIED = 1126;
		CYNDAQUIL_NORMAL = 1127;
		CYNDAQUIL_SHADOW = 1128;
		CYNDAQUIL_PURIFIED = 1129;
		QUILAVA_NORMAL = 1130;
		QUILAVA_SHADOW = 1131;
		QUILAVA_PURIFIED = 1132;
		TYPHLOSION_NORMAL = 1133;
		TYPHLOSION_SHADOW = 1134;
		TYPHLOSION_PURIFIED = 1135;
		TOTODILE_NORMAL = 1136;
		TOTODILE_SHADOW = 1137;
		TOTODILE_PURIFIED = 1138;
		CROCONAW_NORMAL = 1139;
		CROCONAW_SHADOW = 1140;
		CROCONAW_PURIFIED = 1141;
		FERALIGATR_NORMAL = 1142;
		FERALIGATR_SHADOW = 1143;
		FERALIGATR_PURIFIED = 1144;
		SENTRET_NORMAL = 1145;
		SENTRET_SHADOW = 1146;
		SENTRET_PURIFIED = 1147;
		FURRET_NORMAL = 1148;
		FURRET_SHADOW = 1149;
		FURRET_PURIFIED = 1150;
		HOOTHOOT_NORMAL = 1151;
		HOOTHOOT_SHADOW = 1152;
		HOOTHOOT_PURIFIED = 1153;
		NOCTOWL_NORMAL = 1154;
		NOCTOWL_SHADOW = 1155;
		NOCTOWL_PURIFIED = 1156;
		LEDYBA_NORMAL = 1157;
		LEDYBA_SHADOW = 1158;
		LEDYBA_PURIFIED = 1159;
		LEDIAN_NORMAL = 1160;
		LEDIAN_SHADOW = 1161;
		LEDIAN_PURIFIED = 1162;
		SPINARAK_NORMAL = 1163;
		SPINARAK_SHADOW = 1164;
		SPINARAK_PURIFIED = 1165;
		ARIADOS_NORMAL = 1166;
		ARIADOS_SHADOW = 1167;
		ARIADOS_PURIFIED = 1168;
		CHINCHOU_NORMAL = 1169;
		CHINCHOU_SHADOW = 1170;
		CHINCHOU_PURIFIED = 1171;
		LANTURN_NORMAL = 1172;
		LANTURN_SHADOW = 1173;
		LANTURN_PURIFIED = 1174;
		PICHU_NORMAL = 1175;
		PICHU_SHADOW = 1176;
		PICHU_PURIFIED = 1177;
		CLEFFA_NORMAL = 1178;
		CLEFFA_SHADOW = 1179;
		CLEFFA_PURIFIED = 1180;
		IGGLYBUFF_NORMAL = 1181;
		IGGLYBUFF_SHADOW = 1182;
		IGGLYBUFF_PURIFIED = 1183;
		TOGEPI_NORMAL = 1184;
		TOGEPI_SHADOW = 1185;
		TOGEPI_PURIFIED = 1186;
		TOGETIC_NORMAL = 1187;
		TOGETIC_SHADOW = 1188;
		TOGETIC_PURIFIED = 1189;
		NATU_NORMAL = 1190;
		NATU_SHADOW = 1191;
		NATU_PURIFIED = 1192;
		XATU_NORMAL = 1193;
		XATU_SHADOW = 1194;
		XATU_PURIFIED = 1195;
		MARILL_NORMAL = 1196;
		MARILL_SHADOW = 1197;
		MARILL_PURIFIED = 1198;
		AZUMARILL_NORMAL = 1199;
		AZUMARILL_SHADOW = 1200;
		AZUMARILL_PURIFIED = 1201;
		SUDOWOODO_NORMAL = 1202;
		SUDOWOODO_SHADOW = 1203;
		SUDOWOODO_PURIFIED = 1204;
		HOPPIP_NORMAL = 1205;
		HOPPIP_SHADOW = 1206;
		HOPPIP_PURIFIED = 1207;
		SKIPLOOM_NORMAL = 1208;
		SKIPLOOM_SHADOW = 1209;
		SKIPLOOM_PURIFIED = 1210;
		JUMPLUFF_NORMAL = 1211;
		JUMPLUFF_SHADOW = 1212;
		JUMPLUFF_PURIFIED = 1213;
		AIPOM_NORMAL = 1214;
		AIPOM_SHADOW = 1215;
		AIPOM_PURIFIED = 1216;
		SUNKERN_NORMAL = 1217;
		SUNKERN_SHADOW = 1218;
		SUNKERN_PURIFIED = 1219;
		SUNFLORA_NORMAL = 1220;
		SUNFLORA_SHADOW = 1221;
		SUNFLORA_PURIFIED = 1222;
		YANMA_NORMAL = 1223;
		YANMA_SHADOW = 1224;
		YANMA_PURIFIED = 1225;
		WOOPER_NORMAL = 1226;
		WOOPER_SHADOW = 1227;
		WOOPER_PURIFIED = 1228;
		QUAGSIRE_NORMAL = 1229;
		QUAGSIRE_SHADOW = 1230;
		QUAGSIRE_PURIFIED = 1231;
		ESPEON_NORMAL = 1232;
		ESPEON_SHADOW = 1233;
		ESPEON_PURIFIED = 1234;
		UMBREON_NORMAL = 1235;
		UMBREON_SHADOW = 1236;
		UMBREON_PURIFIED = 1237;
		SLOWKING_NORMAL = 1238;
		SLOWKING_SHADOW = 1239;
		SLOWKING_PURIFIED = 1240;
		GIRAFARIG_NORMAL = 1241;
		GIRAFARIG_SHADOW = 1242;
		GIRAFARIG_PURIFIED = 1243;
		PINECO_NORMAL = 1244;
		PINECO_SHADOW = 1245;
		PINECO_PURIFIED = 1246;
		FORRETRESS_NORMAL = 1247;
		FORRETRESS_SHADOW = 1248;
		FORRETRESS_PURIFIED = 1249;
		DUNSPARCE_NORMAL = 1250;
		DUNSPARCE_SHADOW = 1251;
		DUNSPARCE_PURIFIED = 1252;
		SNUBBULL_NORMAL = 1253;
		SNUBBULL_SHADOW = 1254;
		SNUBBULL_PURIFIED = 1255;
		GRANBULL_NORMAL = 1256;
		GRANBULL_SHADOW = 1257;
		GRANBULL_PURIFIED = 1258;
		QWILFISH_NORMAL = 1259;
		QWILFISH_SHADOW = 1260;
		QWILFISH_PURIFIED = 1261;
		HERACROSS_NORMAL = 1262;
		HERACROSS_SHADOW = 1263;
		HERACROSS_PURIFIED = 1264;
		TEDDIURSA_NORMAL = 1265;
		TEDDIURSA_SHADOW = 1266;
		TEDDIURSA_PURIFIED = 1267;
		URSARING_NORMAL = 1268;
		URSARING_SHADOW = 1269;
		URSARING_PURIFIED = 1270;
		SLUGMA_NORMAL = 1271;
		SLUGMA_SHADOW = 1272;
		SLUGMA_PURIFIED = 1273;
		MAGCARGO_NORMAL = 1274;
		MAGCARGO_SHADOW = 1275;
		MAGCARGO_PURIFIED = 1276;
		SWINUB_NORMAL = 1277;
		SWINUB_SHADOW = 1278;
		SWINUB_PURIFIED = 1279;
		PILOSWINE_NORMAL = 1280;
		PILOSWINE_SHADOW = 1281;
		PILOSWINE_PURIFIED = 1282;
		CORSOLA_NORMAL = 1283;
		CORSOLA_SHADOW = 1284;
		CORSOLA_PURIFIED = 1285;
		REMORAID_NORMAL = 1286;
		REMORAID_SHADOW = 1287;
		REMORAID_PURIFIED = 1288;
		OCTILLERY_NORMAL = 1289;
		OCTILLERY_SHADOW = 1290;
		OCTILLERY_PURIFIED = 1291;
		MANTINE_NORMAL = 1292;
		MANTINE_SHADOW = 1293;
		MANTINE_PURIFIED = 1294;
		SKARMORY_NORMAL = 1295;
		SKARMORY_SHADOW = 1296;
		SKARMORY_PURIFIED = 1297;
		KINGDRA_NORMAL = 1298;
		KINGDRA_SHADOW = 1299;
		KINGDRA_PURIFIED = 1300;
		PHANPY_NORMAL = 1301;
		PHANPY_SHADOW = 1302;
		PHANPY_PURIFIED = 1303;
		DONPHAN_NORMAL = 1304;
		DONPHAN_SHADOW = 1305;
		DONPHAN_PURIFIED = 1306;
		SMEARGLE_NORMAL = 1307;
		SMEARGLE_SHADOW = 1308;
		SMEARGLE_PURIFIED = 1309;
		TYROGUE_NORMAL = 1310;
		TYROGUE_SHADOW = 1311;
		TYROGUE_PURIFIED = 1312;
		HITMONTOP_NORMAL = 1313;
		HITMONTOP_SHADOW = 1314;
		HITMONTOP_PURIFIED = 1315;
		SMOOCHUM_NORMAL = 1316;
		SMOOCHUM_SHADOW = 1317;
		SMOOCHUM_PURIFIED = 1318;
		ELEKID_NORMAL = 1319;
		ELEKID_SHADOW = 1320;
		ELEKID_PURIFIED = 1321;
		MAGBY_NORMAL = 1322;
		MAGBY_SHADOW = 1323;
		MAGBY_PURIFIED = 1324;
		MILTANK_NORMAL = 1325;
		MILTANK_SHADOW = 1326;
		MILTANK_PURIFIED = 1327;
		BLISSEY_NORMAL = 1328;
		BLISSEY_SHADOW = 1329;
		BLISSEY_PURIFIED = 1330;
		RAIKOU_NORMAL = 1331;
		RAIKOU_SHADOW = 1332;
		RAIKOU_PURIFIED = 1333;
		ENTEI_NORMAL = 1334;
		ENTEI_SHADOW = 1335;
		ENTEI_PURIFIED = 1336;
		SUICUNE_NORMAL = 1337;
		SUICUNE_SHADOW = 1338;
		SUICUNE_PURIFIED = 1339;
		LUGIA_NORMAL = 1340;
		LUGIA_SHADOW = 1341;
		LUGIA_PURIFIED = 1342;
		HO_OH_NORMAL = 1343;
		HO_OH_SHADOW = 1344;
		HO_OH_PURIFIED = 1345;
		CELEBI_NORMAL = 1346;
		CELEBI_SHADOW = 1347;
		CELEBI_PURIFIED = 1348;
		TREECKO_NORMAL = 1349;
		TREECKO_SHADOW = 1350;
		TREECKO_PURIFIED = 1351;
		GROVYLE_NORMAL = 1352;
		GROVYLE_SHADOW = 1353;
		GROVYLE_PURIFIED = 1354;
		SCEPTILE_NORMAL = 1355;
		SCEPTILE_SHADOW = 1356;
		SCEPTILE_PURIFIED = 1357;
		TORCHIC_NORMAL = 1358;
		TORCHIC_SHADOW = 1359;
		TORCHIC_PURIFIED = 1360;
		COMBUSKEN_NORMAL = 1361;
		COMBUSKEN_SHADOW = 1362;
		COMBUSKEN_PURIFIED = 1363;
		BLAZIKEN_NORMAL = 1364;
		BLAZIKEN_SHADOW = 1365;
		BLAZIKEN_PURIFIED = 1366;
		POOCHYENA_NORMAL = 1367;
		POOCHYENA_SHADOW = 1368;
		POOCHYENA_PURIFIED = 1369;
		MIGHTYENA_NORMAL = 1370;
		MIGHTYENA_SHADOW = 1371;
		MIGHTYENA_PURIFIED = 1372;
		ZIGZAGOON_SHADOW = 1373;
		ZIGZAGOON_PURIFIED = 1374;
		LINOONE_SHADOW = 1375;
		LINOONE_PURIFIED = 1376;
		WURMPLE_SHADOW = 1377;
		WURMPLE_PURIFIED = 1378;
		SILCOON_NORMAL = 1379;
		SILCOON_SHADOW = 1380;
		SILCOON_PURIFIED = 1381;
		BEAUTIFLY_NORMAL = 1382;
		BEAUTIFLY_SHADOW = 1383;
		BEAUTIFLY_PURIFIED = 1384;
		CASCOON_NORMAL = 1385;
		CASCOON_SHADOW = 1386;
		CASCOON_PURIFIED = 1387;
		DUSTOX_NORMAL = 1388;
		DUSTOX_SHADOW = 1389;
		DUSTOX_PURIFIED = 1390;
		LOTAD_NORMAL = 1391;
		LOTAD_SHADOW = 1392;
		LOTAD_PURIFIED = 1393;
		LOMBRE_NORMAL = 1394;
		LOMBRE_SHADOW = 1395;
		LOMBRE_PURIFIED = 1396;
		LUDICOLO_NORMAL = 1397;
		LUDICOLO_SHADOW = 1398;
		LUDICOLO_PURIFIED = 1399;
		TAILLOW_NORMAL = 1400;
		TAILLOW_SHADOW = 1401;
		TAILLOW_PURIFIED = 1402;
		SWELLOW_NORMAL = 1403;
		SWELLOW_SHADOW = 1404;
		SWELLOW_PURIFIED = 1405;
		WINGULL_NORMAL = 1406;
		WINGULL_SHADOW = 1407;
		WINGULL_PURIFIED = 1408;
		PELIPPER_NORMAL = 1409;
		PELIPPER_SHADOW = 1410;
		PELIPPER_PURIFIED = 1411;
		SURSKIT_NORMAL = 1412;
		SURSKIT_SHADOW = 1413;
		SURSKIT_PURIFIED = 1414;
		MASQUERAIN_NORMAL = 1415;
		MASQUERAIN_SHADOW = 1416;
		MASQUERAIN_PURIFIED = 1417;
		SHROOMISH_NORMAL = 1418;
		SHROOMISH_SHADOW = 1419;
		SHROOMISH_PURIFIED = 1420;
		BRELOOM_NORMAL = 1421;
		BRELOOM_SHADOW = 1422;
		BRELOOM_PURIFIED = 1423;
		SLAKOTH_NORMAL = 1424;
		SLAKOTH_SHADOW = 1425;
		SLAKOTH_PURIFIED = 1426;
		VIGOROTH_NORMAL = 1427;
		VIGOROTH_SHADOW = 1428;
		VIGOROTH_PURIFIED = 1429;
		SLAKING_NORMAL = 1430;
		SLAKING_SHADOW = 1431;
		SLAKING_PURIFIED = 1432;
		NINCADA_NORMAL = 1433;
		NINCADA_SHADOW = 1434;
		NINCADA_PURIFIED = 1435;
		NINJASK_NORMAL = 1436;
		NINJASK_SHADOW = 1437;
		NINJASK_PURIFIED = 1438;
		SHEDINJA_NORMAL = 1439;
		SHEDINJA_SHADOW = 1440;
		SHEDINJA_PURIFIED = 1441;
		WHISMUR_NORMAL = 1442;
		WHISMUR_SHADOW = 1443;
		WHISMUR_PURIFIED = 1444;
		LOUDRED_NORMAL = 1445;
		LOUDRED_SHADOW = 1446;
		LOUDRED_PURIFIED = 1447;
		EXPLOUD_NORMAL = 1448;
		EXPLOUD_SHADOW = 1449;
		EXPLOUD_PURIFIED = 1450;
		MAKUHITA_NORMAL = 1451;
		MAKUHITA_SHADOW = 1452;
		MAKUHITA_PURIFIED = 1453;
		HARIYAMA_NORMAL = 1454;
		HARIYAMA_SHADOW = 1455;
		HARIYAMA_PURIFIED = 1456;
		AZURILL_NORMAL = 1457;
		AZURILL_SHADOW = 1458;
		AZURILL_PURIFIED = 1459;
		NOSEPASS_NORMAL = 1460;
		NOSEPASS_SHADOW = 1461;
		NOSEPASS_PURIFIED = 1462;
		SKITTY_NORMAL = 1463;
		SKITTY_SHADOW = 1464;
		SKITTY_PURIFIED = 1465;
		DELCATTY_NORMAL = 1466;
		DELCATTY_SHADOW = 1467;
		DELCATTY_PURIFIED = 1468;
		ARON_NORMAL = 1469;
		ARON_SHADOW = 1470;
		ARON_PURIFIED = 1471;
		LAIRON_NORMAL = 1472;
		LAIRON_SHADOW = 1473;
		LAIRON_PURIFIED = 1474;
		AGGRON_NORMAL = 1475;
		AGGRON_SHADOW = 1476;
		AGGRON_PURIFIED = 1477;
		MEDITITE_NORMAL = 1478;
		MEDITITE_SHADOW = 1479;
		MEDITITE_PURIFIED = 1480;
		MEDICHAM_NORMAL = 1481;
		MEDICHAM_SHADOW = 1482;
		MEDICHAM_PURIFIED = 1483;
		ELECTRIKE_NORMAL = 1484;
		ELECTRIKE_SHADOW = 1485;
		ELECTRIKE_PURIFIED = 1486;
		MANECTRIC_NORMAL = 1487;
		MANECTRIC_SHADOW = 1488;
		MANECTRIC_PURIFIED = 1489;
		PLUSLE_NORMAL = 1490;
		PLUSLE_SHADOW = 1491;
		PLUSLE_PURIFIED = 1492;
		MINUN_NORMAL = 1493;
		MINUN_SHADOW = 1494;
		MINUN_PURIFIED = 1495;
		VOLBEAT_NORMAL = 1496;
		VOLBEAT_SHADOW = 1497;
		VOLBEAT_PURIFIED = 1498;
		ILLUMISE_NORMAL = 1499;
		ILLUMISE_SHADOW = 1500;
		ILLUMISE_PURIFIED = 1501;
		ROSELIA_NORMAL = 1502;
		ROSELIA_SHADOW = 1503;
		ROSELIA_PURIFIED = 1504;
		GULPIN_NORMAL = 1505;
		GULPIN_SHADOW = 1506;
		GULPIN_PURIFIED = 1507;
		SWALOT_NORMAL = 1508;
		SWALOT_SHADOW = 1509;
		SWALOT_PURIFIED = 1510;
		WAILMER_NORMAL = 1511;
		WAILMER_SHADOW = 1512;
		WAILMER_PURIFIED = 1513;
		WAILORD_NORMAL = 1514;
		WAILORD_SHADOW = 1515;
		WAILORD_PURIFIED = 1516;
		NUMEL_NORMAL = 1517;
		NUMEL_SHADOW = 1518;
		NUMEL_PURIFIED = 1519;
		CAMERUPT_NORMAL = 1520;
		CAMERUPT_SHADOW = 1521;
		CAMERUPT_PURIFIED = 1522;
		TORKOAL_NORMAL = 1523;
		TORKOAL_SHADOW = 1524;
		TORKOAL_PURIFIED = 1525;
		SPOINK_NORMAL = 1526;
		SPOINK_SHADOW = 1527;
		SPOINK_PURIFIED = 1528;
		GRUMPIG_NORMAL = 1529;
		GRUMPIG_SHADOW = 1530;
		GRUMPIG_PURIFIED = 1531;
		SWABLU_NORMAL = 1532;
		SWABLU_SHADOW = 1533;
		SWABLU_PURIFIED = 1534;
		ALTARIA_NORMAL = 1535;
		ALTARIA_SHADOW = 1536;
		ALTARIA_PURIFIED = 1537;
		ZANGOOSE_NORMAL = 1538;
		ZANGOOSE_SHADOW = 1539;
		ZANGOOSE_PURIFIED = 1540;
		SEVIPER_NORMAL = 1541;
		SEVIPER_SHADOW = 1542;
		SEVIPER_PURIFIED = 1543;
		LUNATONE_NORMAL = 1544;
		LUNATONE_SHADOW = 1545;
		LUNATONE_PURIFIED = 1546;
		SOLROCK_NORMAL = 1547;
		SOLROCK_SHADOW = 1548;
		SOLROCK_PURIFIED = 1549;
		BARBOACH_NORMAL = 1550;
		BARBOACH_SHADOW = 1551;
		BARBOACH_PURIFIED = 1552;
		WHISCASH_NORMAL = 1553;
		WHISCASH_SHADOW = 1554;
		WHISCASH_PURIFIED = 1555;
		CORPHISH_NORMAL = 1556;
		CORPHISH_SHADOW = 1557;
		CORPHISH_PURIFIED = 1558;
		CRAWDAUNT_NORMAL = 1559;
		CRAWDAUNT_SHADOW = 1560;
		CRAWDAUNT_PURIFIED = 1561;
		BALTOY_NORMAL = 1562;
		BALTOY_SHADOW = 1563;
		BALTOY_PURIFIED = 1564;
		CLAYDOL_NORMAL = 1565;
		CLAYDOL_SHADOW = 1566;
		CLAYDOL_PURIFIED = 1567;
		LILEEP_NORMAL = 1568;
		LILEEP_SHADOW = 1569;
		LILEEP_PURIFIED = 1570;
		CRADILY_NORMAL = 1571;
		CRADILY_SHADOW = 1572;
		CRADILY_PURIFIED = 1573;
		ANORITH_NORMAL = 1574;
		ANORITH_SHADOW = 1575;
		ANORITH_PURIFIED = 1576;
		ARMALDO_NORMAL = 1577;
		ARMALDO_SHADOW = 1578;
		ARMALDO_PURIFIED = 1579;
		FEEBAS_NORMAL = 1580;
		FEEBAS_SHADOW = 1581;
		FEEBAS_PURIFIED = 1582;
		MILOTIC_NORMAL = 1583;
		MILOTIC_SHADOW = 1584;
		MILOTIC_PURIFIED = 1585;
		KECLEON_NORMAL = 1586;
		KECLEON_SHADOW = 1587;
		KECLEON_PURIFIED = 1588;
		TROPIUS_NORMAL = 1589;
		TROPIUS_SHADOW = 1590;
		TROPIUS_PURIFIED = 1591;
		CHIMECHO_NORMAL = 1592;
		CHIMECHO_SHADOW = 1593;
		CHIMECHO_PURIFIED = 1594;
		WYNAUT_NORMAL = 1595;
		WYNAUT_SHADOW = 1596;
		WYNAUT_PURIFIED = 1597;
		SPHEAL_NORMAL = 1598;
		SPHEAL_SHADOW = 1599;
		SPHEAL_PURIFIED = 1600;
		SEALEO_NORMAL = 1601;
		SEALEO_SHADOW = 1602;
		SEALEO_PURIFIED = 1603;
		WALREIN_NORMAL = 1604;
		WALREIN_SHADOW = 1605;
		WALREIN_PURIFIED = 1606;
		CLAMPERL_NORMAL = 1607;
		CLAMPERL_SHADOW = 1608;
		CLAMPERL_PURIFIED = 1609;
		HUNTAIL_NORMAL = 1610;
		HUNTAIL_SHADOW = 1611;
		HUNTAIL_PURIFIED = 1612;
		GOREBYSS_NORMAL = 1613;
		GOREBYSS_SHADOW = 1614;
		GOREBYSS_PURIFIED = 1615;
		RELICANTH_NORMAL = 1616;
		RELICANTH_SHADOW = 1617;
		RELICANTH_PURIFIED = 1618;
		LUVDISC_NORMAL = 1619;
		LUVDISC_SHADOW = 1620;
		LUVDISC_PURIFIED = 1621;
		REGIROCK_NORMAL = 1622;
		REGIROCK_SHADOW = 1623;
		REGIROCK_PURIFIED = 1624;
		REGICE_NORMAL = 1625;
		REGICE_SHADOW = 1626;
		REGICE_PURIFIED = 1627;
		REGISTEEL_NORMAL = 1628;
		REGISTEEL_SHADOW = 1629;
		REGISTEEL_PURIFIED = 1630;
		LATIAS_NORMAL = 1631;
		LATIAS_SHADOW = 1632;
		LATIAS_PURIFIED = 1633;
		LATIOS_NORMAL = 1634;
		LATIOS_SHADOW = 1635;
		LATIOS_PURIFIED = 1636;
		KYOGRE_NORMAL = 1637;
		KYOGRE_SHADOW = 1638;
		KYOGRE_PURIFIED = 1639;
		GROUDON_NORMAL = 1640;
		GROUDON_SHADOW = 1641;
		GROUDON_PURIFIED = 1642;
		RAYQUAZA_NORMAL = 1643;
		RAYQUAZA_SHADOW = 1644;
		RAYQUAZA_PURIFIED = 1645;
		JIRACHI_NORMAL = 1646;
		JIRACHI_SHADOW = 1647;
		JIRACHI_PURIFIED = 1648;
		PIPLUP_NORMAL = 1649;
		PIPLUP_SHADOW = 1650;
		PIPLUP_PURIFIED = 1651;
		PRINPLUP_NORMAL = 1652;
		PRINPLUP_SHADOW = 1653;
		PRINPLUP_PURIFIED = 1654;
		EMPOLEON_NORMAL = 1655;
		EMPOLEON_SHADOW = 1656;
		EMPOLEON_PURIFIED = 1657;
		STARLY_NORMAL = 1658;
		STARLY_SHADOW = 1659;
		STARLY_PURIFIED = 1660;
		STARAVIA_NORMAL = 1661;
		STARAVIA_SHADOW = 1662;
		STARAVIA_PURIFIED = 1663;
		STARAPTOR_NORMAL = 1664;
		STARAPTOR_SHADOW = 1665;
		STARAPTOR_PURIFIED = 1666;
		BIDOOF_NORMAL = 1667;
		BIDOOF_SHADOW = 1668;
		BIDOOF_PURIFIED = 1669;
		BIBAREL_NORMAL = 1670;
		BIBAREL_SHADOW = 1671;
		BIBAREL_PURIFIED = 1672;
		KRICKETOT_NORMAL = 1673;
		KRICKETOT_SHADOW = 1674;
		KRICKETOT_PURIFIED = 1675;
		KRICKETUNE_NORMAL = 1676;
		KRICKETUNE_SHADOW = 1677;
		KRICKETUNE_PURIFIED = 1678;
		SHINX_NORMAL = 1679;
		SHINX_SHADOW = 1680;
		SHINX_PURIFIED = 1681;
		LUXIO_NORMAL = 1682;
		LUXIO_SHADOW = 1683;
		LUXIO_PURIFIED = 1684;
		LUXRAY_NORMAL = 1685;
		LUXRAY_SHADOW = 1686;
		LUXRAY_PURIFIED = 1687;
		BUDEW_NORMAL = 1688;
		BUDEW_SHADOW = 1689;
		BUDEW_PURIFIED = 1690;
		ROSERADE_NORMAL = 1691;
		ROSERADE_SHADOW = 1692;
		ROSERADE_PURIFIED = 1693;
		CRANIDOS_NORMAL = 1694;
		CRANIDOS_SHADOW = 1695;
		CRANIDOS_PURIFIED = 1696;
		RAMPARDOS_NORMAL = 1697;
		RAMPARDOS_SHADOW = 1698;
		RAMPARDOS_PURIFIED = 1699;
		SHIELDON_NORMAL = 1700;
		SHIELDON_SHADOW = 1701;
		SHIELDON_PURIFIED = 1702;
		BASTIODON_NORMAL = 1703;
		BASTIODON_SHADOW = 1704;
		BASTIODON_PURIFIED = 1705;
		BURMY_NORMAL = 1706;
		BURMY_SHADOW = 1707;
		BURMY_PURIFIED = 1708;
		WORMADAM_NORMAL = 1709;
		WORMADAM_SHADOW = 1710;
		WORMADAM_PURIFIED = 1711;
		MOTHIM_NORMAL = 1712;
		MOTHIM_SHADOW = 1713;
		MOTHIM_PURIFIED = 1714;
		COMBEE_NORMAL = 1715;
		COMBEE_SHADOW = 1716;
		COMBEE_PURIFIED = 1717;
		VESPIQUEN_NORMAL = 1718;
		VESPIQUEN_SHADOW = 1719;
		VESPIQUEN_PURIFIED = 1720;
		PACHIRISU_NORMAL = 1721;
		PACHIRISU_SHADOW = 1722;
		PACHIRISU_PURIFIED = 1723;
		BUIZEL_NORMAL = 1724;
		BUIZEL_SHADOW = 1725;
		BUIZEL_PURIFIED = 1726;
		FLOATZEL_NORMAL = 1727;
		FLOATZEL_SHADOW = 1728;
		FLOATZEL_PURIFIED = 1729;
		CHERUBI_NORMAL = 1730;
		CHERUBI_SHADOW = 1731;
		CHERUBI_PURIFIED = 1732;
		CHERRIM_NORMAL = 1733;
		CHERRIM_SHADOW = 1734;
		CHERRIM_PURIFIED = 1735;
		SHELLOS_NORMAL = 1736;
		SHELLOS_SHADOW = 1737;
		SHELLOS_PURIFIED = 1738;
		GASTRODON_NORMAL = 1739;
		GASTRODON_SHADOW = 1740;
		GASTRODON_PURIFIED = 1741;
		AMBIPOM_NORMAL = 1742;
		AMBIPOM_SHADOW = 1743;
		AMBIPOM_PURIFIED = 1744;
		DRIFLOON_NORMAL = 1745;
		DRIFLOON_SHADOW = 1746;
		DRIFLOON_PURIFIED = 1747;
		DRIFBLIM_NORMAL = 1748;
		DRIFBLIM_SHADOW = 1749;
		DRIFBLIM_PURIFIED = 1750;
		BUNEARY_NORMAL = 1751;
		BUNEARY_SHADOW = 1752;
		BUNEARY_PURIFIED = 1753;
		LOPUNNY_NORMAL = 1754;
		LOPUNNY_SHADOW = 1755;
		LOPUNNY_PURIFIED = 1756;
		GLAMEOW_NORMAL = 1757;
		GLAMEOW_SHADOW = 1758;
		GLAMEOW_PURIFIED = 1759;
		PURUGLY_NORMAL = 1760;
		PURUGLY_SHADOW = 1761;
		PURUGLY_PURIFIED = 1762;
		CHINGLING_NORMAL = 1763;
		CHINGLING_SHADOW = 1764;
		CHINGLING_PURIFIED = 1765;
		BRONZOR_NORMAL = 1766;
		BRONZOR_SHADOW = 1767;
		BRONZOR_PURIFIED = 1768;
		BRONZONG_NORMAL = 1769;
		BRONZONG_SHADOW = 1770;
		BRONZONG_PURIFIED = 1771;
		BONSLY_NORMAL = 1772;
		BONSLY_SHADOW = 1773;
		BONSLY_PURIFIED = 1774;
		MIME_JR_NORMAL = 1775;
		MIME_JR_SHADOW = 1776;
		MIME_JR_PURIFIED = 1777;
		HAPPINY_NORMAL = 1778;
		HAPPINY_SHADOW = 1779;
		HAPPINY_PURIFIED = 1780;
		CHATOT_NORMAL = 1781;
		CHATOT_SHADOW = 1782;
		CHATOT_PURIFIED = 1783;
		SPIRITOMB_NORMAL = 1784;
		SPIRITOMB_SHADOW = 1785;
		SPIRITOMB_PURIFIED = 1786;
		MUNCHLAX_NORMAL = 1787;
		MUNCHLAX_SHADOW = 1788;
		MUNCHLAX_PURIFIED = 1789;
		RIOLU_NORMAL = 1790;
		RIOLU_SHADOW = 1791;
		RIOLU_PURIFIED = 1792;
		LUCARIO_NORMAL = 1793;
		LUCARIO_SHADOW = 1794;
		LUCARIO_PURIFIED = 1795;
		SKORUPI_NORMAL = 1796;
		SKORUPI_SHADOW = 1797;
		SKORUPI_PURIFIED = 1798;
		DRAPION_NORMAL = 1799;
		DRAPION_SHADOW = 1800;
		DRAPION_PURIFIED = 1801;
		CROAGUNK_NORMAL = 1802;
		CROAGUNK_SHADOW = 1803;
		CROAGUNK_PURIFIED = 1804;
		TOXICROAK_NORMAL = 1805;
		TOXICROAK_SHADOW = 1806;
		TOXICROAK_PURIFIED = 1807;
		CARNIVINE_NORMAL = 1808;
		CARNIVINE_SHADOW = 1809;
		CARNIVINE_PURIFIED = 1810;
		FINNEON_NORMAL = 1811;
		FINNEON_SHADOW = 1812;
		FINNEON_PURIFIED = 1813;
		LUMINEON_NORMAL = 1814;
		LUMINEON_SHADOW = 1815;
		LUMINEON_PURIFIED = 1816;
		MANTYKE_NORMAL = 1817;
		MANTYKE_SHADOW = 1818;
		MANTYKE_PURIFIED = 1819;
		LICKILICKY_NORMAL = 1820;
		LICKILICKY_SHADOW = 1821;
		LICKILICKY_PURIFIED = 1822;
		TANGROWTH_NORMAL = 1823;
		TANGROWTH_SHADOW = 1824;
		TANGROWTH_PURIFIED = 1825;
		TOGEKISS_NORMAL = 1826;
		TOGEKISS_SHADOW = 1827;
		TOGEKISS_PURIFIED = 1828;
		YANMEGA_NORMAL = 1829;
		YANMEGA_SHADOW = 1830;
		YANMEGA_PURIFIED = 1831;
		LEAFEON_NORMAL = 1832;
		LEAFEON_SHADOW = 1833;
		LEAFEON_PURIFIED = 1834;
		GLACEON_NORMAL = 1835;
		GLACEON_SHADOW = 1836;
		GLACEON_PURIFIED = 1837;
		MAMOSWINE_NORMAL = 1838;
		MAMOSWINE_SHADOW = 1839;
		MAMOSWINE_PURIFIED = 1840;
		PROBOPASS_NORMAL = 1841;
		PROBOPASS_SHADOW = 1842;
		PROBOPASS_PURIFIED = 1843;
		FROSLASS_NORMAL = 1844;
		FROSLASS_SHADOW = 1845;
		FROSLASS_PURIFIED = 1846;
		UXIE_NORMAL = 1847;
		UXIE_SHADOW = 1848;
		UXIE_PURIFIED = 1849;
		MESPRIT_NORMAL = 1850;
		MESPRIT_SHADOW = 1851;
		MESPRIT_PURIFIED = 1852;
		AZELF_NORMAL = 1853;
		AZELF_SHADOW = 1854;
		AZELF_PURIFIED = 1855;
		DIALGA_NORMAL = 1856;
		DIALGA_SHADOW = 1857;
		DIALGA_PURIFIED = 1858;
		PALKIA_NORMAL = 1859;
		PALKIA_SHADOW = 1860;
		PALKIA_PURIFIED = 1861;
		HEATRAN_NORMAL = 1862;
		HEATRAN_SHADOW = 1863;
		HEATRAN_PURIFIED = 1864;
		REGIGIGAS_NORMAL = 1865;
		REGIGIGAS_SHADOW = 1866;
		REGIGIGAS_PURIFIED = 1867;
		GIRATINA_NORMAL = 1868;
		GIRATINA_SHADOW = 1869;
		GIRATINA_PURIFIED = 1870;
		CRESSELIA_NORMAL = 1871;
		CRESSELIA_SHADOW = 1872;
		CRESSELIA_PURIFIED = 1873;
		PHIONE_NORMAL = 1874;
		PHIONE_SHADOW = 1875;
		PHIONE_PURIFIED = 1876;
		MANAPHY_NORMAL = 1877;
		MANAPHY_SHADOW = 1878;
		MANAPHY_PURIFIED = 1879;
		DARKRAI_NORMAL = 1880;
		DARKRAI_SHADOW = 1881;
		DARKRAI_PURIFIED = 1882;
		SHAYMIN_NORMAL = 1883;
		SHAYMIN_SHADOW = 1884;
		SHAYMIN_PURIFIED = 1885;
		VICTINI_NORMAL = 1886;
		VICTINI_SHADOW = 1887;
		VICTINI_PURIFIED = 1888;
		SNIVY_NORMAL = 1889;
		SNIVY_SHADOW = 1890;
		SNIVY_PURIFIED = 1891;
		SERVINE_NORMAL = 1892;
		SERVINE_SHADOW = 1893;
		SERVINE_PURIFIED = 1894;
		SERPERIOR_NORMAL = 1895;
		SERPERIOR_SHADOW = 1896;
		SERPERIOR_PURIFIED = 1897;
		TEPIG_NORMAL = 1898;
		TEPIG_SHADOW = 1899;
		TEPIG_PURIFIED = 1900;
		PIGNITE_NORMAL = 1901;
		PIGNITE_SHADOW = 1902;
		PIGNITE_PURIFIED = 1903;
		EMBOAR_NORMAL = 1904;
		EMBOAR_SHADOW = 1905;
		EMBOAR_PURIFIED = 1906;
		OSHAWOTT_NORMAL = 1907;
		OSHAWOTT_SHADOW = 1908;
		OSHAWOTT_PURIFIED = 1909;
		DEWOTT_NORMAL = 1910;
		DEWOTT_SHADOW = 1911;
		DEWOTT_PURIFIED = 1912;
		SAMUROTT_NORMAL = 1913;
		SAMUROTT_SHADOW = 1914;
		SAMUROTT_PURIFIED = 1915;
		PATRAT_NORMAL = 1916;
		PATRAT_SHADOW = 1917;
		PATRAT_PURIFIED = 1918;
		WATCHOG_NORMAL = 1919;
		WATCHOG_SHADOW = 1920;
		WATCHOG_PURIFIED = 1921;
		LILLIPUP_NORMAL = 1922;
		LILLIPUP_SHADOW = 1923;
		LILLIPUP_PURIFIED = 1924;
		HERDIER_NORMAL = 1925;
		HERDIER_SHADOW = 1926;
		HERDIER_PURIFIED = 1927;
		STOUTLAND_NORMAL = 1928;
		STOUTLAND_SHADOW = 1929;
		STOUTLAND_PURIFIED = 1930;
		PURRLOIN_NORMAL = 1931;
		PURRLOIN_SHADOW = 1932;
		PURRLOIN_PURIFIED = 1933;
		LIEPARD_NORMAL = 1934;
		LIEPARD_SHADOW = 1935;
		LIEPARD_PURIFIED = 1936;
		PANSAGE_NORMAL = 1937;
		PANSAGE_SHADOW = 1938;
		PANSAGE_PURIFIED = 1939;
		SIMISAGE_NORMAL = 1940;
		SIMISAGE_SHADOW = 1941;
		SIMISAGE_PURIFIED = 1942;
		PANSEAR_NORMAL = 1943;
		PANSEAR_SHADOW = 1944;
		PANSEAR_PURIFIED = 1945;
		SIMISEAR_NORMAL = 1946;
		SIMISEAR_SHADOW = 1947;
		SIMISEAR_PURIFIED = 1948;
		PANPOUR_NORMAL = 1949;
		PANPOUR_SHADOW = 1950;
		PANPOUR_PURIFIED = 1951;
		SIMIPOUR_NORMAL = 1952;
		SIMIPOUR_SHADOW = 1953;
		SIMIPOUR_PURIFIED = 1954;
		MUNNA_NORMAL = 1955;
		MUNNA_SHADOW = 1956;
		MUNNA_PURIFIED = 1957;
		MUSHARNA_NORMAL = 1958;
		MUSHARNA_SHADOW = 1959;
		MUSHARNA_PURIFIED = 1960;
		PIDOVE_NORMAL = 1961;
		PIDOVE_SHADOW = 1962;
		PIDOVE_PURIFIED = 1963;
		TRANQUILL_NORMAL = 1964;
		TRANQUILL_SHADOW = 1965;
		TRANQUILL_PURIFIED = 1966;
		UNFEZANT_NORMAL = 1967;
		UNFEZANT_SHADOW = 1968;
		UNFEZANT_PURIFIED = 1969;
		BLITZLE_NORMAL = 1970;
		BLITZLE_SHADOW = 1971;
		BLITZLE_PURIFIED = 1972;
		ZEBSTRIKA_NORMAL = 1973;
		ZEBSTRIKA_SHADOW = 1974;
		ZEBSTRIKA_PURIFIED = 1975;
		ROGGENROLA_NORMAL = 1976;
		ROGGENROLA_SHADOW = 1977;
		ROGGENROLA_PURIFIED = 1978;
		BOLDORE_NORMAL = 1979;
		BOLDORE_SHADOW = 1980;
		BOLDORE_PURIFIED = 1981;
		GIGALITH_NORMAL = 1982;
		GIGALITH_SHADOW = 1983;
		GIGALITH_PURIFIED = 1984;
		WOOBAT_NORMAL = 1985;
		WOOBAT_SHADOW = 1986;
		WOOBAT_PURIFIED = 1987;
		SWOOBAT_NORMAL = 1988;
		SWOOBAT_SHADOW = 1989;
		SWOOBAT_PURIFIED = 1990;
		DRILBUR_NORMAL = 1991;
		DRILBUR_SHADOW = 1992;
		DRILBUR_PURIFIED = 1993;
		EXCADRILL_NORMAL = 1994;
		EXCADRILL_SHADOW = 1995;
		EXCADRILL_PURIFIED = 1996;
		AUDINO_NORMAL = 1997;
		AUDINO_SHADOW = 1998;
		AUDINO_PURIFIED = 1999;
		TIMBURR_NORMAL = 2000;
		TIMBURR_SHADOW = 2001;
		TIMBURR_PURIFIED = 2002;
		GURDURR_NORMAL = 2003;
		GURDURR_SHADOW = 2004;
		GURDURR_PURIFIED = 2005;
		CONKELDURR_NORMAL = 2006;
		CONKELDURR_SHADOW = 2007;
		CONKELDURR_PURIFIED = 2008;
		TYMPOLE_NORMAL = 2009;
		TYMPOLE_SHADOW = 2010;
		TYMPOLE_PURIFIED = 2011;
		PALPITOAD_NORMAL = 2012;
		PALPITOAD_SHADOW = 2013;
		PALPITOAD_PURIFIED = 2014;
		SEISMITOAD_NORMAL = 2015;
		SEISMITOAD_SHADOW = 2016;
		SEISMITOAD_PURIFIED = 2017;
		THROH_NORMAL = 2018;
		THROH_SHADOW = 2019;
		THROH_PURIFIED = 2020;
		SAWK_NORMAL = 2021;
		SAWK_SHADOW = 2022;
		SAWK_PURIFIED = 2023;
		SEWADDLE_NORMAL = 2024;
		SEWADDLE_SHADOW = 2025;
		SEWADDLE_PURIFIED = 2026;
		SWADLOON_NORMAL = 2027;
		SWADLOON_SHADOW = 2028;
		SWADLOON_PURIFIED = 2029;
		LEAVANNY_NORMAL = 2030;
		LEAVANNY_SHADOW = 2031;
		LEAVANNY_PURIFIED = 2032;
		VENIPEDE_NORMAL = 2033;
		VENIPEDE_SHADOW = 2034;
		VENIPEDE_PURIFIED = 2035;
		WHIRLIPEDE_NORMAL = 2036;
		WHIRLIPEDE_SHADOW = 2037;
		WHIRLIPEDE_PURIFIED = 2038;
		SCOLIPEDE_NORMAL = 2039;
		SCOLIPEDE_SHADOW = 2040;
		SCOLIPEDE_PURIFIED = 2041;
		COTTONEE_NORMAL = 2042;
		COTTONEE_SHADOW = 2043;
		COTTONEE_PURIFIED = 2044;
		WHIMSICOTT_NORMAL = 2045;
		WHIMSICOTT_SHADOW = 2046;
		WHIMSICOTT_PURIFIED = 2047;
		PETILIL_NORMAL = 2048;
		PETILIL_SHADOW = 2049;
		PETILIL_PURIFIED = 2050;
		LILLIGANT_NORMAL = 2051;
		LILLIGANT_SHADOW = 2052;
		LILLIGANT_PURIFIED = 2053;
		SANDILE_NORMAL = 2054;
		SANDILE_SHADOW = 2055;
		SANDILE_PURIFIED = 2056;
		KROKOROK_NORMAL = 2057;
		KROKOROK_SHADOW = 2058;
		KROKOROK_PURIFIED = 2059;
		KROOKODILE_NORMAL = 2060;
		KROOKODILE_SHADOW = 2061;
		KROOKODILE_PURIFIED = 2062;
		DARUMAKA_NORMAL = 2063;
		DARUMAKA_SHADOW = 2064;
		DARUMAKA_PURIFIED = 2065;
		MARACTUS_NORMAL = 2066;
		MARACTUS_SHADOW = 2067;
		MARACTUS_PURIFIED = 2068;
		DWEBBLE_NORMAL = 2069;
		DWEBBLE_SHADOW = 2070;
		DWEBBLE_PURIFIED = 2071;
		CRUSTLE_NORMAL = 2072;
		CRUSTLE_SHADOW = 2073;
		CRUSTLE_PURIFIED = 2074;
		SCRAGGY_NORMAL = 2075;
		SCRAGGY_SHADOW = 2076;
		SCRAGGY_PURIFIED = 2077;
		SCRAFTY_NORMAL = 2078;
		SCRAFTY_SHADOW = 2079;
		SCRAFTY_PURIFIED = 2080;
		SIGILYPH_NORMAL = 2081;
		SIGILYPH_SHADOW = 2082;
		SIGILYPH_PURIFIED = 2083;
		YAMASK_NORMAL = 2084;
		YAMASK_SHADOW = 2085;
		YAMASK_PURIFIED = 2086;
		COFAGRIGUS_NORMAL = 2087;
		COFAGRIGUS_SHADOW = 2088;
		COFAGRIGUS_PURIFIED = 2089;
		TIRTOUGA_NORMAL = 2090;
		TIRTOUGA_SHADOW = 2091;
		TIRTOUGA_PURIFIED = 2092;
		CARRACOSTA_NORMAL = 2093;
		CARRACOSTA_SHADOW = 2094;
		CARRACOSTA_PURIFIED = 2095;
		ARCHEN_NORMAL = 2096;
		ARCHEN_SHADOW = 2097;
		ARCHEN_PURIFIED = 2098;
		ARCHEOPS_NORMAL = 2099;
		ARCHEOPS_SHADOW = 2100;
		ARCHEOPS_PURIFIED = 2101;
		TRUBBISH_NORMAL = 2102;
		TRUBBISH_SHADOW = 2103;
		TRUBBISH_PURIFIED = 2104;
		GARBODOR_NORMAL = 2105;
		GARBODOR_SHADOW = 2106;
		GARBODOR_PURIFIED = 2107;
		ZORUA_NORMAL = 2108;
		ZORUA_SHADOW = 2109;
		ZORUA_PURIFIED = 2110;
		ZOROARK_NORMAL = 2111;
		ZOROARK_SHADOW = 2112;
		ZOROARK_PURIFIED = 2113;
		MINCCINO_NORMAL = 2114;
		MINCCINO_SHADOW = 2115;
		MINCCINO_PURIFIED = 2116;
		CINCCINO_NORMAL = 2117;
		CINCCINO_SHADOW = 2118;
		CINCCINO_PURIFIED = 2119;
		GOTHITA_NORMAL = 2120;
		GOTHITA_SHADOW = 2121;
		GOTHITA_PURIFIED = 2122;
		GOTHORITA_NORMAL = 2123;
		GOTHORITA_SHADOW = 2124;
		GOTHORITA_PURIFIED = 2125;
		GOTHITELLE_NORMAL = 2126;
		GOTHITELLE_SHADOW = 2127;
		GOTHITELLE_PURIFIED = 2128;
		SOLOSIS_NORMAL = 2129;
		SOLOSIS_SHADOW = 2130;
		SOLOSIS_PURIFIED = 2131;
		DUOSION_NORMAL = 2132;
		DUOSION_SHADOW = 2133;
		DUOSION_PURIFIED = 2134;
		REUNICLUS_NORMAL = 2135;
		REUNICLUS_SHADOW = 2136;
		REUNICLUS_PURIFIED = 2137;
		DUCKLETT_NORMAL = 2138;
		DUCKLETT_SHADOW = 2139;
		DUCKLETT_PURIFIED = 2140;
		SWANNA_NORMAL = 2141;
		SWANNA_SHADOW = 2142;
		SWANNA_PURIFIED = 2143;
		VANILLITE_NORMAL = 2144;
		VANILLITE_SHADOW = 2145;
		VANILLITE_PURIFIED = 2146;
		VANILLISH_NORMAL = 2147;
		VANILLISH_SHADOW = 2148;
		VANILLISH_PURIFIED = 2149;
		VANILLUXE_NORMAL = 2150;
		VANILLUXE_SHADOW = 2151;
		VANILLUXE_PURIFIED = 2152;
		EMOLGA_NORMAL = 2153;
		EMOLGA_SHADOW = 2154;
		EMOLGA_PURIFIED = 2155;
		KARRABLAST_NORMAL = 2156;
		KARRABLAST_SHADOW = 2157;
		KARRABLAST_PURIFIED = 2158;
		ESCAVALIER_NORMAL = 2159;
		ESCAVALIER_SHADOW = 2160;
		ESCAVALIER_PURIFIED = 2161;
		FOONGUS_NORMAL = 2162;
		FOONGUS_SHADOW = 2163;
		FOONGUS_PURIFIED = 2164;
		AMOONGUSS_NORMAL = 2165;
		AMOONGUSS_SHADOW = 2166;
		AMOONGUSS_PURIFIED = 2167;
		FRILLISH_NORMAL = 2168;
		FRILLISH_SHADOW = 2169;
		FRILLISH_PURIFIED = 2170;
		JELLICENT_NORMAL = 2171;
		JELLICENT_SHADOW = 2172;
		JELLICENT_PURIFIED = 2173;
		ALOMOMOLA_NORMAL = 2174;
		ALOMOMOLA_SHADOW = 2175;
		ALOMOMOLA_PURIFIED = 2176;
		JOLTIK_NORMAL = 2177;
		JOLTIK_SHADOW = 2178;
		JOLTIK_PURIFIED = 2179;
		GALVANTULA_NORMAL = 2180;
		GALVANTULA_SHADOW = 2181;
		GALVANTULA_PURIFIED = 2182;
		FERROSEED_NORMAL = 2183;
		FERROSEED_SHADOW = 2184;
		FERROSEED_PURIFIED = 2185;
		FERROTHORN_NORMAL = 2186;
		FERROTHORN_SHADOW = 2187;
		FERROTHORN_PURIFIED = 2188;
		KLINK_NORMAL = 2189;
		KLINK_SHADOW = 2190;
		KLINK_PURIFIED = 2191;
		KLANG_NORMAL = 2192;
		KLANG_SHADOW = 2193;
		KLANG_PURIFIED = 2194;
		KLINKLANG_NORMAL = 2195;
		KLINKLANG_SHADOW = 2196;
		KLINKLANG_PURIFIED = 2197;
		TYNAMO_NORMAL = 2198;
		TYNAMO_SHADOW = 2199;
		TYNAMO_PURIFIED = 2200;
		EELEKTRIK_NORMAL = 2201;
		EELEKTRIK_SHADOW = 2202;
		EELEKTRIK_PURIFIED = 2203;
		EELEKTROSS_NORMAL = 2204;
		EELEKTROSS_SHADOW = 2205;
		EELEKTROSS_PURIFIED = 2206;
		ELGYEM_NORMAL = 2207;
		ELGYEM_SHADOW = 2208;
		ELGYEM_PURIFIED = 2209;
		BEHEEYEM_NORMAL = 2210;
		BEHEEYEM_SHADOW = 2211;
		BEHEEYEM_PURIFIED = 2212;
		LITWICK_NORMAL = 2213;
		LITWICK_SHADOW = 2214;
		LITWICK_PURIFIED = 2215;
		LAMPENT_NORMAL = 2216;
		LAMPENT_SHADOW = 2217;
		LAMPENT_PURIFIED = 2218;
		CHANDELURE_NORMAL = 2219;
		CHANDELURE_SHADOW = 2220;
		CHANDELURE_PURIFIED = 2221;
		AXEW_NORMAL = 2222;
		AXEW_SHADOW = 2223;
		AXEW_PURIFIED = 2224;
		FRAXURE_NORMAL = 2225;
		FRAXURE_SHADOW = 2226;
		FRAXURE_PURIFIED = 2227;
		HAXORUS_NORMAL = 2228;
		HAXORUS_SHADOW = 2229;
		HAXORUS_PURIFIED = 2230;
		CUBCHOO_NORMAL = 2231;
		CUBCHOO_SHADOW = 2232;
		CUBCHOO_PURIFIED = 2233;
		BEARTIC_NORMAL = 2234;
		BEARTIC_SHADOW = 2235;
		BEARTIC_PURIFIED = 2236;
		CRYOGONAL_NORMAL = 2237;
		CRYOGONAL_SHADOW = 2238;
		CRYOGONAL_PURIFIED = 2239;
		SHELMET_NORMAL = 2240;
		SHELMET_SHADOW = 2241;
		SHELMET_PURIFIED = 2242;
		ACCELGOR_NORMAL = 2243;
		ACCELGOR_SHADOW = 2244;
		ACCELGOR_PURIFIED = 2245;
		STUNFISK_NORMAL = 2246;
		STUNFISK_SHADOW = 2247;
		STUNFISK_PURIFIED = 2248;
		MIENFOO_NORMAL = 2249;
		MIENFOO_SHADOW = 2250;
		MIENFOO_PURIFIED = 2251;
		MIENSHAO_NORMAL = 2252;
		MIENSHAO_SHADOW = 2253;
		MIENSHAO_PURIFIED = 2254;
		DRUDDIGON_NORMAL = 2255;
		DRUDDIGON_SHADOW = 2256;
		DRUDDIGON_PURIFIED = 2257;
		GOLETT_NORMAL = 2258;
		GOLETT_SHADOW = 2259;
		GOLETT_PURIFIED = 2260;
		GOLURK_NORMAL = 2261;
		GOLURK_SHADOW = 2262;
		GOLURK_PURIFIED = 2263;
		PAWNIARD_NORMAL = 2264;
		PAWNIARD_SHADOW = 2265;
		PAWNIARD_PURIFIED = 2266;
		BISHARP_NORMAL = 2267;
		BISHARP_SHADOW = 2268;
		BISHARP_PURIFIED = 2269;
		BOUFFALANT_NORMAL = 2270;
		BOUFFALANT_SHADOW = 2271;
		BOUFFALANT_PURIFIED = 2272;
		RUFFLET_NORMAL = 2273;
		RUFFLET_SHADOW = 2274;
		RUFFLET_PURIFIED = 2275;
		BRAVIARY_NORMAL = 2276;
		BRAVIARY_SHADOW = 2277;
		BRAVIARY_PURIFIED = 2278;
		VULLABY_NORMAL = 2279;
		VULLABY_SHADOW = 2280;
		VULLABY_PURIFIED = 2281;
		MANDIBUZZ_NORMAL = 2282;
		MANDIBUZZ_SHADOW = 2283;
		MANDIBUZZ_PURIFIED = 2284;
		HEATMOR_NORMAL = 2285;
		HEATMOR_SHADOW = 2286;
		HEATMOR_PURIFIED = 2287;
		DURANT_NORMAL = 2288;
		DURANT_SHADOW = 2289;
		DURANT_PURIFIED = 2290;
		DEINO_NORMAL = 2291;
		DEINO_SHADOW = 2292;
		DEINO_PURIFIED = 2293;
		ZWEILOUS_NORMAL = 2294;
		ZWEILOUS_SHADOW = 2295;
		ZWEILOUS_PURIFIED = 2296;
		HYDREIGON_NORMAL = 2297;
		HYDREIGON_SHADOW = 2298;
		HYDREIGON_PURIFIED = 2299;
		LARVESTA_NORMAL = 2300;
		LARVESTA_SHADOW = 2301;
		LARVESTA_PURIFIED = 2302;
		VOLCARONA_NORMAL = 2303;
		VOLCARONA_SHADOW = 2304;
		VOLCARONA_PURIFIED = 2305;
		COBALION_NORMAL = 2306;
		COBALION_SHADOW = 2307;
		COBALION_PURIFIED = 2308;
		TERRAKION_NORMAL = 2309;
		TERRAKION_SHADOW = 2310;
		TERRAKION_PURIFIED = 2311;
		VIRIZION_NORMAL = 2312;
		VIRIZION_SHADOW = 2313;
		VIRIZION_PURIFIED = 2314;
		RESHIRAM_NORMAL = 2315;
		RESHIRAM_SHADOW = 2316;
		RESHIRAM_PURIFIED = 2317;
		ZEKROM_NORMAL = 2318;
		ZEKROM_SHADOW = 2319;
		ZEKROM_PURIFIED = 2320;
		MELTAN_NORMAL = 2321;
		MELTAN_SHADOW = 2322;
		MELTAN_PURIFIED = 2323;
		MELMETAL_NORMAL = 2324;
		MELMETAL_SHADOW = 2325;
		MELMETAL_PURIFIED = 2326;
		WURMPLE_SPRING_2020 = 2327;
		WOBBUFFET_SPRING_2020 = 2328;
		RATICATE_SPRING_2020 = 2329;
		FRILLISH_FEMALE = 2330;
		JELLICENT_FEMALE = 2331;
		PIKACHU_COSTUME_2020 = 2332;
		DRAGONITE_COSTUME_2020 = 2333;
		ONIX_COSTUME_2020 = 2334;
		MEOWTH_GALARIAN = 2335;
		FARFETCHD_GALARIAN = 2338;
		DARUMAKA_GALARIAN = 2341;
		DARMANITAN_GALARIAN_STANDARD = 2342;
		DARMANITAN_GALARIAN_ZEN = 2343;
		STUNFISK_GALARIAN = 2345;
		OBSTAGOON_NORMAL = 2501;
		OBSTAGOON_SHADOW = 2502;
		OBSTAGOON_PURIFIED = 2503;
		PERRSERKER_NORMAL = 2504;
		PERRSERKER_SHADOW = 2505;
		PERRSERKER_PURIFIED = 2506;
		SIRFETCHD_NORMAL = 2510;
		SIRFETCHD_SHADOW = 2511;
		SIRFETCHD_PURIFIED = 2512;
	}

	enum Gender {
		GENDER_UNSET = 0;
		MALE = 1;
		FEMALE = 2;
		GENDERLESS = 3;
	}

	Costume costume = 1;
	Gender gender = 2;
	bool shiny = 3;
	Form form = 4;
	GameplayWeatherProto.WeatherCondition weather_boosted_condition = 5;
	Alignment alignment = 6;
	PokemonBadge pokemon_badge = 7;
}

message PokemonEncounterAttributesProto {
	float base_capture_rate = 1;
	float base_flee_rate = 2;
	float collision_radius_m = 3;
	float collision_height_m = 4;
	float collision_head_radius_m = 5;
	HoloPokemonMovementType movement_type = 6;
	float movement_timer_s = 7;
	float jump_time_s = 8;
	float attack_timer_s = 9;
	int32 bonus_candy_capture_reward = 10;
	int32 bonus_stardust_capture_reward = 11;
	float attack_probability = 12;
	float dodge_probability = 13;
	float dodge_duration_s = 14;
	float dodge_distance = 15;
	float camera_distance = 16;
	float min_pokemon_action_frequency_s = 17;
	float max_pokemon_action_frequency_s = 18;
}

message PokemonEncounterRewardProto {
	HoloPokemonId pokemon_id = 1;
	bool use_quest_pokemon_encounter_distribuition = 2;
	PokemonDisplayProto pokemon_display = 3;
	bool is_hidden_ditto = 4;
	PokemonDisplayProto ditto_display = 5;
}

message PokemonFamilyProto {
	HoloPokemonFamilyId family_id = 1;
	int32 candy = 2;
}

message PokemonFortProto {
	string fort_id = 1;
	int64 last_modified_ms = 2;
	double latitude = 3;
	double longitude = 4;
	int32 team = 5;
	int32 guard_pokemon_id = 6;
	int32 guard_pokemon_level = 7;
	bool enabled = 8;
	FortType fort_type = 9;
	int64 gym_points = 10;
	bool is_in_battle = 11;
	repeated Item active_fort_modifier = 12;
	MapPokemonProto active_pokemon = 13;
	int64 cooldown_complete_ms = 14;
	FortSponsor.Sponsor sponsor = 15;
	FortRenderingType.RenderingType rendering_type = 16;
	int64 deploy_lockout_end_ms = 17;
	PokemonDisplayProto guard_pokemon_display = 18;
	bool closed = 19;
	RaidInfoProto raid_info = 20;
	GymDisplayProto gym_display = 21;
	bool visited = 22;
	int64 same_team_deploy_lockout_end_ms = 23;
	bool allow_checkin = 24;
	string image_url = 25;
	bool in_event = 26;
	string banner_url = 27;
	string partner_id = 28;
	bool challenge_quest_completed = 30;
	bool is_ex_raid_eligible = 31;
	PokestopIncidentDisplayProto pokestop_display = 32;
	repeated PokestopIncidentDisplayProto pokestop_displays = 33;
}

message PokemonGlobalSettingsProto {
	bool enable_camo_shader = 1;
	bool display_pokemon_badge_on_model = 2;
}

message PokemonGoPlusTelemetry {
	PokemonGoPlusIds pgp_event_ids = 1;
	int32 count = 2;
	int32 version = 3;
}

message PokemonInfo {
	PokemonProto pokemon = 1;
	int32 current_health = 2;
	int32 current_energy = 3;
}

message PokemonInventoryTelemetry {
	PokemonInventoryTelemetryIds pokemon_inventory_click_ids = 1;
	string sort_id = 2;
}

message PokemonProto {
	fixed64 id = 1;
	int32 pokemon_id = 2;
	int32 cp = 3;
	int32 stamina = 4;
	int32 max_stamina = 5;
	int32 move1 = 6;
	int32 move2 = 7;
	string deployed_fort_id = 8;
	string owner_name = 9;
	bool is_egg = 10;
	double egg_km_walked_target = 11;
	double egg_km_walked_start = 12;
	PokemonCreateContext origin = 14;
	float height_m = 15;
	float weight_kg = 16;
	int32 individual_attack = 17;
	int32 individual_defense = 18;
	int32 individual_stamina = 19;
	float cp_multiplier = 20;
	Item pokeball = 21;
	int64 captured_s2_cell_id = 22;
	int32 battles_attacked = 23;
	int32 battles_defended = 24;
	string egg_incubator_id = 25;
	int64 creation_time_ms = 26;
	int32 num_upgrades = 27;
	float additional_cp_multiplier = 28;
	bool favorite = 29;
	string nickname = 30;
	bool from_fort = 31;
	int32 buddy_candy_awarded = 32;
	float buddy_km_walked = 33;
	int32 display_pokemon_id = 34;
	int32 display_cp = 35;
	PokemonDisplayProto pokemon_display = 36;
	bool is_bad = 37;
	bool hatched_from_egg = 38;
	int32 coins_returned = 39;
	int64 deployed_duration_ms = 40;
	int64 deployed_returned_timestamp_ms = 41;
	float cp_multiplier_before_trading = 42;
	int32 trading_original_owner_hash = 43;
	string original_owner_nickname = 44;
	int64 traded_time_ms = 45;
	bool is_lucky = 46;
	int32 move3 = 47;
	PokemonCombatStatsProto pvp_combat_stats = 48;
	PokemonCombatStatsProto npc_combat_stats = 49;
	bool move2_is_purified_exclusive = 50;
	string limited_pokemon_identifier = 51;
	int32 pre_boosted_cp = 52;
	float pre_boosted_additional_cp_multiplier = 53;
	double deployed_gym_lat_degree = 55;
	double deployed_gym_lng_degree = 56;
	HoloPokemonEggType egg_type = 58;
}

message PokemonScaleSettingProto {
	enum PokemonScaleMode {
		natural_scale = 0;
		gui_scale = 1;
		battle_pokemon_scale = 2;
		raid_boss_scale = 3;
		gym_topper_scale = 4;
		map_pokemon_scale = 5;
	}

	PokemonScaleMode pokemon_scale_mode = 1;
	float min_height = 2;
	float max_height = 3;
}

message PokemonSettingsProto {
	enum BuddySize {
		BUDDY_MEDIUM = 0;
		BUDDY_SHOULDER = 1;
		BUDDY_BIG = 2;
		BUDDY_FLYING = 3;
		BUDDY_BABY = 4;
	}

	HoloPokemonId unique_id = 1;
	float model_scale = 3;
	HoloPokemonType type1 = 4;
	HoloPokemonType type2 = 5;
	PokemonCameraAttributesProto camera = 6;
	PokemonEncounterAttributesProto encounter = 7;
	PokemonStatsAttributesProto stats = 8;
	repeated HoloPokemonMove quick_moves = 9;
	repeated HoloPokemonMove cinematic_moves = 10;
	repeated float anim_time = 11;
	repeated HoloPokemonId evolution = 12;
	int32 evolution_pips = 13;
	HoloPokemonClass pokemon_class = 14;
	float pokedex_height_m = 15;
	float pokedex_weight_kg = 16;
	HoloPokemonId parent_id = 17;
	float height_std_dev = 18;
	float weight_std_dev = 19;
	float km_distance_to_hatch = 20;
	HoloPokemonFamilyId family_id = 21;
	int32 candy_to_evolve = 22;
	float km_buddy_distance = 23;
	BuddySize buddy_size = 24;
	float model_height = 25;
	repeated EvolutionBranchProto evolution_branch = 26;
	float model_scale_v2 = 27;
	PokemonDisplayProto.Form form = 28;
	HoloPokemonMove event_quick_move = 29;
	HoloPokemonMove event_cinematic_move = 30;
	repeated float buddy_offset_male = 31;
	repeated float buddy_offset_female = 32;
	float buddy_scale = 33;
	repeated float buddy_portrait_offset = 34;
	PokemonDisplayProto.Form parent_form = 35;
	PokemonThirdMoveAttributesProto third_move = 36;
	bool is_transferable = 37;
	bool is_deployable = 38;
	repeated float combat_shoulder_camera_angle = 39;
	bool is_tradable = 40;
	repeated float combat_default_camera_angle = 41;
	repeated float combat_opponent_focus_camera_angle = 42;
	repeated float combat_player_focus_camera_angle = 43;
	repeated float combat_player_pokemon_position_offset = 44;
	repeated AnimationOverrideProto photobomb_animation_overrides = 45;
	ShadowAttributesProto shadow = 46;
	int32 buddy_group_number = 47;
	int32 additional_cp_boost_level = 48;
	repeated HoloPokemonMove elite_quick_move = 49;
	repeated HoloPokemonMove elite_cinematic_move = 50;
}

message PokemonStaminaUpdateProto {
	fixed64 pokemon_id = 1;
	int32 updated_stamina = 2;
}

message PokemonStatsAttributesProto {
	int32 base_stamina = 1;
	int32 base_attack = 2;
	int32 base_defense = 3;
	int32 dodge_energy_delta = 8;
}

message PokemonSummaryFortProto {
	string fort_summary_id = 1;
	int64 last_modified_ms = 2;
	double latitude = 3;
	double longitude = 4;
}

message PokemonTelemetry {
	int32 pokemon_id = 1;
	int32 cp = 2;
	float weight_kg = 3;
	float height_m = 4;
	int32 pokemon_level = 5;
}

message PokemonThirdMoveAttributesProto {
	int32 stardust_to_unlock = 1;
	int32 candy_to_unlock = 2;
}

message PokemonUpgradeSettingsProto {
	int32 upgrades_per_level = 1;
	int32 allowed_levels_above_player = 2;
	repeated int32 candy_cost = 3;
	repeated int32 stardust_cost = 4;
	float shadow_stardust_multiplier = 5;
	float shadow_candy_multiplier = 6;
	float purified_stardust_multiplier = 7;
	float purified_candy_multiplier = 8;
	int32 max_normal_upgrade_level = 9;
	int32 default_cp_boost_additional_level = 10;
}

message PokestopIncidentDisplayProto {
	string incident_id = 1;
	int64 incident_start_ms = 2;
	int64 incident_expiration_ms = 3;
	bool hide_incident = 4;
	bool incident_completed = 5;
	IncidentDisplayType incident_display_type = 6;
	int32 incident_display_order_priority = 7;
	bool continue_displaying_incident = 8;
	CharacterDisplayProto character_display = 10;
	InvasionFinishedDisplayProto invasion_finished = 11;
}

message PokestopReward {
	int32 item_id = 1;
	int32 item_count = 2;
}

message PotionAttributesProto {
	float sta_percent = 1;
	int32 sta_amount = 2;
}

message ProbeProto {
	string id = 1;
	string payload = 2;
}

message ProbeSettingsProto {
	bool enable_sidechannel = 1;
	bool enable_adhoc = 2;
	int32 adhoc_frequency_sec = 3;
}

message ProfilePageTelemetry {
	ProfilePageTelemetryIds profile_page_click_id = 1;
}

message ProjectVacationProto {
	bool enable2020 = 1;
}

message PtcToken {
	string token = 1;
	int32 expiration = 2;
}

message PurifyPokemonLogEntry {
	HoloPokemonId pokemon_id = 1;
	PokemonDisplayProto pokemon_display = 2;
	fixed64 purified_pokemon_uuid = 3;
}

message PurifyPokemonOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INSUFFICIENT_FUNDS = 3;
		ERROR_POKEMON_DEPLOYED = 4;
		ERROR_POKEMON_NOT_FOUND = 5;
		ERROR_POKEMON_NOT_SHADOW = 6;
	}

	Status status = 1;
	PokemonProto purified_pokemon = 2;
}

message PurifyPokemonProto {
	fixed64 pokemon_id = 1;
}

message PushNotificationTelemetry {
	PushNotificationTelemetryIds notification_id = 1;
	string category = 2;
}

message QuestConditionProto {
	enum ConditionType {
		UNSET = 0;
		WITH_POKEMON_TYPE = 1;
		WITH_POKEMON_CATEGORY = 2;
		WITH_WEATHER_BOOST = 3;
		WITH_DAILY_CAPTURE_BONUS = 4;
		WITH_DAILY_SPIN_BONUS = 5;
		WITH_WIN_RAID_STATUS = 6;
		WITH_RAID_LEVEL = 7;
		WITH_THROW_TYPE = 8;
		WITH_WIN_GYM_BATTLE_STATUS = 9;
		WITH_SUPER_EFFECTIVE_CHARGE = 10;
		WITH_ITEM = 11;
		WITH_UNIQUE_POKESTOP = 12;
		WITH_QUEST_CONTEXT = 13;
		WITH_THROW_TYPE_IN_A_ROW = 14;
		WITH_CURVE_BALL = 15;
		WITH_BADGE_TYPE = 16;
		WITH_PLAYER_LEVEL = 17;
		WITH_WIN_BATTLE_STATUS = 18;
		WITH_NEW_FRIEND = 19;
		WITH_DAYS_IN_A_ROW = 20;
		WITH_UNIQUE_POKEMON = 21;
		WITH_NPC_COMBAT = 22;
		WITH_PVP_COMBAT = 23;
		WITH_LOCATION = 24;
		WITH_DISTANCE = 25;
		WITH_POKEMON_ALIGNMENT = 26;
		WITH_INVASION_CHARACTER = 27;
		WITH_BUDDY = 28;
		WITH_BUDDY_INTERESTING_POI = 29;
		WITH_DAILY_BUDDY_AFFECTION = 30;
	}

	ConditionType type = 1;
	WithPokemonTypeProto with_pokemon_type = 2;
	WithPokemonCategoryProto with_pokemon_category = 3;
	WithWeatherBoostProto with_weather_boost = 4;
	WithDailyCaptureBonusProto with_daily_capture_bonus = 5;
	WithDailySpinBonusProto with_daily_spin_bonus = 6;
	WithWinRaidStatusProto with_win_raid_status = 7;
	WithRaidLevelProto with_raid_level = 8;
	WithThrowTypeProto with_throw_type = 9;
	WithWinGymBattleStatusProto with_win_gym_battle_status = 10;
	WithSuperEffectiveChargeMoveProto with_super_effective_charge_move = 11;
	WithItemProto with_item = 12;
	WithUniquePokestopProto with_unique_pokestop = 13;
	WithQuestContextProto with_quest_context = 14;
	WithBadgeTypeProto with_badge_type = 15;
	WithPlayerLevelProto with_player_level = 16;
	WithWinBattleStatusProto with_win_battle_status = 17;
	WithUniquePokemonProto with_unique_pokemon = 18;
	WithNpcCombatProto with_npc_combat = 19;
	WithPvpCombatProto with_pvp_combat = 20;
	WithLocationProto with_location = 21;
	WithDistanceProto with_distance = 22;
	WithInvasionCharacterProto with_invasion_character = 23;
	WithPokemonAlignmentProto with_pokemon_alignment = 24;
	WithBuddyProto with_buddy = 25;
	WithDailyBuddyAffectionProto with_daily_buddy_affection = 26;
}

message QuestDialogProto {
	enum Character {
		CHARACTER_UNSET = 0;
		PROFESSOR_WILLOW = 1;
	}

	enum CharacterExpression {
		EXPRESSION_UNSET = 0;
		HAPPY = 1;
		SYMPATHETIC = 2;
		ENERGETIC = 3;
		PUSHY = 4;
		IMPATIENT = 5;
		ADMIRATION = 6;
	}

	string text = 1;
	CharacterExpression expression = 2;
	string image_uri = 3;
	Character character = 4;
}

message QuestDisplayProto {
	string quest_id = 1;
	repeated QuestDialogProto dialog = 2;
	string description = 3;
	string title = 4;
	int32 slot = 5;
	repeated QuestDisplayProto subquest_displays = 6;
	bool story_ending_quest = 7;
	string story_ending_description = 8;
	string tag_color = 9;
	string tag_string = 10;
	string sponsor_string = 11;
	string partner_id = 12;
}

message QuestEncounterOutProto {
	enum Result {
		QUEST_ENCOUNTER_UNKNOWN = 0;
		QUEST_ENCOUNTER_SUCCESS = 1;
		QUEST_ENCOUNTER_NOT_AVAILABLE = 2;
		QUEST_ENCOUNTER_ALREADY_FINISHED = 3;
		POKEMON_INVENTORY_FULL = 4;
	}

	Result result = 1;
	PokemonProto pokemon = 2;
	CaptureProbabilityProto capture_probability = 3;
	Item active_item = 4;
}

message QuestEncounterProto {
	fixed64 pokemon_id = 1;
	string quest_id = 2;
}

message QuestGlobalSettingsProto {
	bool enable_quests = 1;
	int32 max_challenge_quests = 2;
	bool enable_show_sponsor_name = 3;
}

message QuestGoalProto {
	repeated QuestConditionProto condition = 1;
	int32 target = 2;
}

message QuestPokemonEncounterProto {
	string quest_id = 1;
	PokemonProto pokemon = 2;
	EncounterType encounter_type = 3;
	bool is_hidden_ditto = 4;
	PokemonProto ditto = 5;
}

message QuestPreconditionProto {
	enum Name {
		UNSET_NAME = 0;
		GIOVANNI = 1;
	}

	enum Operator {
		UNSET_OPERATOR = 0;
		EQUALS = 1;
		GREATER_THAN = 2;
		LESS_THAN = 3;
	}

	enum QuestPreconditionType {
		QUEST_PRECONDITION_UNSET_QUESTPRECONDITIONTYPE = 0;
		QUEST_PRECONDITION_QUEST = 1;
		QUEST_PRECONDITION_LEVEL = 2;
		QUEST_PRECONDITION_MEDAL = 3;
		QUEST_PRECONDITION_IS_MINOR = 4;
		QUEST_PRECONDITION_EXCLUSIVE_QUESTS = 5;
		QUEST_PRECONDITION_NEVER = 6;
		QUEST_PRECONDITION_RECEIVED_ANY_LISTED_QUEST = 7;
		QUEST_PRECONDITION_MONTH_YEAR_BUCKET = 8;
		QUEST_PRECONDITION_EXCLUSIVE_IN_PROGRESS_GROUP = 9;
	}

	message Group {
		enum Name {
			UNSET_NAME = 0;
			GIOVANNI = 1;
		}

		Name name = 1;
	}

	message Level {
		Operator operator = 1;
		int32 level = 2;
	}

	message Medal {
		HoloBadgeType type = 1;
		Operator operator = 2;
		int32 badge_rank = 3;
	}

	message MonthYearBucket {
		int32 year = 1;
		int32 month = 2;
	}

	message Quests {
		repeated string quest_template_ids = 1;
	}

	QuestPreconditionType type = 1;
	string quest_template_id = 2;
	Level level = 3;
	Medal medal = 4;
	Quests quests = 5;
	MonthYearBucket month_year_bucket = 6;
	Group group = 7;
}

message QuestProto {
	enum Context {
		UNSET = 0;
		STORY_QUEST = 1;
		CHALLENGE_QUEST = 2;
		DAILY_COIN_QUEST = 3;
		TIMED_STORY_QUEST = 4;
	}

	enum Status {
		STATUS_UNDEFINED = 0;
		STATUS_ACTIVE = 1;
		STATUS_COMPLETED = 2;
	}

	QuestType quest_type = 1;
	DailyQuestProto daily_quest = 2;
	MultiPartQuestProto multi_part = 3;
	CatchPokemonQuestProto catch_pokemon = 4;
	AddFriendQuestProto add_friend = 5;
	TradePokemonQuestProto trade_pokemon = 6;
	DailyBuddyAffectionQuestProto daily_buddy_affection = 7;
	QuestWalkProto quest_walk = 8;
	EvolveIntoPokemonQuestProto evolve_into_pokemon = 9;
	DaysWithARowQuestProto days_in_arow = 99;
	string quest_id = 100;
	int64 quest_seed = 101;
	Context quest_context = 102;
	string template_id = 103;
	int32 progress = 104;
	QuestGoalProto goal = 105;
	Status status = 106;
	repeated QuestRewardProto quest_rewards = 107;
	int64 creation_timestamp_ms = 108;
	int64 last_update_timestamp_ms = 109;
	int64 compeletion_timestamp_ms = 110;
	string fort_id = 111;
	bool admin_generated = 112;
	bool stamp_count_override_enabled = 113;
	int32 stamp_count_override = 114;
	int64 s2_cell_id = 115;
	int32 story_quest_template_version = 116;
	DailyCounterProto daily_counter = 117;
	string reward_pokemon_icon_url = 118;
	int64 end_timestamp_ms = 119;
}

message QuestRewardProto {
	enum Type {
		UNSET = 0;
		EXPERIENCE = 1;
		ITEM = 2;
		STARDUST = 3;
		CANDY = 4;
		AVATAR_CLOTHING = 5;
		QUEST = 6;
		POKEMON_ENCOUNTER = 7;
		POKECOIN = 8;
		STICKER = 11;
	}

	Type type = 1;
	int32 exp = 2;
	ItemRewardProto item = 3;
	int32 stardust = 4;
	PokemonCandyRewardProto candy = 5;
	string avatar_template_id = 6;
	string quest_template_id = 7;
	PokemonEncounterRewardProto pokemon_encounter = 8;
	int32 pokecoin = 9;
	string sticker_id = 12;
}

message QuestSettingsProto {
	QuestType quest_type = 1;
	DailyQuestSettings daily_quest = 2;
}

message QuestsProto {
	repeated QuestProto quest = 1;
	repeated string completed_story_quest = 2;
	repeated QuestPokemonEncounterProto quest_pokemon_encounter = 3;
	QuestStampCardProto stamp_card = 4;
}

message QuestStampCardProto {
	repeated QuestStampProto stamp = 1;
	int32 target = 2;
	int32 remaining_daily_stamps = 3;
	string id = 4;
	string icon_url = 5;
}

message QuestStampProto {
	QuestProto.Context context = 1;
	uint64 timestamp_ms = 2;
}

message QuestWalkProto {
	float quest_start_km_walked = 1;
}

message QuitCombatOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_COMBAT_NOT_FOUND = 2;
		ERROR_INVALID_COMBAT_STATE = 3;
		ERROR_PLAYER_NOT_IN_COMBAT = 4;
	}

	Result result = 1;
	CombatProto combat = 2;
}

message QuitCombatProto {
	string combat_id = 1;
}

message RaidClientSettingsProto {
	bool remote_raid_enabled = 1;
	int32 max_remote_raid_passes = 2;
	float remote_damage_modifier = 3;
	int32 remote_raids_min_player_level = 4;
	int32 max_num_friend_invites = 5;
	int32 friend_invite_cutoff_time_sec = 6;
	bool can_invite_friends_in_person = 7;
	bool can_invite_friends_remotely = 8;
	int32 max_players_per_lobby = 9;
	int32 max_remote_players_per_lobby = 10;
}

message RaidEncounterProto {
	PokemonProto pokemon = 1;
	int64 encounter_id = 2;
	string spawnpoint_id = 3;
	CaptureProbabilityProto capture_probabilities = 4;
	int32 throws_remaining = 5;
	RaidLevel raid_level = 6;
	string fort_id = 7;
	bool is_exclusive = 8;
	bool is_event_legendary = 9;
}

message RaidInfoProto {
	int64 raid_seed = 1;
	int64 raid_spawn_ms = 2;
	int64 raid_battle_ms = 3;
	int64 raid_end_ms = 4;
	PokemonProto raid_pokemon = 5;
	RaidLevel raid_level = 6;
	bool complete = 7;
	bool is_exclusive = 8;
	bool is_raid_hidden = 9;
	bool is_scheduled_raid = 10;
	bool is_free = 11;
	string campaign_id = 12;
}

message RaidInvitationDetails {
	string gym_id = 1;
	repeated int32 lobby_id = 2;
	int64 raid_seed = 3;
	int64 raid_invitation_expire_ms = 4;
	RaidLevel raid_level = 5;
	string gym_name = 6;
	string image_url = 7;
	double latitude = 8;
	double longitude = 9;
	HoloPokemonId raid_pokemon_id = 10;
	PokemonDisplayProto.Form raid_pokemon_form = 11;
	string inviter_id = 12;
	string inviter_nickname = 13;
	PlayerAvatarProto inviter_avatar = 14;
	Team inviter_team = 15;
}

message RaidInviteFriendsSettingsProto {
	int32 raid_invite_min_level = 1;
}

message RaidProto {
	int64 raid_seed = 1;
	int64 started_ms = 2;
	int64 completed_ms = 3;
	HoloPokemonId encounter_pokemon_id = 4;
	bool completed_battle = 5;
	bool received_rewards = 6;
	bool finished_encounter = 7;
	bool received_default_rewards = 8;
	bool incremented_raid_friends = 9;
	int64 completed_battle_ms = 10;
	int32 num_friend_invites = 11;
	bool is_remote = 12;
}

message RaidRewardsLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	bool is_exclusive = 2;
	repeated ItemProto items = 3;
	repeated ItemProto default_rewards = 4;
	int32 stardust = 5;
}

message RaidTelemetry {
	RaidTelemetryIds raid_telemetry_id = 1;
	string bundle_version = 2;
	float time_since_enter_raid = 3;
	float time_since_last_raid_telemetry = 4;
	int32 raid_level = 5;
	bool private_lobby = 6;
	string ticket_item = 7;
	int32 num_players_in_lobby = 8;
	int32 battle_party_number = 9;
}

message RaidTicketProto {
	string ticket_id = 1;
	Item item = 2;
	ExclusiveTicketInfoProto exclusive_info = 4;
}

message RaidTicketsProto {
	repeated RaidTicketProto raid_ticket = 1;
}

message RangeProto {
	int32 min = 1;
	int32 max = 2;
}

message ReadPointOfInterestDescriptionTelemetry {
	string result = 1;
	string fort_id = 2;
	int32 fort_type = 3;
	string partner_id = 4;
	string campaign_id = 5;
}

message ReassignPlayerOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	int32 reassigned_instance = 2;
}

message ReassignPlayerProto {
	int32 current_instance = 1;
}

message RecycleItemOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_ENOUGH_COPIES = 2;
		ERROR_CANNOT_RECYCLE_INCUBATORS = 3;
	}

	Result result = 1;
	int32 new_count = 2;
}

message RecycleItemProto {
	Item item = 1;
	int32 count = 2;
}

message RedeemedAvatarItemProto {
	string avatar_template_id = 1;
	int32 item_count = 2;
}

message RedeemedItemProto {
	Item item = 1;
	int32 item_count = 2;
}

message RedeemedStickerProto {
	string sticker_id = 1;
	int32 count = 2;
}

message RedeemPasscodeRewardProto {
	repeated RedeemedItemProto items = 1;
	repeated RedeemedAvatarItemProto avatar_items = 2;
	repeated PokemonProto egg_pokemon = 3;
	repeated PokemonProto pokemon = 4;
	repeated PokeCandyProto poke_candy = 5;
	int32 stardust = 6;
	int32 pokecoins = 7;
	repeated HoloBadgeType badges = 8;
	repeated RedeemedStickerProto redeemed_stickers = 9;
}

message RegisterBackgroundDeviceActionProto {
	string device_type = 1;
	string device_id = 2;
}

message RegisterBackgroundDeviceResponseProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR = 2;
	}

	Status status = 1;
	BackgroundToken token = 2;
}

message RegisterSfidaRequest {
	string sfida_id = 1;
}

message RegisterSfidaResponse {
	bytes access_token = 1;
}

message ReleasePokemonOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		POKEMON_DEPLOYED = 2;
		FAILED = 3;
		ERROR_POKEMON_IS_EGG = 4;
		ERROR_POKEMON_IS_BUDDY = 5;
	}

	Status status = 1;
	int32 candy_awarded = 2;
	int32 xl_candy_awarded = 3;
}

message ReleasePokemonProto {
	fixed64 pokemon_id = 1;
	repeated fixed64 pokemon_ids = 2;
}

message ReleasePokemonTelemetry {
	PokemonTelemetry pokemon = 1;
}

message RemoteGiftPingRequestProto {
}

message RemoteGiftPingResponseProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		STILL_IN_COOL_DOWN = 2;
		BUDDY_NOT_SET = 3;
		ERROR_INVENTORY_FULL = 4;
		ERROR_NO_REMOTE_GIFTS = 5;
	}

	Result result = 1;
}

message RemoteRaidTelemetry {
	RemoteRaidTelemetryIds remote_raid_telemetry_id = 1;
	RemoteRaidJoinSource remote_raid_join_source = 2;
	RemoteRaidInviteAcceptSource remote_raid_invite_accept_source = 3;
}

message RemoveQuestOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_QUEST_NOT_FOUND = 2;
		ERROR_STORY_QUEST_NOT_REMOVABLE = 3;
	}

	Status status = 1;
}

message RemoveQuestProto {
	string quest_id = 1;
}

message ReviveAttributesProto {
	float sta_percent = 1;
}

message RpcResponseTelemetry {
	float window_duration = 1;
	repeated RpcResponseTime response_timings = 2;
}

message RpcResponseTime {
	Method rpc_id = 1;
	int32 count_call = 2;
	float average_response_time = 3;
}

message RpcSocketResponseTelemetry {
	float window_duration = 1;
	repeated RpcSocketResponseTime response_timings = 2;
}

message RpcSocketResponseTime {
	uint64 request_id = 1;
	string probe_id = 2;
	float response_time = 3;
	bool side_channel = 4;
	bool ad_hoc = 5;
	float ad_hoc_delay = 6;
}

message SaveCombatPlayerPreferencesOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
}

message SaveCombatPlayerPreferencesProto {
	CombatPlayerPreferencesProto preferences = 1;
}

message SavePlayerSnapshotOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		TOO_SOON_TO_UPDATE = 2;
		ERROR_FAILED_TO_UPDATE = 3;
		ERROR_REQUEST_TIMED_OUT = 4;
	}

	Result result = 1;
}

message SavePlayerSnapshotProto {
}

message SaveSocialPlayerSettingsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
	}

	Result result = 1;
}

message SaveSocialPlayerSettingsProto {
	SocialPlayerSettingsProto settings = 1;
}

message ScreenResolutionTelemetry {
	int32 device_width = 1;
	int32 device_height = 2;
}

message SendGiftLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	string friend_codename = 2;
}

message SendGiftOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_PLAYER_DOES_NOT_EXIST = 3;
		ERROR_GIFT_DOES_NOT_EXIST = 4;
		ERROR_GIFT_ALREADY_SENT_TODAY = 5;
		ERROR_PLAYER_HAS_UNOPENED_GIFT = 6;
		ERROR_FRIEND_UPDATE = 7;
		ERROR_PLAYER_HAS_NO_STICKERS = 8;
	}

	Result result = 1;
	int32 awarded_xp = 2;
}

message SendGiftProto {
	fixed64 giftbox_id = 1;
	string player_id = 2;
	repeated StickerSentProto stickers_sent = 3;
}

message SendProbeOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	string id = 2;
	int64 server_timestamp_ms = 3;
}

message SendProbeProto {
}

message SendRaidInvitationOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NO_PERMISSION = 2;
		ERROR_GYM_NOT_FOUND = 3;
		ERROR_LOBBY_NOT_FOUND = 4;
		ERROR_PAST_CUT_OFF_TIME = 5;
		ERROR_NO_INVITES_REMAINING = 6;
		ERROR_LOBBY_FULL = 7;
		ERROR_INVITER_NOT_FOUND = 8;
	}

	Result result = 1;
	int32 num_friend_invites_remaining = 2;
}

message SendRaidInvitationProto {
	repeated string invitee_ids = 1;
	string gym_id = 2;
	repeated int32 lobby_id = 3;
	double gym_lat_degrees = 4;
	double gym_lng_degrees = 5;
}

message SetAvatarItemAsViewedOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	Result result = 1;
}

message SetAvatarItemAsViewedProto {
	repeated string avatar_template_id = 1;
}

message SetAvatarOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		AVATAR_ALREADY_SET = 2;
		FAILURE = 3;
		SLOT_NOT_ALLOWED = 4;
		ITEM_NOT_OWNED = 5;
		INVALID_AVATAR_TYPE = 6;
	}

	Status status = 1;
	ClientPlayerProto player = 2;
}

message SetAvatarProto {
	PlayerAvatarProto player_avatar_proto = 2;
}

message SetBuddyPokemonOutProto {
	enum Result {
		UNEST = 0;
		SUCCESS = 1;
		ERROR_POKEMON_DEPLOYED = 2;
		ERROR_POKEMON_NOT_OWNED = 3;
		ERROR_POKEMON_IS_EGG = 4;
		ERROR_INVALID_POKEMON = 5;
		ERROR_BUDDY_SWAP_LIMIT_EXCEEDED = 6;
	}

	Result result = 1;
	BuddyPokemonProto updated_buddy = 2;
	BuddyObservedData observed_data = 3;
	double km_remaining = 4;
}

message SetBuddyPokemonProto {
	fixed64 pokemon_id = 1;
}

message SetContactSettingsOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}

	Status status = 1;
	ClientPlayerProto player = 2;
}

message SetContactSettingsProto {
	ContactSettingsProto contact_settings_proto = 1;
}

message SetFavoritePokemonOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_POKEMON_NOT_FOUND = 2;
		ERROR_POKEMON_IS_EGG = 3;
	}

	Result result = 1;
}

message SetFavoritePokemonProto {
	int64 pokemon_id = 1;
	bool is_favorite = 2;
}

message SetFriendNicknameOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_NOT_FRIENDS = 3;
		ERROR_EXCEEDED_NICKNAME_LENGTH = 4;
		ERROR_SOCIAL_UPDATE = 5;
		ERROR_FILTERED_NICKNAME = 6;
		ERROR_EXCEEDED_CHANGE_LIMIT = 7;
	}

	Result result = 1;
}

message SetFriendNicknameProto {
	string friend_id = 1;
	string friend_nickname = 2;
}

message SetLobbyPokemonOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_LOBBY_NOT_FOUND = 2;
		ERROR_RAID_UNAVAILABLE = 3;
		ERROR_INVALID_POKEMON = 4;
	}

	Result result = 1;
	LobbyProto lobby = 2;
}

message SetLobbyPokemonProto {
	int64 raid_seed = 1;
	string gym_id = 2;
	repeated int32 lobby_id = 3;
	repeated fixed64 pokemon_id = 4;
}

message SetLobbyVisibilityOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_LOBBY_CREATOR = 2;
		ERROR_LOBBY_NOT_FOUND = 3;
		ERROR_RAID_UNAVAILABLE = 4;
	}

	Result result = 1;
	LobbyProto lobby = 2;
}

message SetLobbyVisibilityProto {
	int64 raid_seed = 1;
	string gym_id = 2;
	repeated int32 lobby_id = 3;
}

message SetPlayerTeamOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		TEAM_ALREADY_SET = 2;
		FAILURE = 3;
	}

	Status status = 1;
	ClientPlayerProto player = 2;
}

message SetPlayerTeamProto {
	Team team = 1;
}

message SfidaGlobalSettingsProto {
	float low_battery_threshold = 1;
}

message ShadowAttributesProto {
	uint32 purification_stardust_needed = 1;
	uint32 purification_candy_needed = 2;
	HoloPokemonMove purified_charge_move = 3;
	HoloPokemonMove shadow_charge_move = 4;
}

message SharedExclusiveTicketTrainerInfo {
	string codename = 1;
	string player_id = 2;
}

message ShareExRaidPassLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	string friend_codename = 2;
}

message ShareExRaidPassOutProto {
	ShareExRaidPassResult result = 1;
	FriendshipLevelDataProto updated_friendship_data = 2;
	PlayerPublicProfileProto friend_profile = 3;
}

message ShareExRaidPassProto {
	string friend_id = 1;
	string fort_id = 2;
	int64 raid_seed = 3;
}

message ShoppingPageClickTelemetry {
	ShoppingPageTelemetryIds shopping_page_click_id = 1;
	ShoppingPageTelemetrySource shopping_page_click_source = 2;
	string item_sku = 3;
	bool has_item = 4;
}

message ShoppingPageScrollTelemetry {
	ShoppingPageScrollIds scroll_type = 1;
	int32 scroll_row = 2;
	int32 total_rows = 3;
}

message ShoppingPageTelemetry {
	ShoppingPageTelemetryIds shopping_page_click_id = 1;
}

message SmeargleMovesSettingsProto {
	repeated HoloPokemonMove quick_moves = 1;
	repeated HoloPokemonMove cinematic_moves = 2;
}

message SocialClientSettingsProto {
	bool enable_social = 1;
	int32 max_friend_details = 2;
	int32 player_level_gate = 3;
	int32 max_friend_nickname_length = 4;
	bool enable_add_friend_via_qr_code = 5;
	bool enable_share_ex_pass = 6;
	bool enable_facebook_friends = 7;
	int32 facebook_friend_limit_per_request = 8;
	bool disable_facebook_friends_opening_prompt = 9;
	bool enable_giftability_v2 = 11;
	bool enable_remote_gifting = 12;
	bool enable_sticker = 13;
}

message SocialGiftCountTelemetry {
	int32 unopened_gift_count = 1;
	int32 unsent_gift_count = 2;
}

message SocialPlayerSettingsProto {
	bool disable_last_pokemon_caught = 1;
}

message SocialTelemetry {
	SocialTelemetryIds social_click_id = 1;
	int32 pages_scrolled_in_friends_list = 2;
}

message SouvenirProto {
	message SouvenirDetails {
		int64 time_picked_up = 1;
		double latitude = 3;
		double longitude = 4;
	}

	SouvenirTypeId souvenir_type_id = 1;
	repeated SouvenirDetails souvenirs_details = 2;
}

message SpawnTablePokemonProto {
	HoloPokemonId pokemon_id = 1;
	float weight = 2;
	PokemonDisplayProto.Form form = 3;
}

message SpinPokestopTelemetry {
	string result = 1;
	string fort_id = 2;
	int32 fort_type = 3;
	repeated PokestopReward pokestop_rewards = 4;
	int32 total_rewards = 5;
}

message SponsoredDetailsProto {
	enum PromoButtonMessageType {
		UNSET = 0;
		LEARN_MORE = 1;
		OFFER = 2;
	}

	repeated string promo_image_url = 1;
	repeated string promo_description = 2;
	string call_to_action_link = 3;
	PromoButtonMessageType promo_button_message_type = 4;
	string campaign_id = 5;
	ImageTextCreativeProto promo_image_creative = 6;
}

message StardustBoostAttributesProto {
	float stardust_multiplier = 1;
	int32 boost_duration_ms = 2;
}

message StartGymBattleOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_GYM_NOT_FOUND = 2;
		ERROR_GYM_NEUTRAL = 3;
		ERROR_GYM_WRONG_TEAM = 4;
		ERROR_GYM_EMPTY = 5;
		ERROR_INVALID_DEFENDER = 6;
		ERROR_TRAINING_INVALID_ATTACKER_COUNT = 7;
		ERROR_ALL_POKEMON_FAINTED = 8;
		ERROR_TOO_MANY_BATTLES = 9;
		ERROR_TOO_MANY_PLAYERS = 10;
		ERROR_GYM_BATTLE_LOCKOUT = 11;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 12;
		ERROR_NOT_IN_RANGE = 13;
		ERROR_POI_INACCESSIBLE = 14;
	}

	Result result = 1;
	int64 battle_start_ms = 2;
	int64 battle_end_ms = 3;
	string battle_id = 4;
	BattleParticipantProto defender = 5;
	BattleLogProto battle_log = 6;
	BattleParticipantProto attacker = 7;
	BattleProto battle = 8;
}

message StartGymBattleProto {
	string gym_id = 1;
	repeated fixed64 attacking_pokemon_id = 2;
	fixed64 defending_pokemon_id = 3;
	double player_lat_degrees = 4;
	double player_lng_degrees = 5;
}

message StartIncidentOutProto {
	enum Status {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NOT_IN_RANGE = 2;
		ERROR_INCIDENT_COMPLETED = 3;
		ERROR_INCIDENT_NOT_FOUND = 4;
		ERROR_PLAYER_BELOW_MIN_LEVEL = 5;
		ERROR = 6;
	}

	Status status = 1;
	ClientIncidentProto incident = 2;
}

message StartIncidentProto {
	IncidentLookupProto incident_lookup = 1;
}

message StartRaidBattleOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_GYM_NOT_FOUND = 2;
		ERROR_RAID_UNAVAILABLE = 3;
		ERROR_RAID_COMPLETED = 4;
		ERROR_INVALID_ATTACKERS = 5;
		ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 6;
		ERROR_NOT_IN_RANGE = 7;
		ERROR_POI_INACCESSIBLE = 8;
		ERROR_LOBBY_NOT_FOUND = 9;
		ERROR_NO_TICKET = 10;
		ERROR_INVALID_SERVER = 11;
		ERROR_NEVER_JOINED_BATTLE = 12;
	}

	Result result = 1;
	BattleProto battle = 2;
}

message StartRaidBattleProto {
	string gym_id = 1;
	int64 raid_seed = 2;
	repeated int32 lobby_id = 4;
	repeated fixed64 attacking_pokemon_id = 5;
	double player_lat_degrees = 6;
	double player_lng_degrees = 7;
	double gym_lat_degrees = 8;
	double gym_lng_degrees = 9;
}

message StartTutorialOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_PLAYER_ALREADY_STARTED_TUTORIAL = 2;
		ERROR_FAILED_TO_START = 3;
	}

	Result result = 1;
}

message StartTutorialProto {
	bool onboarding_v2_enabled = 1;
}

message StickerMetadataProto {
	string sticker_id = 1;
	string sticker_url = 2;
	int32 max_count = 3;
	HoloPokemonId pokemon_id = 4;
}

message StickerProto {
	string sticker_id = 1;
	int32 count = 2;
	int32 used = 3;
}

message StickerSentProto {
	string sticker_id = 1;
}

message SubmitCombatChallengePokemonsOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_CHALLENGE_STATE = 2;
		ERROR_CHALLENGE_NOT_FOUND = 3;
		ERROR_POKEMON_NOT_IN_INVENTORY = 4;
		ERROR_NOT_ELIGIBLE_LEAGUE = 5;
		ERROR_ALREADY_TIMEDOUT = 6;
		ERROR_ALREADY_CANCELLED = 7;
		ERROR_ACCESS_DENIED = 8;
		ERROR_ALREADY_DECLINED = 9;
	}

	Result result = 1;
	CombatChallengeProto challenge = 2;
}

message SubmitCombatChallengePokemonsProto {
	string challenge_id = 1;
	repeated fixed64 attacking_pokemon_id = 2;
}

message TeamChangeInfoProto {
	int64 last_acquired_time = 1;
	int32 num_items_acquired = 2;
}

message TelemetryCommon {
	int64 timestamp = 1;
	string correlation_vector = 2;
	string event_id = 3;
	int64 client_timestamp_ms = 4;
}

message TelemetryGlobalSettingsProto {
	bool enabled = 1;
	double session_sampling_fraction = 2;
	int32 max_buffer_size_kb = 3;
	int32 batch_size = 4;
	int64 update_interval_ms = 5;
	int64 frame_rate_sample_interval_ms = 6;
	int64 frame_rate_sample_period_ms = 7;
	bool enable_omni_wrapper_sending = 8;
}

message ThirdMoveGlobalSettingsProto {
	bool unlock_enabled = 1;
}

message TimedQuestSectionProto {
	string quest_id = 1;
}

message TodayViewProto {
	repeated TodayViewSectionProto sections = 1;
}

message TodayViewSectionProto {
	PokecoinSectionProto pokecoin = 1;
	GymPokemonSectionProto gym_pokemon = 2;
	DailyStreaksProto streaks = 3;
	EventSectionProto event = 4;
	UpNextSectionProto up_next = 5;
	TimedQuestSectionProto timed_quest = 6;
}

message TradePokemonQuestProto {
	repeated string friend_id = 1;
}

message TradingGlobalSettingsProto {
	bool enable_trading = 1;
	uint32 min_player_level = 2;
}

message TradingLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	string friend_codename = 2;
	PokemonProto trade_out_pokemon = 3;
	PokemonProto trade_in_pokemon = 4;
	LootProto rewards = 5;
	LootProto price = 6;
}

message TradingProto {
	enum ExclusionReason {
		UNSET_EXCLUSIONREASON = 0;
		MYTHICAL_POKEMON = 1;
		SLASHED = 2;
		GYM_DEPLOYED = 3;
		BUDDY = 4;
		STAMINA_NOT_FULL = 5;
		EGG_NOT_HATCHED = 6;
		FRIENDSHIP_LEVEL_LOW = 7;
		FRIEND_CANNOT_AFFORD = 8;
		FRIEND_REACHED_DAILY_LIMIT = 9;
		ALREADY_TRADED = 10;
		PLAYER_CANNOT_AFFORD = 11;
		PLAYER_REACHED_DAILY_LIMIT = 12;
		FAVORITE = 13;
	}

	enum TradingState {
		UNSET_TRADINGSTATE = 0;
		PRIMORDIAL = 1;
		WAIT = 2;
		ACTIVE = 3;
		CONFIRMED = 4;
		FINISHED = 5;
	}

	message ExcludedPokemon {
		enum ExclusionReason {
			UNSET_EXCLUSIONREASON = 0;
			MYTHICAL_POKEMON = 1;
			SLASHED = 2;
			GYM_DEPLOYED = 3;
			BUDDY = 4;
			STAMINA_NOT_FULL = 5;
			EGG_NOT_HATCHED = 6;
			FRIENDSHIP_LEVEL_LOW = 7;
			FRIEND_CANNOT_AFFORD = 8;
			FRIEND_REACHED_DAILY_LIMIT = 9;
			ALREADY_TRADED = 10;
			PLAYER_CANNOT_AFFORD = 11;
			PLAYER_REACHED_DAILY_LIMIT = 12;
			FAVORITE = 13;
		}

		fixed64 pokemon_id = 1;
		ExclusionReason exclusion_reason = 2;
	}

	message TradingPlayerProto {
		enum ExclusionReason {
			UNSET_EXCLUSIONREASON = 0;
			MYTHICAL_POKEMON = 1;
			SLASHED = 2;
			GYM_DEPLOYED = 3;
			BUDDY = 4;
			STAMINA_NOT_FULL = 5;
			EGG_NOT_HATCHED = 6;
			FRIENDSHIP_LEVEL_LOW = 7;
			FRIEND_CANNOT_AFFORD = 8;
			FRIEND_REACHED_DAILY_LIMIT = 9;
			ALREADY_TRADED = 10;
			PLAYER_CANNOT_AFFORD = 11;
			PLAYER_REACHED_DAILY_LIMIT = 12;
			FAVORITE = 13;
		}

		message ExcludedPokemon {
			enum ExclusionReason {
				UNSET_EXCLUSIONREASON = 0;
				MYTHICAL_POKEMON = 1;
				SLASHED = 2;
				GYM_DEPLOYED = 3;
				BUDDY = 4;
				STAMINA_NOT_FULL = 5;
				EGG_NOT_HATCHED = 6;
				FRIENDSHIP_LEVEL_LOW = 7;
				FRIEND_CANNOT_AFFORD = 8;
				FRIEND_REACHED_DAILY_LIMIT = 9;
				ALREADY_TRADED = 10;
				PLAYER_CANNOT_AFFORD = 11;
				PLAYER_REACHED_DAILY_LIMIT = 12;
				FAVORITE = 13;
			}

			fixed64 pokemon_id = 1;
			ExclusionReason exclusion_reason = 2;
		}

		string player_id = 1;
		PlayerPublicProfileProto public_profile = 2;
		repeated ExcludedPokemon excluded_pokemon = 3;
		TradingPokemonProto trading_pokemon = 4;
		LootProto bonus = 5;
		LootProto price = 6;
		bool can_afford_trading = 7;
		bool has_confirmed = 8;
	}

	message TradingPokemonProto {
		fixed64 pokemon_id = 1;
		int32 pokedex_entry_number = 2;
		int32 original_cp = 3;
		int32 adjusted_cp_min = 4;
		int32 adjusted_cp_max = 5;
		int32 original_stamina = 6;
		int32 adjusted_stamina_min = 7;
		int32 adjusted_stamina_max = 8;
		bool friend_level_cap = 9;
		int32 move1 = 10;
		int32 move2 = 11;
		PokemonDisplayProto pokemon_display = 12;
		int64 captured_s2_cell_id = 13;
		PokemonProto traded_pokemon = 14;
		Item pokeball = 15;
		int32 individual_attack = 16;
		int32 individual_defense = 17;
		int32 individual_stamina = 18;
		string nickname = 19;
		bool favorite = 20;
		int32 move3 = 21;
		int64 creation_time_ms = 22;
	}

	TradingState state = 1;
	uint64 expiration_ms = 2;
	TradingPlayerProto player = 3;
	TradingPlayerProto friend = 4;
	int64 trading_s2_cell_id = 5;
	string transaction_log = 6;
	FriendshipLevelDataProto friendship_level_data = 7;
	bool is_special_trading = 8;
	FriendshipLevelDataProto pre_trading_friendship_level = 9;
}

message TranslationSettingsProto {
	repeated string translation_bundle_ids = 1;
}

message TwoWaySharedFriendshipDataProto {
	message SharedMigrations {
		bool is_gifting_migrated = 1;
	}

	bool is_lucky = 1;
	int32 lucky_count = 2;
	SharedMigrations shared_migrations = 3;
}

message TypeEffectiveSettingsProto {
	repeated float attack_scalar = 1;
	HoloPokemonType attack_type = 2;
}

message UncommentAnnotationTestProto {
	string string_property = 1;
	int64 long_property = 2;
}

message UnlockPokemonMoveOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_POKEMON_NOT_FOUND = 2;
		ERROR_UNLOCK_NOT_AVAILABLE = 3;
		ERROR_ALREADY_UNLOCKED = 4;
		ERROR_INSUFFICIENT_RESOURCES = 5;
		ERROR_DISABLED = 6;
	}

	Result result = 1;
	PokemonProto unlocked_pokemon = 2;
}

message UnlockPokemonMoveProto {
	fixed64 pokemon_id = 1;
}

message UpdateCombatOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_COMBAT_STATE = 2;
		ERROR_COMBAT_NOT_FOUND = 3;
		ERROR_PLAYER_NOT_IN_COMBAT = 4;
		ERROR_ILLEGAL_ACTION = 5;
		ERROR_INVALID_SUBMIT_TIME = 6;
		ERROR_PLAYER_IN_MINIGAME = 7;
		ERROR_EXISTING_QUEUED_ATTACK = 8;
		ERROR_INVALID_CHANGE_POKEMON = 9;
		ERROR_INSUFFICIENT_ENERGY = 10;
		ERROR_INVALID_MOVE = 11;
		ERROR_INVALID_DURATION_TURNS = 12;
		ERROR_INVALID_MINIGAME_STATE = 13;
		ERROR_INVALID_QUICK_SWAP_POKEMON = 14;
		ERROR_QUICK_SWAP_NOT_AVAILABLE = 15;
	}

	Result result = 1;
	CombatProto combat = 2;
}

message UpdateCombatProto {
	string combat_id = 1;
	CombatActionProto action = 2;
	string debug_log = 3;
}

message UpdateInvasionBattleOutProto {
	InvasionStatus.Status status = 1;
	LootProto rewards = 2;
	bool map_fragment_upgraded = 3;
}

message UpdateInvasionBattleProto {
	enum UpdateType {
		POKEMON_HEALTH = 0;
		WIN_BATTLE = 1;
		LOSE_BATTLE = 2;
	}

	IncidentLookupProto incident_lookup = 1;
	int32 step = 2;
	repeated PokemonStaminaUpdateProto health_update = 3;
	bool complete_battle = 4;
	UpdateType update_type = 5;
}

message UpdateTradingOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_UNKNOWN = 2;
		ERROR_FRIEND_NOT_FOUND = 3;
		ERROR_INVALID_PLAYER_ID = 4;
		ERROR_INVALID_STATE = 5;
		ERROR_STATE_HANDLER = 6;
		ERROR_INVALID_POKEMON = 7;
		ERROR_INSUFFICIENT_PAYMENT = 8;
		ERROR_TRADING_EXPIRED = 9;
		ERROR_TRADING_FINISHED = 10;
	}

	Result result = 1;
	TradingProto trading = 2;
}

message UpdateTradingProto {
	string player_id = 1;
	fixed64 pokemon_id = 2;
}

message UpgradePokemonOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_POKEMON_NOT_FOUND = 2;
		ERROR_INSUFFICIENT_RESOURCES = 3;
		ERROR_UPGRADE_NOT_AVAILABLE = 4;
		ERROR_POKEMON_IS_DEPLOYED = 5;
		ERROR_DUPLICATE_REQUEST = 6;
	}

	message BulkUpgradesCost {
		int32 number_of_upgrades = 1;
		int32 pokemon_level = 2;
		int32 pokemon_cp = 3;
		int32 total_stardust_cost = 4;
		int32 total_candy_cost = 5;
		float total_cp_multiplier = 6;
		int32 total_xl_candy_cost = 7;
	}

	Result result = 1;
	PokemonProto upgraded_pokemon = 2;
	PokemonProto next_upgraded_pokemon = 3;
	repeated BulkUpgradesCost bulk_upgrades_cost_table = 4;
}

message UpgradePokemonProto {
	fixed64 pokemon_id = 1;
	bool preview = 2;
	uint32 number_of_upgrades = 3;
	int32 pokemon_current_cp = 4;
}

message UpNextSectionProto {
	repeated string event_id = 1;
}

message UpsightLoggingSettingsProto {
	bool use_verbose_logging = 1;
	int32 logging_percentage = 2;
	bool disable_logging = 3;
}

message UseIncenseActionOutProto {
	enum Result {
		UNKNOWN = 0;
		SUCCESS = 1;
		INCENSE_ALREADY_ACTIVE = 2;
		NONE_IN_INVENTORY = 3;
		LOCATION_UNSET = 4;
	}

	Result result = 1;
	AppliedItemProto applied_incense = 2;
}

message UseIncenseActionProto {
	Item incense_type = 1;
}

message UseItemCaptureOutProto {
	bool success = 1;
	double item_capture_mult = 2;
	double item_flee_mult = 3;
	bool stop_movement = 4;
	bool stop_attack = 5;
	bool target_max = 6;
	bool target_slow = 7;
}

message UseItemCaptureProto {
	Item item = 1;
	fixed64 encounter_id = 2;
	string spawn_point_guid = 3;
}

message UseItemEggIncubatorOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INCUBATOR_NOT_FOUND = 2;
		ERROR_POKEMON_EGG_NOT_FOUND = 3;
		ERROR_POKEMON_ID_NOT_EGG = 4;
		ERROR_INCUBATOR_ALREADY_IN_USE = 5;
		ERROR_POKEMON_ALREADY_INCUBATING = 6;
		ERROR_INCUBATOR_NO_USES_REMAINING = 7;
	}

	Result result = 1;
	EggIncubatorProto egg_incubator = 2;
}

message UseItemEggIncubatorProto {
	string item_id = 1;
	int64 pokemond_id = 2;
}

message UseItemEncounterOutProto {
	enum Status {
		SUCCESS = 0;
		ALREADY_COMPLETED = 1;
		ACTIVE_ITEM_EXISTS = 2;
		NO_ITEM_IN_INVENTORY = 3;
		INVALID_ITEM_CATEGORY = 4;
	}

	Status status = 1;
	CaptureProbabilityProto capture_probability = 2;
	Item active_item = 3;
}

message UseItemEncounterProto {
	Item item = 1;
	fixed64 encounter_id = 2;
	string spawn_point_guid = 3;
}

message UseItemMoveRerollOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		NO_POKEMON = 2;
		NO_OTHER_MOVES = 3;
		NO_PLAYER = 4;
		WRONG_ITEM_TYPE = 5;
		ITEM_NOT_IN_INVENTORY = 6;
		INVALID_POKEMON = 7;
		MOVE_LOCKED = 8;
		MOVE_CANNOT_BE_REROLLED = 9;
		INVALID_ELITE_MOVE = 10;
	}

	Result result = 1;
	PokemonProto updated_pokemon = 2;
}

message UseItemMoveRerollProto {
	Item item = 1;
	fixed64 pokemon_id = 2;
	bool reroll_unlocked_move = 3;
	HoloPokemonMove target_elite_move = 4;
}

message UseItemPotionOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NO_POKEMON = 2;
		ERROR_CANNOT_USE = 3;
		ERROR_DEPLOYED_TO_FORT = 4;
	}

	Result result = 1;
	int32 stamina = 2;
}

message UseItemPotionProto {
	Item item = 1;
	fixed64 pokemon_id = 2;
}

message UseItemRareCandyOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		INVALID_POKEMON_ID = 2;
		NO_PLAYER = 3;
		WRONG_ITEM_TYPE = 4;
		ITEM_NOT_IN_INVENTORY = 5;
		NOT_ENOUGH_ITEMS = 6;
	}

	Result result = 1;
	HoloPokemonId pokemon_id = 2;
}

message UseItemRareCandyProto {
	Item item = 1;
	HoloPokemonId pokemon_id = 2;
	int32 candy_count = 3;
}

message UseItemReviveOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_NO_POKEMON = 2;
		ERROR_CANNOT_USE = 3;
		ERROR_DEPLOYED_TO_FORT = 4;
	}

	Result result = 1;
	int32 stamina = 2;
}

message UseItemReviveProto {
	Item item = 1;
	fixed64 pokemon_id = 2;
}

message UseItemStardustBoostOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_ITEM_TYPE = 2;
		ERROR_STARDUST_BOOST_ALREADY_ACTIVE = 3;
		ERROR_NO_ITEMS_REMAINING = 4;
		ERROR_LOCATION_UNSET = 5;
	}

	Result result = 1;
	AppliedItemsProto applied_items = 2;
}

message UseItemStardustBoostProto {
	Item item = 1;
}

message UseItemXpBoostOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
		ERROR_INVALID_ITEM_TYPE = 2;
		ERROR_XP_BOOST_ALREADY_ACTIVE = 3;
		ERROR_NO_ITEMS_REMAINING = 4;
		ERROR_LOCATION_UNSET = 5;
	}

	Result result = 1;
	AppliedItemsProto applied_items = 2;
}

message UseItemXpBoostProto {
	Item item = 1;
}

message UserAttributesProto {
	int32 level = 1;
	int64 xp_percentage = 2;
	int64 pokecoin_count = 3;
	int32 team = 4;
	int32 catch_streak = 5;
	int32 spin_streak = 6;
	string buddy_name = 7;
	bool is_egg_incubating = 8;
	bool has_eggs = 9;
	int32 star_piece_count = 10;
	int32 lucky_egg_count = 11;
	int32 incense_ordinary_count = 12;
	int32 incense_spicy_count = 13;
	int32 incense_cool_count = 14;
	int32 incense_floral_count = 15;
	int32 lure_ordinary_count = 16;
	int32 lure_mossy_count = 17;
	int32 lure_glacial_count = 18;
	int32 lure_magnetic_count = 19;
	bool using_star_piece = 20;
	bool using_lucky_egg = 21;
	bool using_incense_ordinary = 22;
	bool using_incense_spicy = 23;
	bool using_incense_cool = 24;
	bool using_incense_floral = 25;
	bool using_lure_ordinary = 26;
	bool using_lure_mossy = 27;
	bool using_lure_glacial = 28;
	bool using_lure_magnetic = 29;
	bool adventure_sync_opt_in = 30;
	bool geo_fence_opt_in = 31;
	int32 kanto_dex_count = 32;
	int32 johto_dex_count = 33;
	int32 hoenn_dex_count = 34;
	int32 sinnoh_dex_count = 35;
	int32 friend_count = 36;
	int32 field_research_stamp_progress = 37;
	int32 level_up = 38;
	bool sent_friend_request = 39;
	string is_egg_incubating_v2 = 40;
	string has_eggs_v2 = 41;
	string using_star_piece_v2 = 42;
	string using_lucky_egg_v2 = 43;
	string using_incense_ordinary_v2 = 44;
	string using_incense_spicy_v2 = 45;
	string using_incense_cool_v2 = 46;
	string using_incense_floral_v2 = 47;
	string using_lure_ordinary_v2 = 48;
	string using_lure_mossy_v2 = 49;
	string using_lure_glacial_v2 = 50;
	string using_lure_magnetic_v2 = 51;
	string adventure_sync_opt_in_v2 = 52;
	string geo_fence_opt_in_v2 = 53;
	int32 unova_dex_count = 54;
}

message UserIssueWeatherReport {
	string gameplayer_weather = 1;
	bool alert_active = 2;
	int32 severity = 3;
	int32 user_report = 4;
}

message VerifyChallengeOutProto {
	bool success = 1;
}

message VerifyChallengeProto {
	string token = 1;
}

message ViewPointOfInterestImageTelemetry {
	string result = 1;
	string fort_id = 2;
	int32 fort_type = 3;
	bool in_range = 4;
	bool was_gym_interior = 5;
	string partner_id = 6;
	string campaign_id = 7;
}

message VsSeekerAttributesProto {
	enum VsSeekerStatus {
		UNSET = 0;
		STARTED_CHARGING = 1;
		FULLY_CHARGED = 2;
		ACTIVATED = 3;
	}

	VsSeekerStatus vs_seeker_status = 1;
	double start_km_walked = 2;
	double target_km_walked = 3;
	int32 battle_granted_remaining = 4;
	int32 max_battles_in_set = 6;
	VsSeekerRewardTrack reward_track = 7;
	string battle_now_sku_id = 8;
	bool additional_battles_granted = 9;
}

message VsSeekerBattleResult {
	CombatPlayerFinishState battle_result = 1;
	bool rewards_claimed = 2;
	bool is_pending_pokemon_reward = 3;
}

message VsSeekerClientSettingsProto {
	string upgrade_iap_sku_id = 1;
	repeated string allowed_vs_seeker_league_template_id = 2;
}

message VsSeekerCompleteSeasonLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	LootProto rewards = 2;
	int32 rank = 3;
	float rating = 4;
}

message VsSeekerLootProto {
	message RewardProto {
		LootItemProto item = 1;
		bool pokemon_reward = 2;
		bool item_loot_table = 3;
		int32 item_loot_table_count = 4;
		int32 item_ranking_loot_table_count = 5;
	}

	int32 rank_level = 1;
	repeated RewardProto reward = 2;
	VsSeekerRewardTrack reward_track = 3;
}

message VsSeekerPokemonRewardsProto {
	message OverrideIvRangeProto {
		RangeProto range = 1;
		bool zero = 2;
	}

	message PokemonUnlockProto {
		PokemonEncounterRewardProto pokemon = 1;
		LimitedEditionPokemonEncounterRewardProto limited_pokemon_reward = 2;
		LimitedEditionPokemonEncounterRewardProto guaranteed_limited_pokemon_reward = 3;
		int32 unlocked_at_rank = 4;
		float weight = 5;
		OverrideIvRangeProto attack_iv_override = 6;
		OverrideIvRangeProto defense_iv_override = 7;
		OverrideIvRangeProto stamina_iv_override = 8;
	}

	repeated PokemonUnlockProto available_pokemon = 1;
	VsSeekerRewardTrack reward_track = 2;
}

message VsSeekerRewardEncounterOutProto {
	enum Result {
		VS_SEEKER_ENCOUNTER_UNKNOWN = 0;
		VS_SEEKER_ENCOUNTER_SUCCESS = 1;
		VS_SEEKER_ENCOUNTER_ALREADY_FINISHED = 2;
		ERROR_PLAYER_NOT_ENOUGH_VICTORIES = 3;
		ERROR_POKEMON_INVENTORY_FULL = 4;
		ERROR_REDEEM_ITEM = 5;
	}

	Result result = 1;
	PokemonProto pokemon = 2;
	CaptureProbabilityProto capture_probability = 3;
	Item active_item = 4;
	fixed64 encounter_id = 5;
}

message VsSeekerRewardEncounterProto {
	int32 win_index = 1;
}

message VsSeekerSetLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	LootProto rewards = 2;
	int32 new_rank = 3;
	float new_rating = 4;
	int32 previous_rank = 5;
	float previous_rating = 6;
	int32 number_of_wins = 7;
	int32 number_of_battles = 8;
}

message VsSeekerStartMatchmakingOutProto {
	enum Result {
		UNSET = 0;
		SUCCESS_OPPONENT_FOUND = 1;
		SUCCESS_QUEUED = 2;
		ERROR_NO_BATTLE_PASSES_LEFT = 3;
		ERROR_ALREADY_IN_QUEUE = 4;
		ERROR_VS_SEEKER_PLAYER_IN_WRONG_SEASON = 5;
		ERROR_PLAYER_HAS_NO_VS_SEEKER = 6;
		ERROR_ACCESS_DENIED = 7;
		ERROR_POKEMON_LINEUP_INELIGIBLE_FOR_LEAGUE = 8;
		ERROR_VS_SEEKER_NOT_ACTIVATED = 9;
		ERROR_TEMPORARILY_UNAVAILABLE = 10;
		ERROR_EXCEEDED_LIMIT = 11;
	}

	Result result = 1;
	CombatChallengeProto challenge = 2;
	string queue_id = 3;
}

message VsSeekerStartMatchmakingProto {
	string combat_league_template_id = 1;
	repeated fixed64 attacking_pokemon_id = 2;
}

message VsSeekerWinRewardsLogEntry {
	enum Result {
		UNSET = 0;
		SUCCESS = 1;
	}

	Result result = 1;
	LootProto rewards = 2;
	int32 rank = 3;
	int32 win_number = 4;
}

message WallabySettingsProto {
	bool enable = 1;
	float activity_length_s = 2;
	uint32 test_mask = 3;
}

message WeatherAffinityProto {
	GameplayWeatherProto.WeatherCondition weather_condition = 1;
	repeated HoloPokemonType pokemon_type = 2;
	repeated HoloPokemonType weakness_pokemon_type = 3;
}

message WeatherBonusProto {
	int32 cp_base_level_bonus = 1;
	int32 guaranteed_individual_values = 2;
	double stardust_bonus_multiplier = 3;
	double attack_bonus_multiplier = 4;
	int32 raid_encounter_cp_base_level_bonus = 5;
	int32 raid_encounter_guaranteed_individual_values = 6;
	int32 buddy_emotion_favorite_weather_increment = 7;
	int32 buddy_emotion_dislike_weather_decrement = 8;
}

message WeatherDetailClickTelemetry {
	string gameplay_weather_type = 1;
	bool alert_active = 2;
	int32 severity = 3;
}

message WebTelemetry {
	WebTelemetryIds web_click_ids = 1;
	string url = 2;
	string fort_id = 3;
	string partner_id = 4;
	string campaign_id = 5;
}

message WildPokemonProto {
	fixed64 encounter_id = 1;
	int64 last_modified_ms = 2;
	double latitude = 3;
	double longitude = 4;
	string spawn_point_id = 5;
	PokemonProto pokemon = 7;
	int32 time_till_hidden_ms = 11;
}

message WithBadgeTypeProto {
	repeated HoloBadgeType badge_type = 1;
	int32 badge_rank = 2;
	int32 amount = 3;
}

message WithBuddyProto {
	BuddyLevel min_buddy_level = 1;
	bool must_be_on_map = 2;
}

message WithCurveBallProto {
}

message WithDailyBuddyAffectionProto {
	int32 min_buddy_affection_earned_today = 1;
}

message WithDailyCaptureBonusProto {
}

message WithDailySpinBonusProto {
}

message WithDistanceProto {
	double distance_km = 1;
}

message WithInvasionCharacterProto {
	repeated EnumWrapper.CharacterCategory category = 1;
}

message WithItemProto {
	Item item = 1;
}

message WithLocationProto {
	repeated int64 s2_cell_id = 1;
}

message WithNpcCombatProto {
	bool requires_win = 1;
	repeated string combat_npc_trainer_id = 2;
}

message WithPlayerLevelProto {
	int32 level = 1;
}

message WithPokemonAlignmentProto {
	repeated PokemonDisplayProto.Alignment alignment = 1;
}

message WithPokemonCategoryProto {
	string category_name = 1;
	repeated HoloPokemonId pokemon_ids = 2;
}

message WithPokemonCpLimitProto {
	int32 min_cp = 1;
	int32 max_cp = 2;
}

message WithPokemonTypeProto {
	repeated HoloPokemonType pokemon_type = 1;
}

message WithPvpCombatProto {
	bool requires_win = 1;
	repeated string combat_league_template_id = 2;
}

message WithQuestContextProto {
	QuestProto.Context context = 1;
}

message WithRaidLevelProto {
	repeated RaidLevel raid_level = 1;
}

message WithSuperEffectiveChargeMoveProto {
}

message WithThrowTypeProto {
	HoloActivityType throw_type = 1;
	bool hit = 2;
}

message WithUniquePokemonProto {
}

message WithUniquePokestopProto {
}

message WithWeatherBoostProto {
}

message WithWinBattleStatusProto {
}

message WithWinGymBattleStatusProto {
}

message WithWinRaidStatusProto {
}

message PlatformClientUpgradeRequestProto {
	string version = 1;
	ClientOperatingSystem operating_system = 2;
}

message PlatformClientUpgradeResponseProto {
	bool needs_upgrade = 1;
}

message ClientWeatherProto {
	int64 s2_cell_id = 1;
	DisplayWeatherProto display_weather = 2;
	GameplayWeatherProto gameplay_weather = 3;
	repeated WeatherAlertProto alerts = 4;
}

message DisplayWeatherProto {
	enum DisplayLevel {
		LEVEL_0 = 0;
		LEVEL_1 = 1;
		LEVEL_2 = 2;
		LEVEL_3 = 3;
	}

	DisplayLevel cloud_level = 1;
	DisplayLevel rain_level = 2;
	DisplayLevel wind_level = 3;
	DisplayLevel snow_level = 4;
	DisplayLevel fog_level = 5;
	int32 wind_direction = 6;
	DisplayLevel special_effect_level = 7;
}

message GameplayWeatherProto {
	enum WeatherCondition {
		NONE = 0;
		CLEAR = 1;
		RAINY = 2;
		PARTLY_CLOUDY = 3;
		OVERCAST = 4;
		WINDY = 5;
		SNOW = 6;
		FOG = 7;
	}

	WeatherCondition gameplay_condition = 1;
}

message WeatherAlertProto {
	enum Severity {
		NONE = 0;
		MODERATE = 1;
		EXTREME = 2;
	}

	Severity severity = 1;
	bool warn_weather = 2;
}

message PasscodeRedemptionFlowRequest {
	enum DevicePlatform {
		PLATFORM_UNKNOWN = 0;
		PLATFORM_ANDROID = 1;
		PLATFORM_IOS = 2;
		PLATFORM_WEB = 3;
	}

	string passcode = 1;
	string poi_guid = 2;
	DevicePlatform device_platform = 3;
	string carrier = 4;
}

message PasscodeRedemptionFlowResponse {
	enum Status {
		STATUS_UNKNOWN = 0;
		STATUS_SUCCESS = 1;
		STATUS_ALREADY_REDEEMED = 2;
		STATUS_FAILED_INVENTORY_CHECK = 3;
		STATUS_OUT_OF_RANGE = 4;
		STATUS_WRONG_LOCATION = 5;
		STATUS_RATE_LIMITED = 6;
		STATUS_INVALID = 7;
		STATUS_FULLY_REDEEMED = 8;
		STATUS_EXPIRED = 9;
	}

	message Reward {
		string item = 1;
		int32 count = 2;
	}

	Status status = 1;
	int32 inventory_check_failed_reason = 2;
	repeated Reward rewards = 3;
	string passcode_batch_id = 5;
	bytes in_game_reward = 6;
}

enum CameraType {
	CAMERA_TYPE_DEFAULT = 0;
	CAMERA_TYPE_SHOULDER = 1;
	CAMERA_TYPE_ENEMY_POKEMON_FOCUS = 2;
	CAMERA_TYPE_MY_POKEMON_FOCUS = 3;
}

enum CameraZoomInLevel {
	CAMERA_ZOOM_IN_LEVEL_DEFAULT = 0;
	CAMERA_ZOOM_IN_LEVEL_NICE = 1;
	CAMERA_ZOOM_IN_LEVEL_GREAT = 2;
	CAMERA_ZOOM_IN_LEVEL_EXCELLENT = 3;
}

enum CurrencyType {
	CURRENCY_TYPE_UNKNOWN = 0;
	CURRENCY_TYPE_POKECOIN = 1;
	CURRENCY_TYPE_STARDUST = 2;
}

enum PresentationType {
	PRESENTATION_TYPE_UNKNOWN = 0;
	PRESENTATION_TYPE_CATEGORY = 1;
	PRESENTATION_TYPE_SORT = 2;
	PRESENTATION_TYPE_SALE = 3;
}

enum PoiImageType {
	PLATFORM_POI_IMAGE_TYPE_UNSET = 0;
	PLATFORM_POI_IMAGE_TYPE_MAIN = 1;
	PLATFORM_POI_IMAGE_TYPE_SURROUNDING = 2;
}

message PlatformApprovedCommonTelemetryProto {
	PlatformCommonTelemetryBootTime boot_time = 1;
	PlatformCommonTelemetryShopClick shop_click = 2;
	PlatformCommonTelemetryShopView shop_view = 3;
	PlatformPoiSubmissionTelemetry poi_submission_telemetry = 4;
	PlatformPoiSubmissionPhotoUploadErrorTelemetry poi_submission_photo_upload_error_telemetry = 5;
	PlatformCommonTelemetryLogIn log_in = 6;
	PlatformServerRecordMetadata server_data = 7;
	PlatformClientTelemetryCommonFilterProto common_filters = 8;
}

message PlatformClientTelemetryBatchProto {
	enum TelemetryScopeId {
		UNSET = 0;
		DITTO = 1;
		GAME = 2;
		TITAN = 3;
		COMMON = 4;
	}

	TelemetryScopeId telemetry_scope_id = 1;
	repeated PlatformClientTelemetryRecordProto events = 2;
	repeated PlatformClientTelemetryRecordProto metrics = 3;
	string api_version = 4;
	string message_version = 5;
}

message PlatformClientTelemetryClientSettingsProto {
	bool is_upload_enabled = 1;
	int64 max_upload_size_in_bytes = 2;
	int64 update_interval_in_sec = 3;
	int64 settings_update_interval_in_sec = 4;
	int64 max_envelope_queue_size = 5;
	double sampling_probability = 6;
	bool use_player_based_sampling = 7;
	double player_hash = 8;
	string player_external_omni_id = 9;
	bool disable_omni_sending = 10;
	map<string, double> special_sampling_probability_map = 11;
	string player_external_ua_id = 12;
}

message PlatformClientTelemetryCommonFilterProto {
	string application_identifier = 1;
	string operating_system_name = 2;
	string device_model = 3;
	string locale_country_code = 4;
	string locale_language_code = 5;
	double sampling_probability = 6;
}

message PlatformClientTelemetryRecordProto {
	string record_id = 1;
	bytes encoded_message = 2;
	int64 client_timestamp_ms = 3;
	int64 metric_id = 4;
	PlatformClientTelemetryCommonFilterProto common_filters = 5;
}

message PlatformClientTelemetrySettingsRequestProto {
}

message PlatformCommonTelemetryBootTime {
	string boot_phase = 1;
	int64 duration_ms = 2;
}

message PlatformCommonTelemetryLogIn {
	int64 timestamp_ms = 1;
}

message PlatformCommonTelemetryShopClick {
	enum AccessType {
		UNSPECIFIED = 0;
		PASSIVE = 1;
		ACTIVE = 2;
	}

	string shopping_page_click_id = 1;
	string sku_id = 2;
	string item_id = 3;
	string consolidated_item_id = 4;
	string currency = 5;
	int64 fiat_price = 6;
	repeated PlatformInGamePurchaseDetails in_game_purchase_details = 7;
	bool is_item_free_fiat = 8;
	bool is_item_free_ingame = 9;
	int64 time_elapsed_since_enter_page = 10;
	string root_store_page_session_id = 11;
	int64 pair_id = 12;
	string store_page_name = 13;
	string root_store_page_name = 14;
	AccessType access_type = 15;
	string fiat_formatted_price = 16;
}

message PlatformCommonTelemetryShopView {
	string shopping_page_view_type_id = 1;
	int64 view_start_timestamp_ms = 2;
	int64 view_end_timestamp_ms = 3;
	repeated string consolidated_item_id = 4;
	string root_store_page_session_id = 5;
}

message PlatformDistribution {
	message BucketOptions {
		message ExplicitBuckets {
			repeated int64 bounds = 1;
		}

		message ExponentialBuckets {
			int64 num_finite_buckets = 1;
			float growth_factor = 2;
			float scale = 3;
		}

		message LinearBuckets {
			int64 num_finite_buckets = 1;
			int64 width = 2;
			int64 offset = 3;
		}

		LinearBuckets linear_buckets = 1;
		ExponentialBuckets exponential_buckets = 2;
		ExplicitBuckets explicit_buckets = 3;
	}

	message ExplicitBuckets {
		repeated int64 bounds = 1;
	}

	message ExponentialBuckets {
		int64 num_finite_buckets = 1;
		float growth_factor = 2;
		float scale = 3;
	}

	message LinearBuckets {
		int64 num_finite_buckets = 1;
		int64 width = 2;
		int64 offset = 3;
	}

	message Range {
		int64 min = 1;
		int64 max = 2;
	}

	int64 count = 1;
	float mean = 2;
	double sum_of_squared_deviation = 3;
	Range range = 4;
	BucketOptions bucket_options = 5;
	repeated int64 bucket_counts = 6;
}

message PlatformInGamePurchaseDetails {
	string ingame_type = 1;
	int64 ingame_price = 2;
	int64 remaining_ingame_balance = 3;
}

message PlatformPlatformCommonFilterProto {
	string application_identifier = 1;
	string operating_system_name = 2;
	string device_model = 3;
	string locale_country_code = 4;
	string locale_language_code = 5;
	double sampling_probability = 6;
}

message PlatformPlatformMetricData {
	enum Kind {
		UNSPECIFIED = 0;
		GAUGE = 1;
		DELTA = 2;
		CUMULATIVE = 3;
	}

	TelemetryCommon common_telemetry = 1;
	int64 long_value = 2;
	double double_value = 3;
	bool boolean_value = 4;
	Distribution distribution = 5;
	Kind metric_kind = 6;
}

message PlatformPlatformServerData {
	string user_id = 1;
	string telemetry_id = 2;
	string session_id = 3;
	repeated int32 experiment_ids = 4;
	string event_request_id = 5;
	int64 server_timestamp_ms = 6;
}

message PlatformPoiSubmissionPhotoUploadErrorTelemetry {
	enum PoiSubmissionPhotoUploadErrorIds {
		UNSET = 0;
		POI_PHOTO_UPLOAD_ERROR = 1;
		POI_PHOTO_UPLOAD_TIMEOUT = 2;
	}

	PoiSubmissionPhotoUploadErrorIds error_id = 1;
	PoiImageType image_type = 2;
	string error_message = 3;
}

message PlatformPoiSubmissionTelemetry {
	enum PoiCameraStepIds {
		UNSET = 0;
		ENTER = 1;
		RETAKE = 2;
		CONFIRM = 3;
		EXIT = 4;
	}

	enum PoiSubmissionGuiEventId {
		UNKNOWN = 0;
		POI_NOMINATION_ENTER = 1;
		POI_TUTORIAL_COMPLETE = 2;
		POI_MAP_CHANGEDVIEW_MAP = 3;
		POI_MAP_CHANGEDVIEW_SATELLITE = 4;
		POI_MAP_CENTER_LOCATION = 5;
		POI_LOCATION_SET = 6;
		POI_PHOTO_CAMERA_ENTER = 7;
		POI_PHOTO_CAMERA_EXIT = 8;
		POI_TITLE_ENTERED = 9;
		POI_DESCRIPTION_ENTER = 10;
		POI_DETAILS_CONFIRM = 11;
		POI_SUPPORTINGINFO_ENTER = 12;
		POI_SUBMIT_BUTTON_HIT = 13;
		POI_EXIT_BUTTON_HIT = 14;
		POI_NOMINATION_GUIDELINES_HIT = 15;
	}

	PoiSubmissionGuiEventId gui_event_id = 1;
	PoiImageType image_type = 2;
	PoiCameraStepIds camera_step_id = 3;
}

message PlatformServerRecordMetadata {
	string user_id = 1;
	string telemetry_name = 2;
	string session_id = 3;
	string request_id = 4;
	int64 server_timestamp_ms = 5;
}

message PlatformTelemetryCommon {
	int64 timestamp = 1;
	string correlation_vector = 2;
	string event_id = 3;
	int64 client_timestamp_ms = 4;
}

message PlatformAppleToken {
	string id_token = 1;
}

message PlatformFbTokenProto {
	string token = 1;
}

message PlatformGoogleToken {
	string id_token = 1;
}

message PlatformSuperAwesomeTokenProto {
	string token = 1;
}

message AdDetails {
	ImageTextCreativeProto image_text_creative = 1;
	bytes encrypted_ad_token = 2;
}

message ImageTextCreativeProto {
	string name = 1;
	string title = 2;
	string description = 3;
	string preview_image_url = 4;
	string fullscreen_image_url = 5;
	string cta_link = 6;
}

message ReportAdInteractionProto {
	message CTAClickInteraction {
		string cta_url = 6;
	}

	message FullScreenInteraction {
		string fullscreen_image_url = 1;
		int64 total_residence_time_ms = 2;
		int64 time_away_ms = 3;
		bool took_screenshot = 4;
	}

	message ViewFullscreenInteraction {
		string fullscreen_image_url = 1;
	}

	message ViewImpressionInteraction {
		string preview_image_url = 1;
		bool is_persisted_gift = 2;
	}

	string game_id = 1;
	string user_id = 2;
	string guid = 3;
	bytes encrypted_ad_token = 4;
	ViewImpressionInteraction view_impression = 5;
	ViewFullscreenInteraction view_fullscreen = 6;
	FullScreenInteraction fullscreen_interaction = 7;
	CTAClickInteraction cta_clicked = 8;
}

message ReportAdInteractionResponse {
	enum Status {
		SUCCESS = 0;
		MALFORMED = 1;
		EXPIRED = 2;
	}

	Status status = 1;
}

message VasaClientAction {
	enum ActionEnum {
		INVALID_VASA_CLIENT_ACTION = 0;
		COLLECT_ADID = 8000;
	}

}

message AuthInfo {
	string provider = 1;
	JWT token = 2;
	AuthOptions options = 3;
	message JWT {
		string contents = 1;
		int32 unknown2 = 2;
	}

	message AuthOptions {
		bool prevent_account_creation = 1;
	}

}

message AuthTicket {
	bytes start = 1;
	uint64 expire_timestamp_ms = 2;
	bytes end = 3;
}
